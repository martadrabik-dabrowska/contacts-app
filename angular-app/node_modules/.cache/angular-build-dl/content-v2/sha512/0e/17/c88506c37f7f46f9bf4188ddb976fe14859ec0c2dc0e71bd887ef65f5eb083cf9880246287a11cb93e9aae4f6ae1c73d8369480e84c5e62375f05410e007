{"version":3,"sources":["./src/app/details/details-company/summary/summary.component.html","./src/app/contacts/contact-parts/person-general-informations/person-general-information.component.css","./src/app/contacts/contact-parts/company-general-informations/company-general-information.component.css","./src/app/contacts/edit-company/edit-company.component.css","./src/app/contacts/edit-company/edit-company.component.ts","./src/app/details/details-company/employees/edit-employee/edit-employee.component.ts","./src/app/contacts/contacts.component.css","./src/app/details/details-company/employees/add-employees/add-employees.component.ts","./src/app/details/details-company/details-company.component.css","./src/app/contacts/contact-parts/person-general-informations/person-general-information.component.html","./src/app/contacts/edit-person/edit-person.component.ts","./src/app/app.component.css","./src/environments/environment.ts","./src/app/details/details-person/details-person.component.html","./src/app/contacts/contact-parts/base-information/base-information.component.html","./src/app/contacts/contact-parts/base-information/base-information.component.css","./src/app/contacts/contact-parts/way-of-obtaining/way-of-obtaining.component.html","./src/app/contacts/add-contact/add-contact.component.html","./src/app/contacts/services/employee.service.ts","./src/app/details/details-company/employees/employees-list/employees-list.component.ts","./src/app/contacts/contact-parts/address/address.component.css","./src/app/details/details-company/summary/summary.component.css","./src/app/details/details-company/details-company.component.html","./src/app/contacts/contact-parts/way-of-obtaining/way-of-obtaining.component.css","./src/app/contacts/contact-parts/way-of-obtaining/way-of-obtaining.component.ts","./src/app/contacts/contact-parts/company-general-informations/company-general-information.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/details/details-person/details-person.component.ts","./src/app/contacts/contact-parts/company-general-informations/company-general-information.component.ts","./src/app/app.module.ts","./src/app/details/details-company/employees/employees-list/employees-list.component.html","./src/app/details/details-company/employees/edit-employee/edit-employee.component.html","./src/app/contacts/contact-parts/address/address.component.html","./src/app/details/details-company/employees/edit-employee/edit-employee.component.css","./src/app/details/details-company/summary/summary.component.ts","./src/app/contacts/contact-parts/person-general-informations/person-general-information.component.ts","./src/app/contacts/edit-company/edit-company.component.html","./src/app/contacts/contact-parts/base-information/base-information.component.ts","./src/app/contacts/services/company.service.ts","./src/app/contacts/contact-parts/address/address.component.ts","./src/app/contacts/contacts.component.ts","./src/app/contacts/add-contact/add-contact.component.css","./src/app/contacts/services/contact.service.ts","./src/app/details/details-company/employees/employees-list/employees-list.component.css","./src/app/details/details-company/employees/add-employees/add-employees.component.css","./src/app/details/details-company/employees/add-employees/add-employees.component.html","./src/app/contacts/add-contact/add-contact.component.ts","./src/app/details/details-person/details-person.component.css","./src/app/contacts/services/message.service.ts","./src/app/app-routing.module.ts","./src/app/contacts/contacts.component.html","./src/app/contacts/edit-person/edit-person.component.html","./src/app/details/details-company/details-company.component.ts","./src/app/contacts/edit-person/edit-person.component.css","./src/main.ts","./src/app/contacts/services/address.service.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["export default \"<div #aboveMenu>\\r\\n  <div id=\\\"left-position\\\">\\r\\n  <div class=\\\"label-div\\\">\\r\\n    <label><b>Nazwa firmy: </b></label> {{contact.company.name}}\\r\\n  </div>\\r\\n  <div class=\\\"label-div\\\">\\r\\n    <label><b>NIP: </b></label> {{contact.company.nip}}\\r\\n  </div>\\r\\n  <div>\\r\\n    <label><b>REGON: </b></label> {{contact.company.regon}}\\r\\n  </div>\\r\\n  <div>\\r\\n    <label><b>KRS: </b></label> {{contact.company.krs}}\\r\\n  </div>\\r\\n  <div>\\r\\n    <label><b>Forma prawna: </b></label> {{getForms()}}\\r\\n  </div>\\r\\n  <div *ngIf=\\\"contact.company.legalForm=='OTHER'\\\">\\r\\n    <label><b>Inna forma prawna: </b></label> {{contact.company.legalFormOther}}\\r\\n  </div>\\r\\n  <div>\\r\\n    <label><b>Telefon: </b></label> {{contact.phoneNumber}}\\r\\n  </div>\\r\\n  <div>\\r\\n    <label><b>Email: </b></label> {{contact.email}}\\r\\n  </div>\\r\\n    <div>\\r\\n      <label><b>Informacje dodatkowe: </b></label> {{contact.additionalInfo}}\\r\\n    </div>\\r\\n  </div>\\r\\n<div id=\\\"right-position\\\">\\r\\n  <div>\\r\\n    <label><b>Sposób pozyskania: </b></label> {{getWay()}}\\r\\n</div>\\r\\n  <div *ngIf=\\\"contact.wayOfObtaining=='RECOMENDATION'\\\">\\r\\n    <label><b>Rekomendujący: </b></label> {{contact.recommending}}\\r\\n  </div>\\r\\n</div>\\r\\n  <div id=\\\"bottom-position\\\">\\r\\n  <hr>\\r\\n  <h4>Adresy: </h4>\\r\\n  <div class=\\\"adress-style\\\" style=\\\"width: 400px;\\\">\\r\\n    <div *ngFor=\\\"let address of contact.addresses\\\">\\r\\n      <div class=\\\"form-group\\\" style=\\\"font-weight: bold\\\">\\r\\n        {{address.name}}\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        {{address.street}} {{address.houseNumber}}/{{address.flatNumber}}\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        {{address.zipCode}} {{address.city}}\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n  <button [routerLink]=\\\"getRouteLink(contact)\\\" [queryParams]=\\\"{id: contact.id}\\\" class=\\\"btn btn-primary\\\">Edycja</button><br>\\r\\n</div>\\r\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwZXJzb24tZ2VuZXJhbC1pbmZvcm1hdGlvbi5jb21wb25lbnQuY3NzIn0= */\";","export default \"#legal-form-other  {\\r\\n  float: right;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBhbnktZ2VuZXJhbC1pbmZvcm1hdGlvbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsWUFBWTtBQUNkIiwiZmlsZSI6ImNvbXBhbnktZ2VuZXJhbC1pbmZvcm1hdGlvbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiI2xlZ2FsLWZvcm0tb3RoZXIgIHtcclxuICBmbG9hdDogcmlnaHQ7XHJcbn1cclxuIl19 */\";","export default \".form-group {\\r\\n  width: 400px;\\r\\n}\\r\\nhr{\\r\\n  width: 100%;\\r\\n}\\r\\n.container{\\r\\n  width: 1000px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVkaXQtY29tcGFueS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsWUFBWTtBQUNkO0FBQ0E7RUFDRSxXQUFXO0FBQ2I7QUFDQTtFQUNFLGFBQWE7QUFDZiIsImZpbGUiOiJlZGl0LWNvbXBhbnkuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5mb3JtLWdyb3VwIHtcclxuICB3aWR0aDogNDAwcHg7XHJcbn1cclxuaHJ7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuLmNvbnRhaW5lcntcclxuICB3aWR0aDogMTAwMHB4O1xyXG59XHJcbiJdfQ== */\";","import {AfterViewInit, ChangeDetectorRef, Component, ViewChild, OnInit} from '@angular/core';\r\nimport {CompanyGeneralInformationComponent} from '../contact-parts/company-general-informations/company-general-information.component';\r\nimport {PersonGeneralInformationComponent} from '../contact-parts/person-general-informations/person-general-information.component';\r\n\r\nimport {AddressComponent} from '../contact-parts/address/address.component';\r\nimport {Contact, ContactService} from '../services/contact.service';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {FormControl, Validators} from '@angular/forms';\r\nimport {Way} from '../add-contact/add-contact.component';\r\nimport {WayOfObtainingComponent} from '../contact-parts/way-of-obtaining/way-of-obtaining.component';\r\nimport {BaseInformationComponent} from '../contact-parts/base-information/base-information.component';\r\n\r\n@Component({\r\n  selector: 'app-edit-company',\r\n  templateUrl: './edit-company.component.html',\r\n  styleUrls: ['./edit-company.component.css']\r\n})\r\nexport class EditCompanyComponent implements OnInit, AfterViewInit {\r\n\r\n\r\n\r\n  // @ts-ignore\r\n  @ViewChild('companya', { read: CompanyGeneralInformationComponent })\r\n  companyComponent: CompanyGeneralInformationComponent;\r\n  // @ts-ignore\r\n  @ViewChild('wayOfObtaining', { read: WayOfObtainingComponent })\r\n  wayOfObtainingComponent: WayOfObtainingComponent;\r\n  // @ts-ignore\r\n  @ViewChild('address', { read: AddressComponent })\r\n  addressComponent: AddressComponent;\r\n  @ViewChild('baseInformation', { read: BaseInformationComponent })\r\n  baseComponent: BaseInformationComponent;\r\n\r\n\r\n\r\n  // tslint:disable-next-line:max-line-length\r\n  constructor(private contactService: ContactService, private router: Router, private route: ActivatedRoute, private ref: ChangeDetectorRef){\r\n\r\n  }\r\n\r\n  contact: Contact = new Contact();\r\n  submitted = false;\r\n  address: AddressComponent;\r\n  recomendate: WayOfObtainingComponent;\r\n  wayControl = new FormControl('', [Validators.required]);\r\n  email = new FormControl('', [Validators.required, Validators.email]);\r\n\r\n  ways: Way[] = [\r\n    {value: 'recommendation', viewValue: 'Rekomendacja'},\r\n    {value: 'conference', viewValue: 'konferencja i szkolenie'},\r\n    {value: 'social media', viewValue: 'media społęcznościowe'},\r\n    {value: 'web page', viewValue: 'strona www'},\r\n    {value: 'other', viewValue: 'inne'}\r\n  ];\r\n\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    let id = null;\r\n    this.route.queryParams.subscribe(params => id = params.id);\r\n    if (null != id) {\r\n      this.contactService.getContactId(id)\r\n        .subscribe(((res: any[]) => {\r\n          this.contact = res[0];\r\n          this.updateToOtherModule(this.contact);\r\n        }));\r\n    } else {\r\n      this.contact = new Contact();\r\n    }\r\n  }\r\n  updateToOtherModule(contact: Contact) {\r\n    this.ref.detectChanges();\r\n    this.baseComponent.contact = contact;\r\n    this.companyComponent.companyy = contact.company;\r\n    this.wayOfObtainingComponent.wayOfObtaining = contact.wayOfObtaining\r\n    this.wayOfObtainingComponent.recommending = contact.recommending;\r\n    this.addressComponent.addresses = contact.addresses;\r\n  }\r\n\r\n  getErrorMessage() {\r\n    if (this.email.hasError('required')) {\r\n      return 'Podaj email';\r\n    }\r\n\r\n    return this.email.hasError('email') ? 'Niepoprawny adres email' : '';\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  // newEmployee(): void {\r\n  //   //   this.submitted = false;\r\n  //   //   this.contact = new Contact();\r\n  //   // }\r\n\r\n  save() {\r\n    this.contact = this.baseComponent.contact;\r\n    this.contact.company = this.companyComponent.companyy;\r\n    this.contact.wayOfObtaining = this.wayOfObtainingComponent.wayOfObtaining;\r\n    this.contact.recommending = this.wayOfObtainingComponent.recommending;\r\n    this.contact.addresses = this.addressComponent.addresses;\r\n    this.contactService.addContact(this.contact)\r\n      .subscribe(data => console.log(data), error => console.log(error));\r\n    this.contact = new Contact();\r\n    this.gotoList();\r\n\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n  }\r\n\r\n  gotoList() {\r\n    this.router.navigate(['/kontakty']);\r\n  }\r\n\r\n\r\n}\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {Employee, EmployeeService} from '../../../../contacts/services/employee.service';\r\nimport {Router} from '@angular/router';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-edit-employee',\r\n  templateUrl: './edit-employee.component.html',\r\n  styleUrls: ['./edit-employee.component.css']\r\n})\r\nexport class EditEmployeeComponent implements OnInit {\r\n  submitted = false;\r\n  employee: Employee;\r\n  // tslint:disable-next-line:max-line-length\r\n  constructor( @Inject(MAT_DIALOG_DATA) private employeeObj: any, private employeeService: EmployeeService, private router: Router, public dialogRef: MatDialogRef<EditEmployeeComponent> ) {\r\n    this.employee = employeeObj.employee;\r\n  }\r\n\r\n  ngOnInit( ) {\r\n  }\r\n\r\n  save() {\r\n    //  this.contact.addresses.push( this.address.address);\r\n    this.employeeService.addEmployee(this.employee)\r\n      .subscribe(data => console.log(data), error => console.log(error));\r\n    this.dialogRef.close();\r\n  //  this.gotoList();\r\n\r\n  }\r\n  gotoList() {\r\n    this.router.navigate(['/szczegoly_kontaktu_pracownicy']);\r\n  }\r\n\r\n}\r\n","export default \".add-contact-button{\\r\\n  float: right;\\r\\n  margin: 20px;\\r\\n}\\r\\n\\r\\nh2{\\r\\n  font-weight: bold;\\r\\n  text-align: center;\\r\\n  margin-top: 20px;\\r\\n}\\r\\n\\r\\ntable tr td  {\\r\\n  border : 1px solid black;\\r\\n\\r\\n}\\r\\n\\r\\n.border-element{\\r\\n  border : 1px solid black;\\r\\n}\\r\\n\\r\\n#hover-contact{\\r\\ncursor: pointer;\\r\\n\\r\\n}\\r\\n\\r\\n.hover-icons{\\r\\n  cursor: pointer;\\r\\n  margin-right: 20%;\\r\\n}\\r\\n\\r\\n.pagination:hover{\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbnRhY3RzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxZQUFZO0VBQ1osWUFBWTtBQUNkOztBQUVBO0VBQ0UsaUJBQWlCO0VBQ2pCLGtCQUFrQjtFQUNsQixnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSx3QkFBd0I7O0FBRTFCOztBQUVBO0VBQ0Usd0JBQXdCO0FBQzFCOztBQUVBO0FBQ0EsZUFBZTs7QUFFZjs7QUFDQTtFQUNFLGVBQWU7RUFDZixpQkFBaUI7QUFDbkI7O0FBRUE7RUFDRSxlQUFlO0FBQ2pCIiwiZmlsZSI6ImNvbnRhY3RzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYWRkLWNvbnRhY3QtYnV0dG9ue1xyXG4gIGZsb2F0OiByaWdodDtcclxuICBtYXJnaW46IDIwcHg7XHJcbn1cclxuXHJcbmgye1xyXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBtYXJnaW4tdG9wOiAyMHB4O1xyXG59XHJcblxyXG50YWJsZSB0ciB0ZCAge1xyXG4gIGJvcmRlciA6IDFweCBzb2xpZCBibGFjaztcclxuXHJcbn1cclxuXHJcbi5ib3JkZXItZWxlbWVudHtcclxuICBib3JkZXIgOiAxcHggc29saWQgYmxhY2s7XHJcbn1cclxuXHJcbiNob3Zlci1jb250YWN0e1xyXG5jdXJzb3I6IHBvaW50ZXI7XHJcblxyXG59XHJcbi5ob3Zlci1pY29uc3tcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgbWFyZ2luLXJpZ2h0OiAyMCU7XHJcbn1cclxuXHJcbi5wYWdpbmF0aW9uOmhvdmVye1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxufVxyXG4iXX0= */\";","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {Router} from '@angular/router';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material';\r\nimport {Company} from '../../../../contacts/services/contact.service';\r\nimport {Employee, EmployeeService} from '../../../../contacts/services/employee.service';\r\n\r\n@Component({\r\n  selector: 'app-add-employees',\r\n  templateUrl: './add-employees.component.html',\r\n  styleUrls: ['./add-employees.component.css']\r\n})\r\nexport class AddEmployeesComponent implements OnInit {\r\n  private company: Company;\r\n  constructor(@Inject(MAT_DIALOG_DATA) private obj: any, private employeeService: EmployeeService, private router: Router, public dialogRef: MatDialogRef<AddEmployeesComponent>) {\r\n    this.company = obj.company;\r\n  }\r\n\r\n\r\n  employee: Employee = new Employee();\r\n  submitted = false;\r\n\r\nngOnInit( ) {\r\n  this.employee = new Employee();\r\n}\r\n\r\n  newEmployee(): void {\r\n    this.submitted = false;\r\n    this.employee = new Employee();\r\n  }\r\n\r\n  save() {\r\n    this.employee.active = true;\r\n    this.employee.company = this.company;\r\n    this.employeeService.addEmployee(this.employee)\r\n      .subscribe(data => console.log(data), error => console.log(error));\r\n    this.employee = new Employee();\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","export default \"#summary{\\r\\n  float: left;\\r\\n}\\r\\n\\r\\n#employees{\\r\\n  float: right;\\r\\n\\r\\n}\\r\\n\\r\\n.mat-tab-group {\\r\\nwidth: 100%;\\r\\n  margin-left : 50px ;\\r\\n  margin-right: 150px;\\r\\n  margin-bottom: 40px;\\r\\n}\\r\\n\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRldGFpbHMtY29tcGFueS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBVztBQUNiOztBQUVBO0VBQ0UsWUFBWTs7QUFFZDs7QUFFQTtBQUNBLFdBQVc7RUFDVCxtQkFBbUI7RUFDbkIsbUJBQW1CO0VBQ25CLG1CQUFtQjtBQUNyQiIsImZpbGUiOiJkZXRhaWxzLWNvbXBhbnkuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIiNzdW1tYXJ5e1xyXG4gIGZsb2F0OiBsZWZ0O1xyXG59XHJcblxyXG4jZW1wbG95ZWVze1xyXG4gIGZsb2F0OiByaWdodDtcclxuXHJcbn1cclxuXHJcbi5tYXQtdGFiLWdyb3VwIHtcclxud2lkdGg6IDEwMCU7XHJcbiAgbWFyZ2luLWxlZnQgOiA1MHB4IDtcclxuICBtYXJnaW4tcmlnaHQ6IDE1MHB4O1xyXG4gIG1hcmdpbi1ib3R0b206IDQwcHg7XHJcbn1cclxuXHJcbiJdfQ== */\";","export default \"<hr>\\r\\n<div [hidden]=\\\"submitted\\\" class=\\\"person-form\\\" style=\\\"width: 400px;\\\" [formGroup]=\\\"personForm\\\">\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"firstName\\\">Imię</label>\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"firstName\\\"  [(ngModel)]=\\\"person.firstName\\\" name=\\\"firstName\\\" formControlName=\\\"firstName\\\">\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"surname\\\">Nazwisko</label>\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"surname\\\"  [(ngModel)]=\\\"person.lastName\\\" name=\\\"surname\\\" formControlName=\\\"surname\\\">\\r\\n    </div>\\r\\n\\r\\n    <div *ngIf=\\\"!personForm.get('surname').valid && personForm.get('surname').touched\\\" style=\\\"color:red\\\">\\r\\n     Nazwisko jest wymagane\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"pesel\\\">PESEL</label>\\r\\n      <input type=\\\"number\\\" size=\\\"11\\\" class=\\\"form-control\\\" id=\\\"pesel\\\" [(ngModel)]=\\\"person.pesel\\\" name=\\\"pesel\\\" formControlName=\\\"pesel\\\">\\r\\n    </div>\\r\\n\\r\\n    <div *ngIf=\\\"!personForm.get('pesel').valid && personForm.get('pesel').touched\\\" style=\\\"color:red\\\">\\r\\n      PESEL się składać wyłącznie z 11 cyfr\\r\\n    </div>\\r\\n</div>\\r\\n\";","import {AfterViewInit, ChangeDetectorRef, Component, OnInit, ViewChild} from '@angular/core';\r\nimport {CompanyGeneralInformationComponent} from '../contact-parts/company-general-informations/company-general-information.component';\r\nimport {PersonGeneralInformationComponent} from '../contact-parts/person-general-informations/person-general-information.component';\r\n\r\nimport {AddressComponent} from '../contact-parts/address/address.component';\r\nimport {Contact, ContactService} from '../services/contact.service';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {FormControl, Validators} from '@angular/forms';\r\nimport {Way} from '../add-contact/add-contact.component';\r\nimport {WayOfObtainingComponent} from '../contact-parts/way-of-obtaining/way-of-obtaining.component';\r\nimport {BaseInformationComponent} from '../contact-parts/base-information/base-information.component';\r\n\r\n@Component({\r\n  selector: 'app-edit-person',\r\n  templateUrl: './edit-person.component.html',\r\n  styleUrls: ['./edit-person.component.css']\r\n})\r\nexport class EditPersonComponent implements OnInit, AfterViewInit {\r\n\r\n  // @ts-ignore\r\n  @ViewChild('person', { read: PersonGeneralInformationComponent })\r\n  person: PersonGeneralInformationComponent;\r\n  // @ts-ignore\r\n  @ViewChild('wayOfObtainingComponent', { read: WayOfObtainingComponent })\r\n  wayOfObtainingComponent: WayOfObtainingComponent;\r\n  // @ts-ignore\r\n  @ViewChild('address', { read: AddressComponent })\r\n  addressComponent: AddressComponent;\r\n  @ViewChild('baseInformation', { read: BaseInformationComponent })\r\n  baseComponent: BaseInformationComponent;\r\n\r\n  // tslint:disable-next-line:max-line-length\r\n  constructor(private contactService: ContactService, private router: Router, private route: ActivatedRoute, private ref: ChangeDetectorRef){\r\n\r\n  }\r\n\r\n  contact: Contact = new Contact();\r\n  submitted = false;\r\n  address: AddressComponent;\r\n  recomendate: WayOfObtainingComponent;\r\n  wayControl = new FormControl('', [Validators.required]);\r\n  email = new FormControl('', [Validators.required, Validators.email]);\r\n\r\n  ways: Way[] = [\r\n    {value: 'recommendation', viewValue: 'Rekomendacja'},\r\n    {value: 'conference', viewValue: 'konferencja i szkolenie'},\r\n    {value: 'social media', viewValue: 'media społęcznościowe'},\r\n    {value: 'web page', viewValue: 'strona www'},\r\n    {value: 'other', viewValue: 'inne'}\r\n  ];\r\n\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    let id = null;\r\n    this.route.queryParams.subscribe(params => id = params.id);\r\n    if (null != id) {\r\n      this.contactService.getContactId(id)\r\n        .subscribe(((res: any[]) => {\r\n          this.contact = res[0];\r\n          this.updateToOtherModule(this.contact);\r\n        }));\r\n    } else {\r\n      this.contact = new Contact();\r\n    }\r\n  }\r\n\r\n  updateToOtherModule(contact: Contact) {\r\n    this.baseComponent.contact = contact;\r\n    this.ref.detectChanges();\r\n    this.person.person = contact.person;\r\n    this.wayOfObtainingComponent.wayOfObtaining = contact.wayOfObtaining;\r\n    this.wayOfObtainingComponent.recommending = contact.recommending;\r\n    this.addressComponent.addresses = contact.addresses;\r\n  }\r\n\r\n  getErrorMessage() {\r\n    if (this.email.hasError('required')) {\r\n      return 'Podaj email';\r\n    }\r\n\r\n    return this.email.hasError('email') ? 'Niepoprawny adres email' : '';\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  newEmployee(): void {\r\n    this.submitted = false;\r\n    this.contact = new Contact();\r\n  }\r\n\r\n  save() {\r\n    this.contact = this.baseComponent.contact;\r\n    this.contact.person = this.person.person;\r\n\r\n    this.contact.wayOfObtaining = this.wayOfObtainingComponent.wayOfObtaining;\r\n    this.contact.recommending = this.wayOfObtainingComponent.recommending;\r\n    this.contact.addresses = this.addressComponent.addresses;\r\n    this.contactService.addContact(this.contact)\r\n      .subscribe(data => console.log(data), error => console.log(error));\r\n    this.contact = new Contact();\r\n    this.gotoList();\r\n\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n  }\r\n\r\n  gotoList() {\r\n    this.router.navigate(['/kontakty']);\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAuY29tcG9uZW50LmNzcyJ9 */\";","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","export default \"<h4>Podsumowanie</h4>\\r\\n\\r\\n<hr/>\\r\\n<div *ngIf=\\\"contact\\\">\\r\\n  <div>\\r\\n    <label><b>Imię: </b></label> {{contact.person.firstName}}\\r\\n  </div>\\r\\n  <div>\\r\\n    <label><b>Nazwisko: </b></label> {{contact.person.lastName}}\\r\\n  </div>\\r\\n  <div>\\r\\n    <label><b>PESEL: </b></label> {{contact.person.pesel}}\\r\\n  </div>\\r\\n  <div>\\r\\n    <label><b>Email: </b></label> {{contact.email}}\\r\\n  </div>\\r\\n  <div>\\r\\n    <label><b>Telefon: </b></label> {{contact.phoneNumber}}\\r\\n  </div>\\r\\n\\r\\n  <div>\\r\\n    <label><b>Informacje dodatkowe: </b></label> {{contact.wayOfObtaining}}\\r\\n  </div>\\r\\n  <div>\\r\\n    <label><b>Sposób pozyskania: </b></label> {{contact.phoneNumber}}\\r\\n  </div>\\r\\n  <div>\\r\\n    <label><b>Rekomendujący: </b></label> {{contact.wayOfObtaining}}\\r\\n  </div>\\r\\n\\r\\n  <hr>\\r\\n\\r\\n  <h4>Adresy</h4>\\r\\n  <div style=\\\"width: 400px;\\\">\\r\\n    <div *ngFor=\\\"let address of contact.addresses\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n       {{address.name}}\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        {{address.street}} {{address.houseNumber}}/{{address.flatNumber}}\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        {{address.zipCode}} {{address.city}}\\r\\n      </div>\\r\\n      </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<br>\\r\\n<br>\\r\\n<button [routerLink]=\\\"getRouteLink(contact)\\\" [queryParams]=\\\"{id: contact.id}\\\" class=\\\"btn btn-primary\\\">Edycja</button><br>\\r\\n\";","export default \"\\r\\n<div  [formGroup]=\\\"baseForm\\\">\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"phoneNumber\\\">Telefon</label>\\r\\n    <input type=\\\"tel\\\" class=\\\"form-control\\\" id=\\\"phoneNumber\\\" [(ngModel)]=\\\"contact.phoneNumber\\\" name=\\\"phoneNumber\\\" formControlName=\\\"phoneNumber\\\">\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"email\\\">Email</label>\\r\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"contact.email\\\" id=\\\"email\\\" name=\\\"email\\\" formControlName=\\\"email\\\">\\r\\n  </div>\\r\\n  <div *ngIf=\\\"!baseForm.get('email').valid && baseForm.get('email').touched\\\" style=\\\"color:red\\\">\\r\\n    Podaj poprawny email\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"additionalInformation\\\">Informacje dodatkowe</label>\\r\\n    <textarea type=\\\"text\\\" [(ngModel)]=\\\"contact.additionalInfo\\\" class=\\\"form-control\\\" id=\\\"additionalInformation\\\"\\r\\n              name=\\\"additionalInformation\\\" formControlName=\\\"additionalInformation\\\"></textarea>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJiYXNlLWluZm9ybWF0aW9uLmNvbXBvbmVudC5jc3MifQ== */\";","export default \"<hr>\\r\\n<br>\\r\\n<div [hidden]=\\\"submitted\\\" style=\\\"width: 400px;\\\">\\r\\n  <mat-form-field>\\r\\n    <mat-label>Sposób pozyskania</mat-label>\\r\\n    <mat-select [formControl]=\\\"wayControl\\\" [(ngModel)]=\\\"this.wayOfObtaining\\\"  required>\\r\\n      <mat-option>--</mat-option>\\r\\n      <mat-option *ngFor=\\\"let way of ways\\\" [value]=\\\"way.value\\\">\\r\\n        {{way.viewValue}}\\r\\n      </mat-option>\\r\\n    </mat-select>\\r\\n    <mat-error *ngIf=\\\"wayControl.hasError('required')\\\">wybierz</mat-error>\\r\\n    <mat-hint>{{wayControl.value?.viewValue}}</mat-hint>\\r\\n  </mat-form-field>\\r\\n  <div *ngIf=\\\"this.wayOfObtaining=='RECOMENDATION'\\\">\\r\\n    <label for=\\\"recommending\\\">Rekomendujący</label>\\r\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"legal-form\\\"  [(ngModel)]=\\\"this.recommending\\\" name=\\\"recommending\\\"  id=\\\"recommending\\\">\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\";","export default \"<h2>Dodaj kontakt</h2>\\r\\n<br>\\r\\n<h5>Rodzaj kontaktu</h5>\\r\\n<br>\\r\\n<form (ngSubmit)=\\\"onSubmit()\\\"  class=\\\"mat-form-field-appearance-legacy\\\" >\\r\\n<mat-radio-group aria-label=\\\"Select an option\\\" >\\r\\n\\r\\n  <mat-radio-button value=\\\"person\\\" checked (click)=\\\"isShow='PERSON'\\\">Osoba fizyczna</mat-radio-button>\\r\\n  <mat-radio-button value=\\\"company\\\" (click)=\\\"isShow='COMPANY'\\\">Firma</mat-radio-button>\\r\\n</mat-radio-group>\\r\\n\\r\\n<div class=\\\"example-container\\\">\\r\\n  <app-person-general-informations #person *ngIf=\\\"isShow == 'PERSON'\\\" ></app-person-general-informations>\\r\\n  <app-company-general-informations #company *ngIf=\\\"isShow == 'COMPANY'\\\"></app-company-general-informations>\\r\\n  <app-base-information #baseInformation></app-base-information>\\r\\n\\r\\n  <app-address #address></app-address>\\r\\n  <app-way-of-obtaining #wayOfObtainingComponent></app-way-of-obtaining>\\r\\n  <router-outlet></router-outlet>\\r\\n</div>\\r\\n  <div id=\\\"submit\\\">\\r\\n    <button type=\\\"submit\\\" class=\\\"btn btn-outline-success\\\" (click)=\\\"save()\\\">Zapisz</button>\\r\\n  </div>\\r\\n</form>\\r\\n\";","import { Injectable } from '@angular/core';\r\nimport {Company, Contact} from './contact.service';\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EmployeeService {\r\n  private api = 'http://localhost:8075';\r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      'Content-Type': 'application/json'\r\n    })\r\n  }\r\n  private employee: Employee;\r\n\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  addEmployee(employee: Employee): Observable<Employee> {\r\n    return this.httpClient.post<Employee>(this.api + '/employees', employee);\r\n  }\r\n\r\n  getEmployeesList(): Observable<any> {\r\n    return this.httpClient.get(this.api + '/employees');\r\n  }\r\n\r\n\r\n  getEmployeesByCompany(companyId: number): Observable<any> {\r\n    return this.httpClient.get(this.api + '/employeesList/' + companyId);\r\n  }\r\n\r\n  deleteEmployee(id: number): Observable<any> {\r\n    return this.httpClient.delete(this.api + '/employees/' + id);\r\n  }\r\n}\r\n\r\nexport class Employee {\r\n  id: number;\r\n  firstName: string;\r\n  lastName: string;\r\n  position: string;\r\n  phoneNumber: number;\r\n  active: boolean;\r\n  company: Company;\r\n}\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {Employee, EmployeeService} from '../../../../contacts/services/employee.service';\r\nimport {Observable} from 'rxjs';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {Contact, ContactService} from '../../../../contacts/services/contact.service';\r\nimport {MAT_DIALOG_DATA, MatDialog, MatDialogRef} from '@angular/material';\r\n\r\nimport {AddEmployeesComponent} from '../add-employees/add-employees.component';\r\nimport {EditEmployeeComponent} from '../edit-employee/edit-employee.component';\r\n\r\n@Component({\r\n  selector: 'app-employees-list',\r\n  templateUrl: './employees-list.component.html',\r\n  styleUrls: ['./employees-list.component.css']\r\n})\r\nexport class EmployeesListComponent implements OnInit {\r\n  employees: Observable<Employee[]>;\r\n  private contact: Contact;\r\n\r\n  constructor(private employeeService: EmployeeService, private contactService: ContactService, private router: Router, private route: ActivatedRoute, private dialog: MatDialog) { }\r\n\r\n  // () {\r\n  // }\r\n\r\n  // tslint:disable-next-line:use-lifecycle-interface\r\n\r\n\r\n\r\nngOnInit() {\r\n\r\n    let id = null;\r\n    this.route.queryParams.subscribe(params => id = params.id);\r\n\r\n    if (null != id) {\r\n      this.contactService.getContactId(id)\r\n        .subscribe(((res: any[]) => {\r\n          this.contact = res[0];\r\n        }));\r\n    }\r\n    this.reloadData();\r\n  }\r\n\r\n  reloadData() {\r\n    this.employees = this.employeeService.getEmployeesByCompany(this.contact.company.id);\r\n  }\r\n\r\n  deleteEmployee(id: number) {\r\n    this.employeeService.deleteEmployee(id)\r\n      .subscribe(\r\n        data => {\r\n          console.log(data);\r\n          this.reloadData();\r\n        },\r\n        error => console.log(error));\r\n  }\r\n\r\n\r\n  editEmployee(employee: Employee) {\r\n    const dialogRef = this.dialog.open(EditEmployeeComponent, {\r\n      width: '700px',\r\n      height: '600px',\r\n      data: {employee}\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The dialog was closed');\r\n      this.reloadData();\r\n    });\r\n  }\r\n\r\n\r\n  addEmployee() {\r\n    const dialogRef = this.dialog.open(AddEmployeesComponent, {\r\n      width: '700px',\r\n      height: '600px',\r\n      data: {company: this.contact.company }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The dialog was closed');\r\n      this.reloadData();\r\n    });\r\n\r\n  }\r\n\r\n   getStatus(employee: Employee): string {\r\n    if (employee.active) {\r\n      return 'Aktywny';\r\n    } else {\r\n      return 'Nieaktywny';\r\n    }\r\n  }\r\n\r\n\r\n  // setStatus(employee: Employee) {\r\n  //   const dialogRef = this.dialog.open(SetStatus, {\r\n  //     width: '100px',\r\n  //     height: '100px',\r\n  //     data: {employee}\r\n  //   });\r\n  // }\r\n}\r\n\r\n// export class SetStatus {\r\n//\r\n//   constructor(public dialogRef: MatDialogRef <EmployeesListComponent>) {\r\n//\r\n//   }\r\n//\r\n// }\r\n\r\n\r\n\r\n\r\n","export default \".mat-form-field{\\r\\n  width: 700px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFkZHJlc3MuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFlBQVk7QUFDZCIsImZpbGUiOiJhZGRyZXNzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWF0LWZvcm0tZmllbGR7XHJcbiAgd2lkdGg6IDcwMHB4O1xyXG59XHJcbiJdfQ== */\";","export default \"#left-position{\\r\\n  float: left;\\r\\n  width: 500px;\\r\\n}\\r\\n\\r\\n#right-position{\\r\\n  float: right;\\r\\n  width: 500px;\\r\\n  margin-right: 100px;\\r\\n}\\r\\n\\r\\n#bottom-position{\\r\\n  clear: both;\\r\\n}\\r\\n\\r\\nlabel{\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.label-div{\\r\\n  text-align: left;\\r\\n}\\r\\n\\r\\nbutton{\\r\\n  float: right;\\r\\n}\\r\\n\\r\\n.adress-style{\\r\\n  width: 800px;\\r\\n}\\r\\n\\r\\nhr{\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\nh4{\\r\\n  font-weight: bold;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN1bW1hcnkuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQVc7RUFDWCxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxZQUFZO0VBQ1osWUFBWTtFQUNaLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLFdBQVc7QUFDYjs7QUFDQTtFQUNFLGtCQUFrQjtBQUNwQjs7QUFDQTtFQUNFLGdCQUFnQjtBQUNsQjs7QUFDQTtFQUNFLFlBQVk7QUFDZDs7QUFFQTtFQUNFLFlBQVk7QUFDZDs7QUFDQTtFQUNFLFdBQVc7QUFDYjs7QUFFQTtFQUNFLGlCQUFpQjtBQUNuQiIsImZpbGUiOiJzdW1tYXJ5LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIjbGVmdC1wb3NpdGlvbntcclxuICBmbG9hdDogbGVmdDtcclxuICB3aWR0aDogNTAwcHg7XHJcbn1cclxuXHJcbiNyaWdodC1wb3NpdGlvbntcclxuICBmbG9hdDogcmlnaHQ7XHJcbiAgd2lkdGg6IDUwMHB4O1xyXG4gIG1hcmdpbi1yaWdodDogMTAwcHg7XHJcbn1cclxuXHJcbiNib3R0b20tcG9zaXRpb257XHJcbiAgY2xlYXI6IGJvdGg7XHJcbn1cclxubGFiZWx7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcbi5sYWJlbC1kaXZ7XHJcbiAgdGV4dC1hbGlnbjogbGVmdDtcclxufVxyXG5idXR0b257XHJcbiAgZmxvYXQ6IHJpZ2h0O1xyXG59XHJcblxyXG4uYWRyZXNzLXN0eWxle1xyXG4gIHdpZHRoOiA4MDBweDtcclxufVxyXG5ocntcclxuICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxuaDR7XHJcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbn1cclxuIl19 */\";","export default \"<div class=\\\"mat-tab-group\\\">\\r\\n  <mat-tab-group class=\\\"details-group\\\">\\r\\n    <mat-tab label=\\\"Podsumowanie\\\" class=\\\"tabs\\\"><br><app-summary></app-summary></mat-tab>\\r\\n    <mat-tab label=\\\"Pracownicy\\\" class=\\\"tabs\\\"><br><app-employees-list></app-employees-list></mat-tab>\\r\\n  </mat-tab-group>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ3YXktb2Ytb2J0YWluaW5nLmNvbXBvbmVudC5jc3MifQ== */\";","import {Component, Input, OnInit} from '@angular/core';\r\nimport {FormControl, Validators} from '@angular/forms';\r\nimport {Way} from '../../add-contact/add-contact.component';\r\n\r\n\r\n@Component({\r\n  selector: 'app-way-of-obtaining',\r\n  templateUrl: './way-of-obtaining.component.html',\r\n  styleUrls: ['./way-of-obtaining.component.css']\r\n})\r\nexport class WayOfObtainingComponent implements OnInit {\r\n\r\n  @Input()\r\n  public wayOfObtaining: string;\r\n\r\n  @Input()\r\n  public recommending: string;\r\n\r\n  submitted = false;\r\n  constructor() { }\r\n  wayControl = new FormControl('', [Validators.required]);\r\n  ways: Way[] = [\r\n    {value: 'RECOMENDATION', viewValue: 'Rekomendacja'},\r\n    {value: 'CONFERENCE_OR_TRAINING', viewValue: 'konferencja i szkolenie'},\r\n    {value: 'SOCIAL_MEDIA', viewValue: 'media społęcznościowe'},\r\n    {value: 'WWWW', viewValue: 'strona www'}\r\n  ];\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","export default \"<hr>\\r\\n<div [hidden]=\\\"submitted\\\" style=\\\"width: 400px;\\\" [formGroup]=\\\"companyForm\\\">\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"name\\\">Nazwa firmy</label>\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" [(ngModel)]=\\\"companyy.name\\\" name=\\\"name\\\" formControlName=\\\"name\\\">\\r\\n\\r\\n\\r\\n      <div *ngIf=\\\"!companyForm.get('name').valid && companyForm.get('name').touched\\\" style=\\\"color:red\\\">\\r\\n        Nazwa firmy jest wymagana!\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"nip\\\">NIP</label>\\r\\n      <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"nip\\\" [(ngModel)]=\\\"companyy.nip\\\" name=\\\"nip\\\" formControlName=\\\"nip\\\">\\r\\n    </div>\\r\\n\\r\\n  <div *ngIf=\\\"!companyForm.get('nip').valid && companyForm.get('nip').touched\\\" style=\\\"color:red\\\">\\r\\n     NIP jest wymagany, musi być w formie: XXXXXXXXXX\\r\\n  </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"regon\\\">Regon</label>\\r\\n      <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"regon\\\" [(ngModel)]=\\\"companyy.regon\\\" name=\\\"regon\\\" formControlName=\\\"regon\\\">\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"krs\\\">KRS</label>\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"krs\\\" [(ngModel)]=\\\"companyy.krs\\\" name=\\\"krs\\\" formControlName=\\\"krs\\\">\\r\\n    </div>\\r\\n\\r\\n  <div class=\\\"form-group\\\"  >\\r\\n  <mat-form-field>\\r\\n    <mat-label>Forma prawna</mat-label>\\r\\n    <mat-select  [(ngModel)]=\\\"companyy.legalForm\\\"  formControlName=\\\"legalForm\\\">\\r\\n      <mat-option>--</mat-option>\\r\\n      <mat-option *ngFor=\\\"let form of forms\\\" [value]=\\\"form.value\\\">\\r\\n        {{form.viewValue}}\\r\\n      </mat-option>\\r\\n    </mat-select>\\r\\n </mat-form-field>\\r\\n    <div *ngIf=\\\"companyy.legalForm=='OTHER'\\\">\\r\\n      <label for=\\\"legal-form-other\\\">Inna forma prawna</label>\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"companyy.legalFormOther\\\" name=\\\"legal-form-other\\\" id=\\\"legal-form-other\\\">\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'angular-app';\r\n}\r\n","export default \"<div class=\\\"container\\\">\\r\\n  <router-outlet></router-outlet>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\";","import {Component, OnInit} from '@angular/core';\r\nimport {Address, Contact, ContactService, Person} from '../../contacts/services/contact.service';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-details-person',\r\n  templateUrl: './details-person.component.html',\r\n  styleUrls: ['./details-person.component.css']\r\n})\r\nexport class DetailsPersonComponent implements OnInit {\r\n  id: number;\r\n  contact: Contact;\r\n  public addresses: Address[] = [];\r\n\r\n  constructor(private route: ActivatedRoute, private router: Router,\r\n              private contactService: ContactService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.contact = new Contact();\r\n\r\n    let id = null;\r\n    this.route.queryParams.subscribe(params => id = params.id);\r\n    if (null != id) {\r\n      this.contactService.getContactId(id)\r\n        .subscribe(((res: any[]) => {\r\n          this.contact = res[0];\r\n        }));\r\n    }\r\n  }\r\n\r\n  getRouteLink(contact: Contact) {\r\n    return  '/edycja_osoba_fizyczna';\r\n  }\r\n}\r\n","import {Component, Injectable, Input, OnInit, Output} from '@angular/core';\r\nimport {Company} from '../../services/contact.service';\r\nimport {CompanyService} from '../../services/company.service';\r\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {Router} from '@angular/router';\r\n@Component({\r\n  selector: 'app-company-general-informations',\r\n  templateUrl: './company-general-information.component.html',\r\n  styleUrls: ['./company-general-information.component.css']\r\n})\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class CompanyGeneralInformationComponent {\r\n  @Input()\r\n  public companyForm: FormGroup;\r\n\r\n  constructor(private companyService: CompanyService, private router: Router) { }\r\n  @Input()\r\n  public companyy: Company = new Company();\r\n  submitted = false;\r\n  forms: Form[] = [\r\n    {value: 'STOCK_COMPANY', viewValue: 'Spółka akcyja'},\r\n    {value: 'PARTNERSHIP_COMPANY', viewValue: 'Spółka cywilna'},\r\n    {value: 'SLAW_COMPANY', viewValue: 'Spółka prawna'},\r\n    {value: 'LIMITED_COMPANY', viewValue: 'Spółka zoo'},\r\n    {value: 'OTHER', viewValue: 'Inne'}\r\n  ];\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n  }\r\n\r\n  gotoList() {\r\n    this.router.navigate(['/kontakt']);\r\n  }\r\n\r\n\r\n\r\n  // tslint:disable-next-line:use-lifecycle-interface\r\n  ngOnInit(): void {\r\n    this.initializeForm();\r\n  }\r\n\r\n\r\n\r\n  private initializeForm() {\r\n\r\n    // @ts-ignore\r\n    this.companyForm = new FormGroup({\r\n      name : new FormControl(null, Validators.required),\r\n      nip :  new FormControl(null, [Validators.pattern('[0-9]{10}'), Validators.required]),\r\n      regon :  new FormControl(null),\r\n      krs :  new FormControl(null),\r\n      legalForm :  new FormControl(null)\r\n    });\r\n  }\r\n\r\n}\r\n\r\nexport interface Form {\r\n  value: string;\r\n  viewValue: string;\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { ContactsComponent } from './contacts/contacts.component';\r\n// import {AddContactComponent} from \"./add-contact/add-contact.component\";\r\n// import {Router, RouterModule, Routes} from \"@angular/FormsModule\r\n// @ts-ignore\r\nimport {MAT_RADIO_DEFAULT_OPTIONS, MatRadioModule} from '@angular/material/radio';\r\nimport {HttpClientModule} from '@angular/common/http';\r\n\r\n\r\n\r\nimport {\r\n  _MatMenuDirectivesModule,\r\n  MatButtonModule,\r\n  MatCommonModule, MatDialogModule,\r\n  MatFormFieldModule, MatIconModule, MatInputModule, MatMenuModule, MatPaginatorModule,\r\n  MatSelectModule,\r\n  MatTableModule, MatTabsModule\r\n} from '@angular/material';\r\n\r\n// @ts-ignore\r\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\r\nimport { AddressComponent } from './contacts/contact-parts/address/address.component';\r\nimport { CompanyGeneralInformationComponent } from './contacts/contact-parts/company-general-informations/company-general-information.component';\r\nimport { PersonGeneralInformationComponent } from './contacts/contact-parts/person-general-informations/person-general-information.component';\r\n\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {AddContactComponent} from './contacts/add-contact/add-contact.component';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport { EditCompanyComponent } from './contacts/edit-company/edit-company.component';\r\nimport { EditPersonComponent } from './contacts/edit-person/edit-person.component';\r\n\r\n// @ts-ignore\r\n\r\nimport { DetailsCompanyComponent } from './details/details-company/details-company.component';\r\nimport { DetailsPersonComponent } from './details/details-person/details-person.component';\r\nimport { AddEmployeesComponent } from './details/details-company/employees/add-employees/add-employees.component';\r\nimport { EmployeesListComponent } from './details/details-company/employees/employees-list/employees-list.component';\r\nimport { SummaryComponent } from './details/details-company/summary/summary.component';\r\nimport { EditEmployeeComponent } from './details/details-company/employees/edit-employee/edit-employee.component';\r\nimport {WayOfObtainingComponent} from './contacts/contact-parts/way-of-obtaining/way-of-obtaining.component';\r\nimport { BaseInformationComponent } from './contacts/contact-parts/base-information/base-information.component';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const appRoutes :Routes =[\r\n//   {\r\n//     path: 'kontakty',\r\n//     component:ContactsComponent\r\n//   },\r\n//   {\r\n//     path: 'dodaj_kontakt',\r\n//     component: AddContactComponent\r\n//   }\r\n// ];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ContactsComponent,\r\n    AddContactComponent,\r\n    AddressComponent,\r\n    CompanyGeneralInformationComponent,\r\n    PersonGeneralInformationComponent,\r\n    WayOfObtainingComponent,\r\n    EditCompanyComponent,\r\n    EditPersonComponent,\r\n    DetailsCompanyComponent,\r\n    DetailsPersonComponent,\r\n    AddEmployeesComponent,\r\n    EmployeesListComponent,\r\n    SummaryComponent,\r\n    EditEmployeeComponent,\r\n    BaseInformationComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    MatRadioModule,\r\n    HttpClientModule,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    BrowserAnimationsModule,\r\n    MatButtonModule,\r\n    HttpClientModule,\r\n    MatTableModule,\r\n    MatCommonModule,\r\n    _MatMenuDirectivesModule,\r\n    MatMenuModule,\r\n    MatIconModule,\r\n    MatTabsModule,\r\n    MatDialogModule,\r\n    MatPaginatorModule,\r\n    MatInputModule\r\n\r\n  ],\r\n  exports: [\r\n    MatRadioModule,\r\n    MatCommonModule,\r\n    MatNativeDateModule,\r\n    MatRippleModule,\r\n\r\n  ],\r\n  providers: [\r\n    // {\r\n    //   provide: MAT_RADIO_DEFAULT_OPTIONS,\r\n    //   useValue: { color: 'accent' },\r\n    // }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n\r\n\r\n}\r\n","export default \"<div class=\\\"panel-body\\\">\\r\\n  <h4>Lista pracowników</h4>\\r\\n  <br>\\r\\n  <table class=\\\"table table-striped\\\">\\r\\n    <thead>\\r\\n    <tr>\\r\\n      <th>Imię</th>\\r\\n      <th>Nazwisko</th>\\r\\n      <th>Stanowisko</th>\\r\\n      <th>Telefon</th>\\r\\n      <th>Status</th>\\r\\n      <th>Akcje</th>\\r\\n    </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n\\r\\n    <tr *ngFor=\\\"let employee of employees | async\\\">\\r\\n      <td>{{employee.firstName}}</td>\\r\\n      <td>{{employee.lastName}}</td>\\r\\n      <td>{{employee.position}}</td>\\r\\n      <td>{{employee.phoneNumber}}</td>\\r\\n      <td id=\\\"hover-contact\\\" >{{getStatus(employee)}}</td>\\r\\n      <td>\\r\\n        <mat-icon aria-hidden=\\\"false\\\" aria-label=\\\"Example create-black icon\\\" (click)=\\\"editEmployee(employee)\\\" class=\\\"hover-icons\\\">create</mat-icon>\\r\\n        <mat-icon aria-hidden=\\\"false\\\" aria-label=\\\"Example close-black icon\\\" (click)=\\\"deleteEmployee(employee.id)\\\" class=\\\"hover-icons\\\">close</mat-icon>\\r\\n      </td>\\r\\n    </tr>\\r\\n    </tbody>\\r\\n  </table>\\r\\n <button  mat-raised-button class=\\\"add new empoyee\\\" (click)=\\\"addEmployee()\\\">Dodaj</button>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\";","export default \"<mat-dialog-content>\\r\\n  <h3>Edytuj pracownika</h3>\\r\\n</mat-dialog-content>\\r\\n\\r\\n<mat-dialog-actions>\\r\\n    <div class=\\\"container\\\">\\r\\n      <!--Imię-->\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <mat-label for=\\\"firstName\\\">Imię</mat-label>\\r\\n        <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"firstName\\\" required [(ngModel)]=\\\"employee.firstName\\\" name=\\\"firstName\\\"  >\\r\\n      </div>\\r\\n      <!--Nazwisko-->\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <mat-label for=\\\"lastName\\\">Nazwisko</mat-label>\\r\\n        <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"lastName\\\" required [(ngModel)]=\\\"employee.lastName\\\" name=\\\"lastName\\\" >\\r\\n      </div>\\r\\n      <!--    Stanowisko-->\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <mat-label for=\\\"position\\\">Stanowisko</mat-label>\\r\\n        <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"position\\\" required [(ngModel)]=\\\"employee.position\\\" name=\\\"position\\\"/>\\r\\n      </div>\\r\\n      <!--Telefon-->\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <mat-label for=\\\"phoneNumber\\\">Telefon</mat-label>\\r\\n        <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"phoneNumber\\\" required [(ngModel)]=\\\"employee.phoneNumber\\\" name=\\\"phoneNumber\\\" >\\r\\n      </div>\\r\\n      <!--   Status-->\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <mat-label for=\\\"status\\\">Status</mat-label>\\r\\n        <input matInput type=\\\"checkbox\\\" class=\\\"form-control\\\" id=\\\"status\\\" required [(ngModel)]=\\\"employee.active\\\" name=\\\"status\\\"/>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n<div class=\\\"mat-button\\\">\\r\\n  <button type=\\\"button\\\" class=\\\"btn btn-outline-success\\\" (click)=\\\"save()\\\">Zapisz</button>\\r\\n</div>\\r\\n\\r\\n</mat-dialog-actions>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\";","export default \"\\r\\n<div class=\\\"person-form\\\" style=\\\"width: 400px;\\\" [formGroup]=\\\"addressForm\\\">\\r\\n  <hr>\\r\\n  <h4>Adres:</h4>\\r\\n  <br>\\r\\n  <div class=\\\"mat-form-field\\\">\\r\\n    <li *ngFor=\\\"let address of addresses\\\" style=\\\"list-style-type: none\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"name\\\">Nazwa typu adresu</label>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\"  [(ngModel)]=\\\"address.name\\\" name=\\\"name\\\" formControlName=\\\"nameAddress\\\">\\r\\n        </div>\\r\\n  <div >\\r\\n        <div class=\\\"form-group\\\" style=\\\"float: left; margin-right: 10px\\\">\\r\\n          <label for=\\\"street\\\" >Ulica</label>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"street\\\" [(ngModel)]=\\\"address.street\\\" name=\\\"street\\\" formControlName=\\\"street\\\">\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\" style=\\\"float: left; margin-right: 10px\\\">\\r\\n          <label for=\\\"houseNumber\\\">Nr domu</label>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"houseNumber\\\"  [(ngModel)]=\\\"address.houseNumber\\\" name=\\\"houseNumber\\\" formControlName=\\\"houseNumber\\\">\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\" style=\\\"float: right\\\">\\r\\n          <label for=\\\"flatNumber\\\">Nr mieszkania</label>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"flatNumber\\\" [(ngModel)]=\\\"address.flatNumber\\\" name=\\\"apartmentNumber\\\" formControlName=\\\"apartmentNumber\\\">\\r\\n\\r\\n        </div>\\r\\n  </div>\\r\\n     <div class=\\\"mat-form-field\\\">\\r\\n        <div id=\\\"address\\\">\\r\\n          <div class=\\\"form-group\\\" style=\\\"float: left; margin-right: 10px; width: 30%\\\">\\r\\n            <label for=\\\"zipCode\\\">Kod pocztowy</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"zipCode\\\" [(ngModel)]=\\\"address.zipCode\\\" name=\\\"zipCode\\\" formControlName=\\\"zipCode\\\">\\r\\n            <div *ngIf=\\\"!addressForm.get('zipCode').valid && addressForm.get('zipCode').touched\\\" style=\\\"color:red\\\">\\r\\n              Podaj poprawny kod pocztowy w formie XX-XXX\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n\\r\\n          <div class=\\\"form-group\\\" style=\\\"float: right; width: 50%\\\">\\r\\n            <label for=\\\"city\\\">Miasto</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"city\\\"  [(ngModel)]=\\\"address.city\\\" name=\\\"city\\\" formControlName=\\\"city\\\"/>\\r\\n          </div>\\r\\n        </div>\\r\\n  </div>\\r\\n\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-danger\\\" [disabled]=\\\"!canDeleteAddress()\\\" (click)=\\\"deleteAddress(address)\\\" style=\\\"float: right\\\">Usuń</button>\\r\\n    </li>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-info\\\" (click)=\\\"newAddress()\\\" style=\\\"float: right; margin-right: 10px\\\" >Dodaj kolejny adres</button>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJlZGl0LWVtcGxveWVlLmNvbXBvbmVudC5jc3MifQ== */\";","import {ChangeDetectorRef, Component, OnInit} from '@angular/core';\r\nimport {Address, Company, Contact, ContactService} from '../../../contacts/services/contact.service';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {AddressService} from '../../../contacts/services/address.service';\r\nimport {Way} from '../../../contacts/add-contact/add-contact.component';\r\nimport {Form} from '../../../contacts/contact-parts/company-general-informations/company-general-information.component';\r\n\r\n@Component({\r\n  selector: 'app-summary',\r\n  templateUrl: './summary.component.html',\r\n  styleUrls: ['./summary.component.css']\r\n})\r\nexport class SummaryComponent implements OnInit {\r\n\r\n  id: number;\r\n  contact: Contact;\r\n  ways: Way[] = [\r\n    {value: 'RECOMENDATION', viewValue: 'Rekomendacja'},\r\n    {value: 'CONFERENCE_OR_TRAINING', viewValue: 'konferencja i szkolenie'},\r\n    {value: 'SOCIAL_MEDIA', viewValue: 'media społęcznościowe'},\r\n    {value: 'WWWW', viewValue: 'strona www'}\r\n  ];\r\n\r\n  forms: Form[] = [\r\n    {value: 'STOCK_COMPANY', viewValue: 'Spółka akcyja'},\r\n    {value: 'PARTNERSHIP_COMPANY', viewValue: 'Spółka cywilna'},\r\n    {value: 'SLAW_COMPANY', viewValue: 'Spółka prawna'},\r\n    {value: 'LIMITED_COMPANY', viewValue: 'Spółka zoo'},\r\n    {value: 'OTHER', viewValue: 'Inne'}\r\n  ];\r\n\r\n  constructor(private route: ActivatedRoute, private router: Router,\r\n              private contactService: ContactService) {\r\n  }\r\n\r\n  showAll() {\r\n    this.router.navigate(['/edycja_firma']);\r\n  }\r\nngOnInit(): void {\r\n\r\n  this.contact = new Contact();\r\n  this.contact.company = new Company();\r\n}\r\n\r\n  // tslint:disable-next-line:use-lifecycle-interface\r\n  ngAfterViewInit() {\r\n\r\n    let id = null;\r\n    this.route.queryParams.subscribe(params => id = params.id);\r\n    if (null != id) {\r\n      this.contactService.getContactId(id)\r\n        .subscribe(((res: any[]) => {\r\n          this.contact = res[0];\r\n        }));\r\n    }\r\n  }\r\n\r\n  getRouteLink(contact: Contact) {\r\n      return '/edycja_firma';\r\n  }\r\n\r\n  getWay(): string {\r\n    const result = this.ways.filter(s => s.value === this.contact.wayOfObtaining).pop();\r\n    // tslint:disable-next-line:triple-equals\r\n    return result != undefined ? result.viewValue : '';\r\n  }\r\n\r\n  getForms(): string {\r\n    const result = this.forms.filter(s => s.value === this.contact.company.legalForm).pop();\r\n    // tslint:disable-next-line:triple-equals\r\n    return result != undefined ? result.viewValue : '';\r\n  }\r\n}\r\n","import {Component, Injectable, Input, Output} from '@angular/core';\r\nimport {Contact, Person} from '../../services/contact.service';\r\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\r\n\r\n\r\n@Component({\r\n  selector: 'app-person-general-informations',\r\n  templateUrl: './person-general-information.component.html',\r\n  styleUrls: ['./person-general-information.component.css']\r\n})\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PersonGeneralInformationComponent {\r\n  @Input()\r\n  public personForm: FormGroup;\r\n  @Input()\r\n  public person: Person = new Person();\r\n  contact: Contact = new Contact();\r\n  submitted = false;\r\n  constructor() { }\r\n\r\n  // tslint:disable-next-line:use-lifecycle-interface\r\n  ngOnInit() {\r\n    this.initializeForm();\r\n  }\r\n\r\n  private initializeForm() {\r\n    // @ts-ignore\r\n    this.personForm = new FormGroup({\r\n      firstName : new FormControl(null),\r\n      surname :  new FormControl(null, Validators.required),\r\n      pesel :  new FormControl(null, [Validators.pattern('[0-9]{11}'), Validators.required])\r\n    });\r\n  }\r\n\r\n\r\n}\r\n","export default \"<h3 style=\\\"text-align: center\\\">Edycja</h3>\\r\\n<form (ngSubmit)=\\\"onSubmit()\\\">\\r\\n\\r\\n  <div class=\\\"container\\\">\\r\\n    <app-company-general-informations #companya></app-company-general-informations>\\r\\n    <app-base-information #baseInformation></app-base-information>\\r\\n\\r\\n    <app-address #address></app-address>\\r\\n    <app-way-of-obtaining #wayOfObtaining></app-way-of-obtaining>\\r\\n    <router-outlet></router-outlet>\\r\\n  </div>\\r\\n  <div id=\\\"submit\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-success\\\" (click)=\\\"save()\\\" >Zapisz</button>\\r\\n  </div>\\r\\n</form>\\r\\n\";","import {Component, Input, OnInit} from '@angular/core';\r\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {Contact} from '../../services/contact.service';\r\n\r\n@Component({\r\n  selector: 'app-base-information',\r\n  templateUrl: './base-information.component.html',\r\n  styleUrls: ['./base-information.component.css']\r\n})\r\nexport class BaseInformationComponent implements OnInit {\r\n  @Input()\r\n  public baseForm: FormGroup;\r\n  @Input()\r\n  contact: Contact = new Contact();\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    this.contact = new Contact();\r\n    this.initializeForm();\r\n  }\r\n\r\n\r\n  private initializeForm() {\r\n    this.baseForm = new FormGroup({\r\n      phoneNumber : new FormControl(null),\r\n      email :  new FormControl(null, [Validators.email, Validators.required]),\r\n      additionalInformation :  new FormControl(null)\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {Observable} from \"rxjs\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CompanyService {\r\n\r\n  private baseUrl = 'http://localhost:8075/kontakty';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  addCompany(company: Object): Observable<Object> {\r\n    return this.http.post(`${this.baseUrl}`, company);\r\n  }\r\n}\r\n","import {Component, Injectable, Input, OnDestroy, OnInit, Output} from '@angular/core';\r\n\r\nimport {Router} from '@angular/router';\r\nimport {AddressService} from '../../services/address.service';\r\nimport {Address} from '../../services/contact.service';\r\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\r\n\r\n\r\n@Component({\r\n  selector: 'app-address',\r\n  templateUrl: './address.component.html',\r\n  styleUrls: ['./address.component.css']\r\n})\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AddressComponent implements OnInit, OnDestroy  {\r\n  @Input()\r\n  public addressForm: FormGroup;\r\n\r\n  @Input()\r\n  public addresses: Address[] = [];\r\n  constructor(private addressService: AddressService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.addresses.push(new Address());\r\n    this.initializeForm();\r\n  }\r\n\r\n  newAddress(): void {\r\n    this.addresses.push(new Address());\r\n  }\r\n\r\n  canDeleteAddress(): boolean {\r\n    return this.addresses.length > 1;\r\n  }\r\n\r\n  deleteAddress(address: Address): void {\r\n    const idx = this.addresses.indexOf(address);\r\n    this.addresses.splice(idx, 1);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n  }\r\n\r\n  private initializeForm() {\r\n\r\n    // @ts-ignore\r\n    this.addressForm = new FormGroup({\r\n      nameAddress : new FormControl(null),\r\n      street :  new FormControl(null),\r\n      houseNumber :  new FormControl(null),\r\n      apartmentNumber :  new FormControl(null),\r\n      zipCode :  new FormControl(null, Validators.pattern('[0-9]{2}\\-[0-9]{3}')),\r\n      city :  new FormControl(null),\r\n    });\r\n  }\r\n\r\n}\r\n","import {Component, Input, OnInit, ViewChild} from '@angular/core';\r\nimport {Address, Contact, ContactService} from './services/contact.service';\r\nimport {Observable} from 'rxjs';\r\nimport {Employee} from './services/employee.service';\r\nimport {Router} from '@angular/router';\r\nimport {MatTableDataSource} from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-contacts',\r\n  templateUrl: './contacts.component.html',\r\n  styleUrls: ['./contacts.component.css']\r\n})\r\nexport class ContactsComponent implements OnInit {\r\n\r\n  constructor(private contactRestApi: ContactService, private router: Router) {}\r\n  contacts: Observable<Contact[]>;\r\n\r\n  items = [];\r\n  filteredItems = [];\r\n  pageOfItems: Array<Contact>;\r\n  filterValue: string;\r\n\r\nonChangePage(pageOfItems: Array<Contact>) {\r\n    this.pageOfItems = pageOfItems;\r\n  }\r\n  ngOnInit() {\r\n    this.reloadData();\r\n  }\r\n  getContactName(contact) {\r\n    if (null != contact.company) {\r\n      return contact.company.name;\r\n    } else if (null != contact.person) {\r\n      return  contact.person.firstName + ' ' + contact.person.lastName;\r\n    }\r\n  }\r\n\r\ngetContactType(contact) {\r\n    if (null != contact.company) {\r\n      return 'Firma';\r\n    } else if (null != contact.person) {\r\n      return  'Osoba fizyczna';\r\n    }\r\n  }\r\n\r\ngetEmail(contact: Contact) {\r\n    return contact.email;\r\n  }\r\n\r\ngetPhoneNumber(contact: Contact) {\r\n    return contact.phoneNumber;\r\n  }\r\n\r\ngetRouteLink(contact: Contact) {\r\n    if (null != contact.company) {\r\n      return '/edycja_firma';\r\n    } else if (null != contact.person) {\r\n      return  '/edycja_osoba_fizyczna';\r\n    }\r\n  }\r\nshowDetails(contact: Contact) {\r\n    if (null != contact.company) {\r\n      return '/szczegoly_kontaktu_firma';\r\n    } else if (null != contact.person) {\r\n      return  '/szczegoly_kontaktu';\r\n    }\r\n  }\r\n\r\ndeleteContact(id: number) {\r\n    this.contactRestApi.deleteContact(id)\r\n      .subscribe(\r\n        data => {\r\n          console.log(data);\r\n          this.reloadData();\r\n        },\r\n        error => console.log(error));\r\n  }\r\nreloadData() {\r\n    this.contactRestApi.getContactsList().subscribe(con => {this.items = con;\r\n    this.filteredItems = con; });\r\n  }\r\n\r\n  filter() {\r\n    this.filteredItems = (this.filterValue !== undefined || this.filterValue !== '') ? this.doFilter(this.filterValue) : this.filteredItems;\r\n  }\r\n\r\n  doFilter(filterBy: string): Contact[] {\r\n    filterBy = filterBy.toLowerCase();\r\n    return this.items.filter((contact: Contact) =>\r\n      contact.email.toLowerCase().indexOf(filterBy) > -1);\r\n  }\r\n}\r\n","export default \".mat-radio-button ~ .mat-radio-button {\\r\\n  margin-left: 16px;\\r\\n}\\r\\n\\r\\n.example-container {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n}\\r\\n\\r\\n.example-container > * {\\r\\n  width: 400px;\\r\\n}\\r\\n\\r\\nh2{\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFkZC1jb250YWN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxpQkFBaUI7QUFDbkI7O0FBRUE7RUFDRSxhQUFhO0VBQ2Isc0JBQXNCO0FBQ3hCOztBQUVBO0VBQ0UsWUFBWTtBQUNkOztBQUVBO0VBQ0Usa0JBQWtCO0FBQ3BCIiwiZmlsZSI6ImFkZC1jb250YWN0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWF0LXJhZGlvLWJ1dHRvbiB+IC5tYXQtcmFkaW8tYnV0dG9uIHtcclxuICBtYXJnaW4tbGVmdDogMTZweDtcclxufVxyXG5cclxuLmV4YW1wbGUtY29udGFpbmVyIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbn1cclxuXHJcbi5leGFtcGxlLWNvbnRhaW5lciA+ICoge1xyXG4gIHdpZHRoOiA0MDBweDtcclxufVxyXG5cclxuaDJ7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcbiJdfQ== */\";","import { Injectable } from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\r\nimport {Observable, of, pipe} from 'rxjs';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\nimport { MessageService } from './message.service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ContactService {\r\n\r\n  private api = 'http://localhost:8075';\r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      'Content-Type': 'application/json'\r\n    })\r\n  }\r\n  private contact: Contact;\r\n\r\n  constructor(private httpClient: HttpClient, private messageService: MessageService) {\r\n  }\r\n\r\n  getData(): Observable<any[]> {\r\n    return this.httpClient.get<any[]>(this.api + '/contacts/');\r\n  }\r\n\r\n\r\n//\r\n  getContactId(id: string): Observable<Contact[]> {\r\n    const url = this.api + '/contact/' + id;\r\n    return this.httpClient.get<Contact[]>(url);\r\n  }\r\n\r\n  addContact(contact: Contact): Observable<Contact> {\r\n    return this.httpClient.post<Contact>(this.api + '/contacts/', contact);\r\n  }\r\n\r\n\r\n\r\n  // deleteContact(id: number): Observable<Contact> {\r\n  //   return this.httpClient.delete<Contact>(this.api + '/contacts/');\r\n  // }\r\n\r\n  // @ts-ignore\r\n  updateCompany(id: number, value: any): Observable<RootObject> {\r\n    // return this.httpClient.put(`${this.baseUrl}/${id}`, value);\r\n  }\r\n\r\n  // @ts-ignore\r\n  deleteCompany(id: number): Observable<any> {\r\n    // return this.http.delete(`${this.baseUrl}/${id}`, { responseType: 'text' });\r\n  }\r\n\r\n  // @ts-ignore\r\n  showCompanies(): Observable<any> {\r\n    // return this.http.get(`${this.baseUrl}`);\r\n  }\r\n\r\n\r\n  private log(message: string) {\r\n    this.messageService.add(`HeroService: ${message}`);\r\n  }\r\n\r\n  /**\r\n   * Handle Http operation that failed.\r\n   * Let the app continue.\r\n   * @param operation - name of the operation that failed\r\n   * @param result - optional value to return as the observable result\r\n   */\r\n  private handleError<T>(operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n\r\n      // TODO: send the error to remote logging infrastructure\r\n      console.error(error); // log to console instead\r\n\r\n      // TODO: better job of transforming error for user consumption\r\n      this.log(`${operation} failed: ${error.message}`);\r\n\r\n      // Let the app keep running by returning an empty result.\r\n      return of(result as T);\r\n    };\r\n\r\n  }\r\n\r\n  getContactsList(): Observable<any> {\r\n    return this.httpClient.get(this.api + '/contacts');\r\n  }\r\n\r\n  deleteContact(id: number): Observable<any> {\r\n    return this.httpClient.delete(this.api + '/contacts/' + id);\r\n  }\r\n\r\n  deleteEmployee(id: number): Observable<any> {\r\n    return this.httpClient.delete(this.api + '/employees/' + id);\r\n  }\r\n}\r\n\r\nexport class Company {\r\n  id: number;\r\n  name: string;\r\n  nip: number;\r\n  regon: number;\r\n  krs: string;\r\n  legalForm: string;\r\n  legalFormOther: string;\r\n}\r\n\r\nexport class Person {\r\n  id: number;\r\n  firstName: string;\r\n  lastName: string;\r\n  pesel: number;\r\n}\r\n\r\nexport class Address {\r\n  id: number;\r\n  street: string;\r\n  houseNumber: string;\r\n  flatNumber: string;\r\n  zipCode: string;\r\n  city: string;\r\n  name: string;\r\n}\r\n\r\nexport  class Contact {\r\n  id: number;\r\n  phoneNumber: string;\r\n  email: string;\r\n  additionalInfo: string;\r\n  company: Company;\r\n  person: Person;\r\n  wayOfObtaining: string;\r\n  legalForm: string;\r\n  recommending: string;\r\n  addresses: Address[];\r\n}\r\n\r\n// export class Employee {\r\n//   id: number;\r\n//   firstName: string;\r\n//   lastName: string;\r\n//   position: string;\r\n//   phoneNumber: number;\r\n//   isActive: string;\r\n//   company: Company;\r\n// }\r\n","export default \".hover-icons{\\r\\n  cursor: pointer;\\r\\n  margin-right: 20%;\\r\\n}\\r\\n\\r\\nbutton{\\r\\n  float: right;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVtcGxveWVlcy1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxlQUFlO0VBQ2YsaUJBQWlCO0FBQ25COztBQUVBO0VBQ0UsWUFBWTtBQUNkIiwiZmlsZSI6ImVtcGxveWVlcy1saXN0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuaG92ZXItaWNvbnN7XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG4gIG1hcmdpbi1yaWdodDogMjAlO1xyXG59XHJcblxyXG5idXR0b257XHJcbiAgZmxvYXQ6IHJpZ2h0O1xyXG59XHJcbiJdfQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhZGQtZW1wbG95ZWVzLmNvbXBvbmVudC5jc3MifQ== */\";","export default \"<mat-dialog-content>\\r\\n  <h3>Dodaj pracownika</h3>\\r\\n</mat-dialog-content>\\r\\n\\r\\n<mat-dialog-actions>\\r\\n<div class=\\\"container\\\">\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <mat-label for=\\\"firstName\\\">Imię</mat-label>\\r\\n    <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"firstName\\\" required [(ngModel)]=\\\"employee.firstName\\\" name=\\\"firstName\\\" >\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <mat-label for=\\\"lastName\\\">Nazwisko</mat-label>\\r\\n    <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"lastName\\\" required [(ngModel)]=\\\"employee.lastName\\\" name=\\\"lastName\\\" >\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <mat-label for=\\\"position\\\">Stanowisko</mat-label>\\r\\n    <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"position\\\" required [(ngModel)]=\\\"employee.position\\\" name=\\\"position\\\"/>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <mat-label for=\\\"phoneNumber\\\">Telefon</mat-label>\\r\\n    <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"phoneNumber\\\" required [(ngModel)]=\\\"employee.phoneNumber\\\" name=\\\"phoneNumber\\\" >\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n<div mat-dialog-actions>\\r\\n  <button type=\\\"button\\\" class=\\\"btn btn-outline-success\\\" (click)=\\\"save()\\\">Zapisz</button>\\r\\n</div>\\r\\n</mat-dialog-actions>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\";","import {AfterViewInit, Component, OnInit, ViewChild} from '@angular/core';\r\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {Router} from '@angular/router';\r\nimport {Contact, ContactService} from '../services/contact.service';\r\nimport {PersonGeneralInformationComponent} from '../contact-parts/person-general-informations/person-general-information.component';\r\nimport {AddressComponent} from '../contact-parts/address/address.component';\r\nimport {WayOfObtainingComponent} from '../contact-parts/way-of-obtaining/way-of-obtaining.component';\r\nimport {CompanyGeneralInformationComponent} from '../contact-parts/company-general-informations/company-general-information.component';\r\nimport {BaseInformationComponent} from '../contact-parts/base-information/base-information.component';\r\n\r\n\r\nexport interface Way {\r\n  value: string;\r\n  viewValue: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-add-contact',\r\n  templateUrl: './add-contact.component.html',\r\n  styleUrls: ['./add-contact.component.css']\r\n})\r\nexport class AddContactComponent implements OnInit, AfterViewInit {\r\n\r\n  // @ts-ignore\r\n  @ViewChild('company', { read: CompanyGeneralInformationComponent })\r\n  companyComponent: CompanyGeneralInformationComponent;\r\n  // @ts-ignore\r\n  @ViewChild('person', { read: PersonGeneralInformationComponent })\r\n  personComponent: PersonGeneralInformationComponent;\r\n  // @ts-ignore\r\n  @ViewChild('wayOfObtainingComponent', { read: WayOfObtainingComponent })\r\n  wayOfObtainingComponent: WayOfObtainingComponent;\r\n  // @ts-ignore\r\n  @ViewChild('address', { read: AddressComponent })\r\n  addressComponent: AddressComponent;\r\n  @ViewChild('baseInformation', { read: BaseInformationComponent })\r\n  baseComponent: BaseInformationComponent;\r\n\r\n\r\n  constructor(private contactService: ContactService, private router: Router) {\r\n\r\n  }\r\n  contact: Contact;\r\n  submitted = false;\r\n  isShow = 'PERSON';\r\n  address: AddressComponent;\r\n  contactForm: FormGroup;\r\n\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  save() {\r\n    if (!this.isValid()) {\r\n      this.markAsTouched();\r\n      return;\r\n    }\r\n    this.contact = this.baseComponent.contact;\r\n    if (this.isShow === 'PERSON') {\r\n      this.contact.person = this.personComponent.person;\r\n    } else if (this.isShow === 'COMPANY') {\r\n      this.contact.company = this.companyComponent.companyy;\r\n    }\r\n    this.contact.wayOfObtaining = this.wayOfObtainingComponent.wayOfObtaining;\r\n    this.contact.recommending = this.wayOfObtainingComponent.recommending;\r\n    this.contact.addresses = this.addressComponent.addresses;\r\n    this.contactService.addContact(this.contact)\r\n      .subscribe(data => console.log(data), error => console.log(error));\r\n    this.contact = new Contact();\r\n    this.gotoList();\r\n\r\n  }\r\n\r\n  private markAsTouched() {\r\n// tslint:disable-next-line:triple-equals\r\n    if (this.companyComponent != undefined) {\r\n      this.companyComponent.companyForm.markAllAsTouched();\r\n    }\r\n    // tslint:disable-next-line:triple-equals\r\n    if (this.personComponent != undefined) {\r\n      this.personComponent.personForm.markAllAsTouched();\r\n    }\r\n    this.addressComponent.addressForm.markAllAsTouched();\r\n    this.baseComponent.baseForm.markAllAsTouched();\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n  }\r\n\r\n  gotoList() {\r\n    this.router.navigate(['/kontakty']);\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n  }\r\n\r\n\r\n\r\n  isValid() {\r\n    let isValidCompanyOrPerson;\r\n    if (this.isShow === 'PERSON') {\r\n      isValidCompanyOrPerson = this.personComponent.personForm.valid;\r\n    } else {\r\n      isValidCompanyOrPerson = this.companyComponent.companyForm.valid;\r\n    }\r\n    return this.baseComponent.baseForm.valid && isValidCompanyOrPerson && this.addressComponent.addressForm.valid;\r\n  }\r\n}\r\n","export default \"button{\\r\\n  float: right;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRldGFpbHMtcGVyc29uLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxZQUFZO0FBQ2QiLCJmaWxlIjoiZGV0YWlscy1wZXJzb24uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImJ1dHRvbntcclxuICBmbG9hdDogcmlnaHQ7XHJcbn1cclxuIl19 */\";","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class MessageService {\r\n  messages: string[] = [];\r\n\r\n  add(message: string) {\r\n    this.messages.push(message);\r\n  }\r\n\r\n  clear() {\r\n    this.messages = [];\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n\r\nimport {ContactsComponent} from './contacts/contacts.component';\r\nimport {AddContactComponent} from './contacts/add-contact/add-contact.component';\r\nimport {EditCompanyComponent} from './contacts/edit-company/edit-company.component';\r\nimport {EditPersonComponent} from './contacts/edit-person/edit-person.component';\r\nimport {DetailsPersonComponent} from './details/details-person/details-person.component';\r\nimport {DetailsCompanyComponent} from './details/details-company/details-company.component';\r\nimport {AddEmployeesComponent} from './details/details-company/employees/add-employees/add-employees.component';\r\nimport {EmployeesListComponent} from './details/details-company/employees/employees-list/employees-list.component';\r\nimport {EditEmployeeComponent} from './details/details-company/employees/edit-employee/edit-employee.component';\r\nimport {AppComponent} from './app.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ContactsComponent\r\n  },\r\n  {\r\n    path: 'kontakty',\r\n    component: ContactsComponent\r\n  },\r\n  {\r\n    path: 'dodaj_kontakt',\r\n    component: AddContactComponent\r\n  },\r\n  {\r\n    path: 'edycja_firma',\r\n    component: EditCompanyComponent\r\n  },\r\n  {\r\n    path: 'edycja_osoba_fizyczna',\r\n    component: EditPersonComponent\r\n  },\r\n  {\r\n    path: 'szczegoly_kontaktu',\r\n    component: DetailsPersonComponent\r\n  },\r\n  {\r\n    path: 'szczegoly_kontaktu_firma',\r\n    component: DetailsCompanyComponent\r\n  },\r\n  {\r\n    path: 'szczegoly_kontaktu_pracownicy',\r\n    component: EmployeesListComponent\r\n  },\r\n  {\r\n    path: 'dodaj_pracownika',\r\n    component: AddEmployeesComponent\r\n  },\r\n  {\r\n    path: 'edycja_pracownik',\r\n    component: EditEmployeeComponent\r\n  }\r\n\r\n\r\n  ];\r\n\r\n\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","export default \"<h2>Lista kontaktów</h2>\\r\\n\\r\\n<div><button mat-button-toggle-group class=\\\"add-contact-button\\\" routerLink=\\\"/dodaj_kontakt\\\">Dodaj</button></div>\\r\\n<br>\\r\\n<input type=\\\"text\\\" [(ngModel)]=\\\"filterValue\\\"/>\\r\\n<button type=\\\"button\\\" name=\\\"Filter\\\" (click)=\\\"filter()\\\">Filtruj</button>\\r\\n<div class=\\\"panel-body\\\">\\r\\n  <table class=\\\"table table-striped\\\" >\\r\\n    <thead>\\r\\n    <tr class=\\\"border-element\\\">\\r\\n      <th class=\\\"border-element\\\">Nazwa kontaktu</th>\\r\\n      <th class=\\\"border-element\\\">Rodzaj kontaktu</th>\\r\\n      <th class=\\\"border-element\\\">Email</th>\\r\\n      <th class=\\\"border-element\\\">Telefon</th>\\r\\n      <th class=\\\"border-element\\\">Akcje</th>\\r\\n    </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n\\r\\n    <tr *ngFor=\\\"let contact of pageOfItems\\\">\\r\\n      <td id=\\\"hover-contact\\\" [routerLink]=\\\"showDetails(contact)\\\"\\r\\n          [queryParams]=\\\"{id: contact.id}\\\">{{getContactName(contact)}}</td>\\r\\n      <td>{{getContactType(contact)}}</td>\\r\\n      <td>{{getEmail(contact)}}</td>\\r\\n      <td>{{getPhoneNumber(contact)}}</td>\\r\\n      <td>\\r\\n        <mat-icon aria-hidden=\\\"false\\\" aria-label=\\\"Example create-black icon\\\" [routerLink]=\\\"getRouteLink(contact)\\\"\\r\\n                  [queryParams]=\\\"{id: contact.id}\\\" class=\\\"hover-icons\\\">create\\r\\n        </mat-icon>\\r\\n        <mat-icon aria-hidden=\\\"false\\\" aria-label=\\\"Example close-black icon\\\" (click)=\\\"deleteContact(contact.id)\\\"\\r\\n                  class=\\\"hover-icons\\\">close\\r\\n        </mat-icon>\\r\\n      </td>\\r\\n    </tr>\\r\\n    </tbody>\\r\\n  </table>\\r\\n  <!-- <div class=\\\"pagination\\\">\\r\\n    <!-- <jw-pagination [items]=\\\"filteredItems\\\" (changePage)=\\\"onChangePage($event)\\\" [pageSize]=\\\"3\\\"></jw-pagination> -->\\r\\n  </div> -->\\r\\n</div>\\r\\n\";","export default \"<h2 style=\\\"text-align: center\\\">Edycja</h2>\\r\\n\\r\\n<br>\\r\\n<form (ngSubmit)=\\\"onSubmit()\\\">\\r\\n\\r\\n  <div class=\\\"container\\\">\\r\\n    <app-person-general-informations #person ></app-person-general-informations>\\r\\n    <app-base-information #baseInformation></app-base-information>\\r\\n\\r\\n    <app-address #address></app-address>\\r\\n    <app-way-of-obtaining #wayOfObtainingComponent></app-way-of-obtaining>\\r\\n    <router-outlet></router-outlet>\\r\\n  </div>\\r\\n  <div id=\\\"submit\\\">\\r\\n    <button mat-button type=\\\"submit\\\" class=\\\"btn btn-success\\\" (click)=\\\"save()\\\">Zapisz</button>\\r\\n  </div>\\r\\n</form>\\r\\n\\r\\n\";","import {Component, OnInit} from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'app-details-company',\r\n  templateUrl: './details-company.component.html',\r\n  styleUrls: ['./details-company.component.css']\r\n})\r\nexport class DetailsCompanyComponent implements OnInit {\r\n\r\n  constructor() {\r\n  }\r\n  ngOnInit() {\r\n\r\n  }\r\n}\r\n","export default \"hr{\\r\\n  width: 100%;\\r\\n}\\r\\n.container{\\r\\n  width: 1000px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVkaXQtcGVyc29uLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXO0FBQ2I7QUFDQTtFQUNFLGFBQWE7QUFDZiIsImZpbGUiOiJlZGl0LXBlcnNvbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaHJ7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuLmNvbnRhaW5lcntcclxuICB3aWR0aDogMTAwMHB4O1xyXG59XHJcbiJdfQ== */\";","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {Observable} from \"rxjs\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AddressService {\r\n\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  private baseUrl = 'http://localhost:8075/kontakty/employees';\r\n\r\n\r\n\r\n  getAddressById(id: number): Observable<any> {\r\n    return this.http.get(`${this.baseUrl}/${id}`);\r\n  }\r\n\r\n  addAddress(address: Object): Observable<Object> {\r\n    return this.http.post(`${this.baseUrl}`, address);\r\n  }\r\n\r\n  updateAddress(id: number, value: any): Observable<Object> {\r\n    return this.http.put(`${this.baseUrl}/${id}`, value);\r\n  }\r\n\r\n  deleteAddress(id: number): Observable<any> {\r\n    return this.http.delete(`${this.baseUrl}/${id}`, { responseType: 'text' });\r\n  }\r\n\r\n  showAddresses(): Observable<any> {\r\n    return this.http.get(`${this.baseUrl}`);\r\n  }\r\n}\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}