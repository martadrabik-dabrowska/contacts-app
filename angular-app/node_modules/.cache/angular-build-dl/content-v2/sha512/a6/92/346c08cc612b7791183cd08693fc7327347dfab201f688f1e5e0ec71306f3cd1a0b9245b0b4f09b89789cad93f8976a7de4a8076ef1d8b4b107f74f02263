{"version":3,"sources":["webpack:///src/app/details/details-company/summary/summary.component.html","webpack:///src/app/contacts/contact-parts/person-general-informations/person-general-information.component.css","webpack:///src/app/contacts/contact-parts/company-general-informations/company-general-information.component.css","webpack:///src/app/contacts/edit-company/edit-company.component.css","webpack:///src/app/contacts/edit-company/edit-company.component.ts","webpack:///src/app/details/details-company/employees/edit-employee/edit-employee.component.ts","webpack:///src/app/contacts/contacts.component.css","webpack:///src/app/details/details-company/employees/add-employees/add-employees.component.ts","webpack:///src/app/details/details-company/details-company.component.css","webpack:///src/app/contacts/contact-parts/person-general-informations/person-general-information.component.html","webpack:///src/app/contacts/edit-person/edit-person.component.ts","webpack:///src/app/app.component.css","webpack:///src/environments/environment.ts","webpack:///src/app/details/details-person/details-person.component.html","webpack:///src/app/contacts/contact-parts/base-information/base-information.component.html","webpack:///src/app/contacts/contact-parts/base-information/base-information.component.css","webpack:///src/app/contacts/contact-parts/way-of-obtaining/way-of-obtaining.component.html","webpack:///src/app/contacts/add-contact/add-contact.component.html","webpack:///src/app/contacts/services/employee.service.ts","webpack:///src/app/details/details-company/employees/employees-list/employees-list.component.ts","webpack:///src/app/contacts/contact-parts/address/address.component.css","webpack:///src/app/details/details-company/summary/summary.component.css","webpack:///src/app/details/details-company/details-company.component.html","webpack:///src/app/contacts/contact-parts/way-of-obtaining/way-of-obtaining.component.css","webpack:///src/app/contacts/contact-parts/way-of-obtaining/way-of-obtaining.component.ts","webpack:///src/app/contacts/contact-parts/company-general-informations/company-general-information.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/details/details-person/details-person.component.ts","webpack:///src/app/contacts/contact-parts/company-general-informations/company-general-information.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/details/details-company/employees/employees-list/employees-list.component.html","webpack:///src/app/details/details-company/employees/edit-employee/edit-employee.component.html","webpack:///src/app/contacts/contact-parts/address/address.component.html","webpack:///src/app/details/details-company/employees/edit-employee/edit-employee.component.css","webpack:///src/app/details/details-company/summary/summary.component.ts","webpack:///src/app/contacts/contact-parts/person-general-informations/person-general-information.component.ts","webpack:///src/app/contacts/edit-company/edit-company.component.html","webpack:///src/app/contacts/contact-parts/base-information/base-information.component.ts","webpack:///src/app/contacts/services/company.service.ts","webpack:///src/app/contacts/contact-parts/address/address.component.ts","webpack:///src/app/contacts/contacts.component.ts","webpack:///src/app/contacts/add-contact/add-contact.component.css","webpack:///src/app/contacts/services/contact.service.ts","webpack:///src/app/details/details-company/employees/employees-list/employees-list.component.css","webpack:///src/app/details/details-company/employees/add-employees/add-employees.component.css","webpack:///src/app/details/details-company/employees/add-employees/add-employees.component.html","webpack:///src/app/contacts/add-contact/add-contact.component.ts","webpack:///src/app/details/details-person/details-person.component.css","webpack:///src/app/contacts/services/message.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/contacts/contacts.component.html","webpack:///src/app/contacts/edit-person/edit-person.component.html","webpack:///src/app/details/details-company/details-company.component.ts","webpack:///src/app/contacts/edit-person/edit-person.component.css","webpack:///src/main.ts","webpack:///src/app/contacts/services/address.service.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["EditCompanyComponent","contactService","router","route","ref","contact","submitted","wayControl","required","email","ways","value","viewValue","id","queryParams","subscribe","params","getContactId","res","updateToOtherModule","detectChanges","baseComponent","companyComponent","companyy","company","wayOfObtainingComponent","wayOfObtaining","recommending","addressComponent","addresses","hasError","addContact","data","console","log","error","gotoList","navigate","read","selector","template","EditEmployeeComponent","employeeObj","employeeService","dialogRef","employee","addEmployee","close","AddEmployeesComponent","obj","active","EditPersonComponent","person","environment","production","EmployeeService","httpClient","api","httpOptions","headers","post","get","companyId","providedIn","Employee","EmployeesListComponent","dialog","reloadData","employees","getEmployeesByCompany","deleteEmployee","open","width","height","afterClosed","result","WayOfObtainingComponent","AppComponent","title","DetailsPersonComponent","CompanyGeneralInformationComponent","companyService","forms","initializeForm","companyForm","name","nip","pattern","regon","krs","legalForm","AppModule","declarations","imports","exports","providers","bootstrap","SummaryComponent","filter","s","pop","undefined","PersonGeneralInformationComponent","personForm","firstName","surname","pesel","BaseInformationComponent","baseForm","phoneNumber","additionalInformation","CompanyService","http","baseUrl","AddressComponent","addressService","push","length","address","idx","indexOf","splice","addressForm","nameAddress","street","houseNumber","apartmentNumber","zipCode","city","ContactsComponent","contactRestApi","items","filteredItems","pageOfItems","lastName","deleteContact","getContactsList","con","filterValue","doFilter","filterBy","toLowerCase","ContactService","messageService","url","message","add","operation","Company","Person","Address","Contact","AddContactComponent","isShow","isValid","markAsTouched","personComponent","markAllAsTouched","isValidCompanyOrPerson","valid","MessageService","messages","routes","path","component","AppRoutingModule","forRoot","relativeLinkResolution","DetailsCompanyComponent","bootstrapModule","err","AddressService","put","responseType","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module"],"mappings":"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","file":"main-es5.js","sourcesContent":["export default \"<div #aboveMenu>\\r\\n  <div id=\\\"left-position\\\">\\r\\n  <div class=\\\"label-div\\\">\\r\\n    <label><b>Nazwa firmy: </b></label> {{contact.company.name}}\\r\\n  </div>\\r\\n  <div class=\\\"label-div\\\">\\r\\n    <label><b>NIP: </b></label> {{contact.company.nip}}\\r\\n  </div>\\r\\n  <div>\\r\\n    <label><b>REGON: </b></label> {{contact.company.regon}}\\r\\n  </div>\\r\\n  <div>\\r\\n    <label><b>KRS: </b></label> {{contact.company.krs}}\\r\\n  </div>\\r\\n  <div>\\r\\n    <label><b>Forma prawna: </b></label> {{getForms()}}\\r\\n  </div>\\r\\n  <div *ngIf=\\\"contact.company.legalForm=='OTHER'\\\">\\r\\n    <label><b>Inna forma prawna: </b></label> {{contact.company.legalFormOther}}\\r\\n  </div>\\r\\n  <div>\\r\\n    <label><b>Telefon: </b></label> {{contact.phoneNumber}}\\r\\n  </div>\\r\\n  <div>\\r\\n    <label><b>Email: </b></label> {{contact.email}}\\r\\n  </div>\\r\\n    <div>\\r\\n      <label><b>Informacje dodatkowe: </b></label> {{contact.additionalInfo}}\\r\\n    </div>\\r\\n  </div>\\r\\n<div id=\\\"right-position\\\">\\r\\n  <div>\\r\\n    <label><b>Sposób pozyskania: </b></label> {{getWay()}}\\r\\n</div>\\r\\n  <div *ngIf=\\\"contact.wayOfObtaining=='RECOMENDATION'\\\">\\r\\n    <label><b>Rekomendujący: </b></label> {{contact.recommending}}\\r\\n  </div>\\r\\n</div>\\r\\n  <div id=\\\"bottom-position\\\">\\r\\n  <hr>\\r\\n  <h4>Adresy: </h4>\\r\\n  <div class=\\\"adress-style\\\" style=\\\"width: 400px;\\\">\\r\\n    <div *ngFor=\\\"let address of contact.addresses\\\">\\r\\n      <div class=\\\"form-group\\\" style=\\\"font-weight: bold\\\">\\r\\n        {{address.name}}\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        {{address.street}} {{address.houseNumber}}/{{address.flatNumber}}\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        {{address.zipCode}} {{address.city}}\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n  <button [routerLink]=\\\"getRouteLink(contact)\\\" [queryParams]=\\\"{id: contact.id}\\\" class=\\\"btn btn-primary\\\">Edycja</button><br>\\r\\n</div>\\r\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwZXJzb24tZ2VuZXJhbC1pbmZvcm1hdGlvbi5jb21wb25lbnQuY3NzIn0= */\";","export default \"#legal-form-other  {\\r\\n  float: right;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBhbnktZ2VuZXJhbC1pbmZvcm1hdGlvbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsWUFBWTtBQUNkIiwiZmlsZSI6ImNvbXBhbnktZ2VuZXJhbC1pbmZvcm1hdGlvbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiI2xlZ2FsLWZvcm0tb3RoZXIgIHtcclxuICBmbG9hdDogcmlnaHQ7XHJcbn1cclxuIl19 */\";","export default \".form-group {\\r\\n  width: 400px;\\r\\n}\\r\\nhr{\\r\\n  width: 100%;\\r\\n}\\r\\n.container{\\r\\n  width: 1000px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVkaXQtY29tcGFueS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsWUFBWTtBQUNkO0FBQ0E7RUFDRSxXQUFXO0FBQ2I7QUFDQTtFQUNFLGFBQWE7QUFDZiIsImZpbGUiOiJlZGl0LWNvbXBhbnkuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5mb3JtLWdyb3VwIHtcclxuICB3aWR0aDogNDAwcHg7XHJcbn1cclxuaHJ7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuLmNvbnRhaW5lcntcclxuICB3aWR0aDogMTAwMHB4O1xyXG59XHJcbiJdfQ== */\";","import {AfterViewInit, ChangeDetectorRef, Component, ViewChild, OnInit} from '@angular/core';\r\nimport {CompanyGeneralInformationComponent} from '../contact-parts/company-general-informations/company-general-information.component';\r\nimport {PersonGeneralInformationComponent} from '../contact-parts/person-general-informations/person-general-information.component';\r\n\r\nimport {AddressComponent} from '../contact-parts/address/address.component';\r\nimport {Contact, ContactService} from '../services/contact.service';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {FormControl, Validators} from '@angular/forms';\r\nimport {Way} from '../add-contact/add-contact.component';\r\nimport {WayOfObtainingComponent} from '../contact-parts/way-of-obtaining/way-of-obtaining.component';\r\nimport {BaseInformationComponent} from '../contact-parts/base-information/base-information.component';\r\n\r\n@Component({\r\n  selector: 'app-edit-company',\r\n  templateUrl: './edit-company.component.html',\r\n  styleUrls: ['./edit-company.component.css']\r\n})\r\nexport class EditCompanyComponent implements OnInit, AfterViewInit {\r\n\r\n\r\n\r\n  // @ts-ignore\r\n  @ViewChild('companya', { read: CompanyGeneralInformationComponent })\r\n  companyComponent: CompanyGeneralInformationComponent;\r\n  // @ts-ignore\r\n  @ViewChild('wayOfObtaining', { read: WayOfObtainingComponent })\r\n  wayOfObtainingComponent: WayOfObtainingComponent;\r\n  // @ts-ignore\r\n  @ViewChild('address', { read: AddressComponent })\r\n  addressComponent: AddressComponent;\r\n  @ViewChild('baseInformation', { read: BaseInformationComponent })\r\n  baseComponent: BaseInformationComponent;\r\n\r\n\r\n\r\n  // tslint:disable-next-line:max-line-length\r\n  constructor(private contactService: ContactService, private router: Router, private route: ActivatedRoute, private ref: ChangeDetectorRef){\r\n\r\n  }\r\n\r\n  contact: Contact = new Contact();\r\n  submitted = false;\r\n  address: AddressComponent;\r\n  recomendate: WayOfObtainingComponent;\r\n  wayControl = new FormControl('', [Validators.required]);\r\n  email = new FormControl('', [Validators.required, Validators.email]);\r\n\r\n  ways: Way[] = [\r\n    {value: 'recommendation', viewValue: 'Rekomendacja'},\r\n    {value: 'conference', viewValue: 'konferencja i szkolenie'},\r\n    {value: 'social media', viewValue: 'media społęcznościowe'},\r\n    {value: 'web page', viewValue: 'strona www'},\r\n    {value: 'other', viewValue: 'inne'}\r\n  ];\r\n\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    let id = null;\r\n    this.route.queryParams.subscribe(params => id = params.id);\r\n    if (null != id) {\r\n      this.contactService.getContactId(id)\r\n        .subscribe(((res: any[]) => {\r\n          this.contact = res[0];\r\n          this.updateToOtherModule(this.contact);\r\n        }));\r\n    } else {\r\n      this.contact = new Contact();\r\n    }\r\n  }\r\n  updateToOtherModule(contact: Contact) {\r\n    this.ref.detectChanges();\r\n    this.baseComponent.contact = contact;\r\n    this.companyComponent.companyy = contact.company;\r\n    this.wayOfObtainingComponent.wayOfObtaining = contact.wayOfObtaining\r\n    this.wayOfObtainingComponent.recommending = contact.recommending;\r\n    this.addressComponent.addresses = contact.addresses;\r\n  }\r\n\r\n  getErrorMessage() {\r\n    if (this.email.hasError('required')) {\r\n      return 'Podaj email';\r\n    }\r\n\r\n    return this.email.hasError('email') ? 'Niepoprawny adres email' : '';\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  // newEmployee(): void {\r\n  //   //   this.submitted = false;\r\n  //   //   this.contact = new Contact();\r\n  //   // }\r\n\r\n  save() {\r\n    this.contact = this.baseComponent.contact;\r\n    this.contact.company = this.companyComponent.companyy;\r\n    this.contact.wayOfObtaining = this.wayOfObtainingComponent.wayOfObtaining;\r\n    this.contact.recommending = this.wayOfObtainingComponent.recommending;\r\n    this.contact.addresses = this.addressComponent.addresses;\r\n    this.contactService.addContact(this.contact)\r\n      .subscribe(data => console.log(data), error => console.log(error));\r\n    this.contact = new Contact();\r\n    this.gotoList();\r\n\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n  }\r\n\r\n  gotoList() {\r\n    this.router.navigate(['/kontakty']);\r\n  }\r\n\r\n\r\n}\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {Employee, EmployeeService} from '../../../../contacts/services/employee.service';\r\nimport {Router} from '@angular/router';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-edit-employee',\r\n  templateUrl: './edit-employee.component.html',\r\n  styleUrls: ['./edit-employee.component.css']\r\n})\r\nexport class EditEmployeeComponent implements OnInit {\r\n  submitted = false;\r\n  employee: Employee;\r\n  // tslint:disable-next-line:max-line-length\r\n  constructor( @Inject(MAT_DIALOG_DATA) private employeeObj: any, private employeeService: EmployeeService, private router: Router, public dialogRef: MatDialogRef<EditEmployeeComponent> ) {\r\n    this.employee = employeeObj.employee;\r\n  }\r\n\r\n  ngOnInit( ) {\r\n  }\r\n\r\n  save() {\r\n    //  this.contact.addresses.push( this.address.address);\r\n    this.employeeService.addEmployee(this.employee)\r\n      .subscribe(data => console.log(data), error => console.log(error));\r\n    this.dialogRef.close();\r\n  //  this.gotoList();\r\n\r\n  }\r\n  gotoList() {\r\n    this.router.navigate(['/szczegoly_kontaktu_pracownicy']);\r\n  }\r\n\r\n}\r\n","export default \".add-contact-button{\\r\\n  float: right;\\r\\n  margin: 20px;\\r\\n}\\r\\n\\r\\nh2{\\r\\n  font-weight: bold;\\r\\n  text-align: center;\\r\\n  margin-top: 20px;\\r\\n}\\r\\n\\r\\ntable tr td  {\\r\\n  border : 1px solid black;\\r\\n\\r\\n}\\r\\n\\r\\n.border-element{\\r\\n  border : 1px solid black;\\r\\n}\\r\\n\\r\\n#hover-contact{\\r\\ncursor: pointer;\\r\\n\\r\\n}\\r\\n\\r\\n.hover-icons{\\r\\n  cursor: pointer;\\r\\n  margin-right: 20%;\\r\\n}\\r\\n\\r\\n.pagination:hover{\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbnRhY3RzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxZQUFZO0VBQ1osWUFBWTtBQUNkOztBQUVBO0VBQ0UsaUJBQWlCO0VBQ2pCLGtCQUFrQjtFQUNsQixnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSx3QkFBd0I7O0FBRTFCOztBQUVBO0VBQ0Usd0JBQXdCO0FBQzFCOztBQUVBO0FBQ0EsZUFBZTs7QUFFZjs7QUFDQTtFQUNFLGVBQWU7RUFDZixpQkFBaUI7QUFDbkI7O0FBRUE7RUFDRSxlQUFlO0FBQ2pCIiwiZmlsZSI6ImNvbnRhY3RzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYWRkLWNvbnRhY3QtYnV0dG9ue1xyXG4gIGZsb2F0OiByaWdodDtcclxuICBtYXJnaW46IDIwcHg7XHJcbn1cclxuXHJcbmgye1xyXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBtYXJnaW4tdG9wOiAyMHB4O1xyXG59XHJcblxyXG50YWJsZSB0ciB0ZCAge1xyXG4gIGJvcmRlciA6IDFweCBzb2xpZCBibGFjaztcclxuXHJcbn1cclxuXHJcbi5ib3JkZXItZWxlbWVudHtcclxuICBib3JkZXIgOiAxcHggc29saWQgYmxhY2s7XHJcbn1cclxuXHJcbiNob3Zlci1jb250YWN0e1xyXG5jdXJzb3I6IHBvaW50ZXI7XHJcblxyXG59XHJcbi5ob3Zlci1pY29uc3tcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgbWFyZ2luLXJpZ2h0OiAyMCU7XHJcbn1cclxuXHJcbi5wYWdpbmF0aW9uOmhvdmVye1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxufVxyXG4iXX0= */\";","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {Router} from '@angular/router';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material';\r\nimport {Company} from '../../../../contacts/services/contact.service';\r\nimport {Employee, EmployeeService} from '../../../../contacts/services/employee.service';\r\n\r\n@Component({\r\n  selector: 'app-add-employees',\r\n  templateUrl: './add-employees.component.html',\r\n  styleUrls: ['./add-employees.component.css']\r\n})\r\nexport class AddEmployeesComponent implements OnInit {\r\n  private company: Company;\r\n  constructor(@Inject(MAT_DIALOG_DATA) private obj: any, private employeeService: EmployeeService, private router: Router, public dialogRef: MatDialogRef<AddEmployeesComponent>) {\r\n    this.company = obj.company;\r\n  }\r\n\r\n\r\n  employee: Employee = new Employee();\r\n  submitted = false;\r\n\r\nngOnInit( ) {\r\n  this.employee = new Employee();\r\n}\r\n\r\n  newEmployee(): void {\r\n    this.submitted = false;\r\n    this.employee = new Employee();\r\n  }\r\n\r\n  save() {\r\n    this.employee.active = true;\r\n    this.employee.company = this.company;\r\n    this.employeeService.addEmployee(this.employee)\r\n      .subscribe(data => console.log(data), error => console.log(error));\r\n    this.employee = new Employee();\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","export default \"#summary{\\r\\n  float: left;\\r\\n}\\r\\n\\r\\n#employees{\\r\\n  float: right;\\r\\n\\r\\n}\\r\\n\\r\\n.mat-tab-group {\\r\\nwidth: 100%;\\r\\n  margin-left : 50px ;\\r\\n  margin-right: 150px;\\r\\n  margin-bottom: 40px;\\r\\n}\\r\\n\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRldGFpbHMtY29tcGFueS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBVztBQUNiOztBQUVBO0VBQ0UsWUFBWTs7QUFFZDs7QUFFQTtBQUNBLFdBQVc7RUFDVCxtQkFBbUI7RUFDbkIsbUJBQW1CO0VBQ25CLG1CQUFtQjtBQUNyQiIsImZpbGUiOiJkZXRhaWxzLWNvbXBhbnkuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIiNzdW1tYXJ5e1xyXG4gIGZsb2F0OiBsZWZ0O1xyXG59XHJcblxyXG4jZW1wbG95ZWVze1xyXG4gIGZsb2F0OiByaWdodDtcclxuXHJcbn1cclxuXHJcbi5tYXQtdGFiLWdyb3VwIHtcclxud2lkdGg6IDEwMCU7XHJcbiAgbWFyZ2luLWxlZnQgOiA1MHB4IDtcclxuICBtYXJnaW4tcmlnaHQ6IDE1MHB4O1xyXG4gIG1hcmdpbi1ib3R0b206IDQwcHg7XHJcbn1cclxuXHJcbiJdfQ== */\";","export default \"<hr>\\r\\n<div [hidden]=\\\"submitted\\\" class=\\\"person-form\\\" style=\\\"width: 400px;\\\" [formGroup]=\\\"personForm\\\">\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"firstName\\\">Imię</label>\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"firstName\\\"  [(ngModel)]=\\\"person.firstName\\\" name=\\\"firstName\\\" formControlName=\\\"firstName\\\">\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"surname\\\">Nazwisko</label>\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"surname\\\"  [(ngModel)]=\\\"person.lastName\\\" name=\\\"surname\\\" formControlName=\\\"surname\\\">\\r\\n    </div>\\r\\n\\r\\n    <div *ngIf=\\\"!personForm.get('surname').valid && personForm.get('surname').touched\\\" style=\\\"color:red\\\">\\r\\n     Nazwisko jest wymagane\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"pesel\\\">PESEL</label>\\r\\n      <input type=\\\"number\\\" size=\\\"11\\\" class=\\\"form-control\\\" id=\\\"pesel\\\" [(ngModel)]=\\\"person.pesel\\\" name=\\\"pesel\\\" formControlName=\\\"pesel\\\">\\r\\n    </div>\\r\\n\\r\\n    <div *ngIf=\\\"!personForm.get('pesel').valid && personForm.get('pesel').touched\\\" style=\\\"color:red\\\">\\r\\n      PESEL się składać wyłącznie z 11 cyfr\\r\\n    </div>\\r\\n</div>\\r\\n\";","import {AfterViewInit, ChangeDetectorRef, Component, OnInit, ViewChild} from '@angular/core';\r\nimport {CompanyGeneralInformationComponent} from '../contact-parts/company-general-informations/company-general-information.component';\r\nimport {PersonGeneralInformationComponent} from '../contact-parts/person-general-informations/person-general-information.component';\r\n\r\nimport {AddressComponent} from '../contact-parts/address/address.component';\r\nimport {Contact, ContactService} from '../services/contact.service';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {FormControl, Validators} from '@angular/forms';\r\nimport {Way} from '../add-contact/add-contact.component';\r\nimport {WayOfObtainingComponent} from '../contact-parts/way-of-obtaining/way-of-obtaining.component';\r\nimport {BaseInformationComponent} from '../contact-parts/base-information/base-information.component';\r\n\r\n@Component({\r\n  selector: 'app-edit-person',\r\n  templateUrl: './edit-person.component.html',\r\n  styleUrls: ['./edit-person.component.css']\r\n})\r\nexport class EditPersonComponent implements OnInit, AfterViewInit {\r\n\r\n  // @ts-ignore\r\n  @ViewChild('person', { read: PersonGeneralInformationComponent })\r\n  person: PersonGeneralInformationComponent;\r\n  // @ts-ignore\r\n  @ViewChild('wayOfObtainingComponent', { read: WayOfObtainingComponent })\r\n  wayOfObtainingComponent: WayOfObtainingComponent;\r\n  // @ts-ignore\r\n  @ViewChild('address', { read: AddressComponent })\r\n  addressComponent: AddressComponent;\r\n  @ViewChild('baseInformation', { read: BaseInformationComponent })\r\n  baseComponent: BaseInformationComponent;\r\n\r\n  // tslint:disable-next-line:max-line-length\r\n  constructor(private contactService: ContactService, private router: Router, private route: ActivatedRoute, private ref: ChangeDetectorRef){\r\n\r\n  }\r\n\r\n  contact: Contact = new Contact();\r\n  submitted = false;\r\n  address: AddressComponent;\r\n  recomendate: WayOfObtainingComponent;\r\n  wayControl = new FormControl('', [Validators.required]);\r\n  email = new FormControl('', [Validators.required, Validators.email]);\r\n\r\n  ways: Way[] = [\r\n    {value: 'recommendation', viewValue: 'Rekomendacja'},\r\n    {value: 'conference', viewValue: 'konferencja i szkolenie'},\r\n    {value: 'social media', viewValue: 'media społęcznościowe'},\r\n    {value: 'web page', viewValue: 'strona www'},\r\n    {value: 'other', viewValue: 'inne'}\r\n  ];\r\n\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    let id = null;\r\n    this.route.queryParams.subscribe(params => id = params.id);\r\n    if (null != id) {\r\n      this.contactService.getContactId(id)\r\n        .subscribe(((res: any[]) => {\r\n          this.contact = res[0];\r\n          this.updateToOtherModule(this.contact);\r\n        }));\r\n    } else {\r\n      this.contact = new Contact();\r\n    }\r\n  }\r\n\r\n  updateToOtherModule(contact: Contact) {\r\n    this.baseComponent.contact = contact;\r\n    this.ref.detectChanges();\r\n    this.person.person = contact.person;\r\n    this.wayOfObtainingComponent.wayOfObtaining = contact.wayOfObtaining;\r\n    this.wayOfObtainingComponent.recommending = contact.recommending;\r\n    this.addressComponent.addresses = contact.addresses;\r\n  }\r\n\r\n  getErrorMessage() {\r\n    if (this.email.hasError('required')) {\r\n      return 'Podaj email';\r\n    }\r\n\r\n    return this.email.hasError('email') ? 'Niepoprawny adres email' : '';\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  newEmployee(): void {\r\n    this.submitted = false;\r\n    this.contact = new Contact();\r\n  }\r\n\r\n  save() {\r\n    this.contact = this.baseComponent.contact;\r\n    this.contact.person = this.person.person;\r\n\r\n    this.contact.wayOfObtaining = this.wayOfObtainingComponent.wayOfObtaining;\r\n    this.contact.recommending = this.wayOfObtainingComponent.recommending;\r\n    this.contact.addresses = this.addressComponent.addresses;\r\n    this.contactService.addContact(this.contact)\r\n      .subscribe(data => console.log(data), error => console.log(error));\r\n    this.contact = new Contact();\r\n    this.gotoList();\r\n\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n  }\r\n\r\n  gotoList() {\r\n    this.router.navigate(['/kontakty']);\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAuY29tcG9uZW50LmNzcyJ9 */\";","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","export default \"<h4>Podsumowanie</h4>\\r\\n\\r\\n<hr/>\\r\\n<div *ngIf=\\\"contact\\\">\\r\\n  <div>\\r\\n    <label><b>Imię: </b></label> {{contact.person.firstName}}\\r\\n  </div>\\r\\n  <div>\\r\\n    <label><b>Nazwisko: </b></label> {{contact.person.lastName}}\\r\\n  </div>\\r\\n  <div>\\r\\n    <label><b>PESEL: </b></label> {{contact.person.pesel}}\\r\\n  </div>\\r\\n  <div>\\r\\n    <label><b>Email: </b></label> {{contact.email}}\\r\\n  </div>\\r\\n  <div>\\r\\n    <label><b>Telefon: </b></label> {{contact.phoneNumber}}\\r\\n  </div>\\r\\n\\r\\n  <div>\\r\\n    <label><b>Informacje dodatkowe: </b></label> {{contact.wayOfObtaining}}\\r\\n  </div>\\r\\n  <div>\\r\\n    <label><b>Sposób pozyskania: </b></label> {{contact.phoneNumber}}\\r\\n  </div>\\r\\n  <div>\\r\\n    <label><b>Rekomendujący: </b></label> {{contact.wayOfObtaining}}\\r\\n  </div>\\r\\n\\r\\n  <hr>\\r\\n\\r\\n  <h4>Adresy</h4>\\r\\n  <div style=\\\"width: 400px;\\\">\\r\\n    <div *ngFor=\\\"let address of contact.addresses\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n       {{address.name}}\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        {{address.street}} {{address.houseNumber}}/{{address.flatNumber}}\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        {{address.zipCode}} {{address.city}}\\r\\n      </div>\\r\\n      </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<br>\\r\\n<br>\\r\\n<button [routerLink]=\\\"getRouteLink(contact)\\\" [queryParams]=\\\"{id: contact.id}\\\" class=\\\"btn btn-primary\\\">Edycja</button><br>\\r\\n\";","export default \"\\r\\n<div  [formGroup]=\\\"baseForm\\\">\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"phoneNumber\\\">Telefon</label>\\r\\n    <input type=\\\"tel\\\" class=\\\"form-control\\\" id=\\\"phoneNumber\\\" [(ngModel)]=\\\"contact.phoneNumber\\\" name=\\\"phoneNumber\\\" formControlName=\\\"phoneNumber\\\">\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"email\\\">Email</label>\\r\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"contact.email\\\" id=\\\"email\\\" name=\\\"email\\\" formControlName=\\\"email\\\">\\r\\n  </div>\\r\\n  <div *ngIf=\\\"!baseForm.get('email').valid && baseForm.get('email').touched\\\" style=\\\"color:red\\\">\\r\\n    Podaj poprawny email\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"additionalInformation\\\">Informacje dodatkowe</label>\\r\\n    <textarea type=\\\"text\\\" [(ngModel)]=\\\"contact.additionalInfo\\\" class=\\\"form-control\\\" id=\\\"additionalInformation\\\"\\r\\n              name=\\\"additionalInformation\\\" formControlName=\\\"additionalInformation\\\"></textarea>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJiYXNlLWluZm9ybWF0aW9uLmNvbXBvbmVudC5jc3MifQ== */\";","export default \"<hr>\\r\\n<br>\\r\\n<div [hidden]=\\\"submitted\\\" style=\\\"width: 400px;\\\">\\r\\n  <mat-form-field>\\r\\n    <mat-label>Sposób pozyskania</mat-label>\\r\\n    <mat-select [formControl]=\\\"wayControl\\\" [(ngModel)]=\\\"this.wayOfObtaining\\\"  required>\\r\\n      <mat-option>--</mat-option>\\r\\n      <mat-option *ngFor=\\\"let way of ways\\\" [value]=\\\"way.value\\\">\\r\\n        {{way.viewValue}}\\r\\n      </mat-option>\\r\\n    </mat-select>\\r\\n    <mat-error *ngIf=\\\"wayControl.hasError('required')\\\">wybierz</mat-error>\\r\\n    <mat-hint>{{wayControl.value?.viewValue}}</mat-hint>\\r\\n  </mat-form-field>\\r\\n  <div *ngIf=\\\"this.wayOfObtaining=='RECOMENDATION'\\\">\\r\\n    <label for=\\\"recommending\\\">Rekomendujący</label>\\r\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"legal-form\\\"  [(ngModel)]=\\\"this.recommending\\\" name=\\\"recommending\\\"  id=\\\"recommending\\\">\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\";","export default \"<h2>Dodaj kontakt</h2>\\r\\n<br>\\r\\n<h5>Rodzaj kontaktu</h5>\\r\\n<br>\\r\\n<form (ngSubmit)=\\\"onSubmit()\\\"  class=\\\"mat-form-field-appearance-legacy\\\" >\\r\\n<mat-radio-group aria-label=\\\"Select an option\\\" >\\r\\n\\r\\n  <mat-radio-button value=\\\"person\\\" checked (click)=\\\"isShow='PERSON'\\\">Osoba fizyczna</mat-radio-button>\\r\\n  <mat-radio-button value=\\\"company\\\" (click)=\\\"isShow='COMPANY'\\\">Firma</mat-radio-button>\\r\\n</mat-radio-group>\\r\\n\\r\\n<div class=\\\"example-container\\\">\\r\\n  <app-person-general-informations #person *ngIf=\\\"isShow == 'PERSON'\\\" ></app-person-general-informations>\\r\\n  <app-company-general-informations #company *ngIf=\\\"isShow == 'COMPANY'\\\"></app-company-general-informations>\\r\\n  <app-base-information #baseInformation></app-base-information>\\r\\n\\r\\n  <app-address #address></app-address>\\r\\n  <app-way-of-obtaining #wayOfObtainingComponent></app-way-of-obtaining>\\r\\n  <router-outlet></router-outlet>\\r\\n</div>\\r\\n  <div id=\\\"submit\\\">\\r\\n    <button type=\\\"submit\\\" class=\\\"btn btn-outline-success\\\" (click)=\\\"save()\\\">Zapisz</button>\\r\\n  </div>\\r\\n</form>\\r\\n\";","import { Injectable } from '@angular/core';\r\nimport {Company, Contact} from './contact.service';\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EmployeeService {\r\n  private api = 'http://localhost:8075';\r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      'Content-Type': 'application/json'\r\n    })\r\n  }\r\n  private employee: Employee;\r\n\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  addEmployee(employee: Employee): Observable<Employee> {\r\n    return this.httpClient.post<Employee>(this.api + '/employees', employee);\r\n  }\r\n\r\n  getEmployeesList(): Observable<any> {\r\n    return this.httpClient.get(this.api + '/employees');\r\n  }\r\n\r\n\r\n  getEmployeesByCompany(companyId: number): Observable<any> {\r\n    return this.httpClient.get(this.api + '/employeesList/' + companyId);\r\n  }\r\n\r\n  deleteEmployee(id: number): Observable<any> {\r\n    return this.httpClient.delete(this.api + '/employees/' + id);\r\n  }\r\n}\r\n\r\nexport class Employee {\r\n  id: number;\r\n  firstName: string;\r\n  lastName: string;\r\n  position: string;\r\n  phoneNumber: number;\r\n  active: boolean;\r\n  company: Company;\r\n}\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {Employee, EmployeeService} from '../../../../contacts/services/employee.service';\r\nimport {Observable} from 'rxjs';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {Contact, ContactService} from '../../../../contacts/services/contact.service';\r\nimport {MAT_DIALOG_DATA, MatDialog, MatDialogRef} from '@angular/material';\r\n\r\nimport {AddEmployeesComponent} from '../add-employees/add-employees.component';\r\nimport {EditEmployeeComponent} from '../edit-employee/edit-employee.component';\r\n\r\n@Component({\r\n  selector: 'app-employees-list',\r\n  templateUrl: './employees-list.component.html',\r\n  styleUrls: ['./employees-list.component.css']\r\n})\r\nexport class EmployeesListComponent implements OnInit {\r\n  employees: Observable<Employee[]>;\r\n  private contact: Contact;\r\n\r\n  constructor(private employeeService: EmployeeService, private contactService: ContactService, private router: Router, private route: ActivatedRoute, private dialog: MatDialog) { }\r\n\r\n  // () {\r\n  // }\r\n\r\n  // tslint:disable-next-line:use-lifecycle-interface\r\n\r\n\r\n\r\nngOnInit() {\r\n\r\n    let id = null;\r\n    this.route.queryParams.subscribe(params => id = params.id);\r\n\r\n    if (null != id) {\r\n      this.contactService.getContactId(id)\r\n        .subscribe(((res: any[]) => {\r\n          this.contact = res[0];\r\n        }));\r\n    }\r\n    this.reloadData();\r\n  }\r\n\r\n  reloadData() {\r\n    this.employees = this.employeeService.getEmployeesByCompany(this.contact.company.id);\r\n  }\r\n\r\n  deleteEmployee(id: number) {\r\n    this.employeeService.deleteEmployee(id)\r\n      .subscribe(\r\n        data => {\r\n          console.log(data);\r\n          this.reloadData();\r\n        },\r\n        error => console.log(error));\r\n  }\r\n\r\n\r\n  editEmployee(employee: Employee) {\r\n    const dialogRef = this.dialog.open(EditEmployeeComponent, {\r\n      width: '700px',\r\n      height: '600px',\r\n      data: {employee}\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The dialog was closed');\r\n      this.reloadData();\r\n    });\r\n  }\r\n\r\n\r\n  addEmployee() {\r\n    const dialogRef = this.dialog.open(AddEmployeesComponent, {\r\n      width: '700px',\r\n      height: '600px',\r\n      data: {company: this.contact.company }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The dialog was closed');\r\n      this.reloadData();\r\n    });\r\n\r\n  }\r\n\r\n   getStatus(employee: Employee): string {\r\n    if (employee.active) {\r\n      return 'Aktywny';\r\n    } else {\r\n      return 'Nieaktywny';\r\n    }\r\n  }\r\n\r\n\r\n  // setStatus(employee: Employee) {\r\n  //   const dialogRef = this.dialog.open(SetStatus, {\r\n  //     width: '100px',\r\n  //     height: '100px',\r\n  //     data: {employee}\r\n  //   });\r\n  // }\r\n}\r\n\r\n// export class SetStatus {\r\n//\r\n//   constructor(public dialogRef: MatDialogRef <EmployeesListComponent>) {\r\n//\r\n//   }\r\n//\r\n// }\r\n\r\n\r\n\r\n\r\n","export default \".mat-form-field{\\r\\n  width: 700px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFkZHJlc3MuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFlBQVk7QUFDZCIsImZpbGUiOiJhZGRyZXNzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWF0LWZvcm0tZmllbGR7XHJcbiAgd2lkdGg6IDcwMHB4O1xyXG59XHJcbiJdfQ== */\";","export default \"#left-position{\\r\\n  float: left;\\r\\n  width: 500px;\\r\\n}\\r\\n\\r\\n#right-position{\\r\\n  float: right;\\r\\n  width: 500px;\\r\\n  margin-right: 100px;\\r\\n}\\r\\n\\r\\n#bottom-position{\\r\\n  clear: both;\\r\\n}\\r\\n\\r\\nlabel{\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.label-div{\\r\\n  text-align: left;\\r\\n}\\r\\n\\r\\nbutton{\\r\\n  float: right;\\r\\n}\\r\\n\\r\\n.adress-style{\\r\\n  width: 800px;\\r\\n}\\r\\n\\r\\nhr{\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\nh4{\\r\\n  font-weight: bold;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN1bW1hcnkuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQVc7RUFDWCxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxZQUFZO0VBQ1osWUFBWTtFQUNaLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLFdBQVc7QUFDYjs7QUFDQTtFQUNFLGtCQUFrQjtBQUNwQjs7QUFDQTtFQUNFLGdCQUFnQjtBQUNsQjs7QUFDQTtFQUNFLFlBQVk7QUFDZDs7QUFFQTtFQUNFLFlBQVk7QUFDZDs7QUFDQTtFQUNFLFdBQVc7QUFDYjs7QUFFQTtFQUNFLGlCQUFpQjtBQUNuQiIsImZpbGUiOiJzdW1tYXJ5LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIjbGVmdC1wb3NpdGlvbntcclxuICBmbG9hdDogbGVmdDtcclxuICB3aWR0aDogNTAwcHg7XHJcbn1cclxuXHJcbiNyaWdodC1wb3NpdGlvbntcclxuICBmbG9hdDogcmlnaHQ7XHJcbiAgd2lkdGg6IDUwMHB4O1xyXG4gIG1hcmdpbi1yaWdodDogMTAwcHg7XHJcbn1cclxuXHJcbiNib3R0b20tcG9zaXRpb257XHJcbiAgY2xlYXI6IGJvdGg7XHJcbn1cclxubGFiZWx7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcbi5sYWJlbC1kaXZ7XHJcbiAgdGV4dC1hbGlnbjogbGVmdDtcclxufVxyXG5idXR0b257XHJcbiAgZmxvYXQ6IHJpZ2h0O1xyXG59XHJcblxyXG4uYWRyZXNzLXN0eWxle1xyXG4gIHdpZHRoOiA4MDBweDtcclxufVxyXG5ocntcclxuICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxuaDR7XHJcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbn1cclxuIl19 */\";","export default \"<div class=\\\"mat-tab-group\\\">\\r\\n  <mat-tab-group class=\\\"details-group\\\">\\r\\n    <mat-tab label=\\\"Podsumowanie\\\" class=\\\"tabs\\\"><br><app-summary></app-summary></mat-tab>\\r\\n    <mat-tab label=\\\"Pracownicy\\\" class=\\\"tabs\\\"><br><app-employees-list></app-employees-list></mat-tab>\\r\\n  </mat-tab-group>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ3YXktb2Ytb2J0YWluaW5nLmNvbXBvbmVudC5jc3MifQ== */\";","import {Component, Input, OnInit} from '@angular/core';\r\nimport {FormControl, Validators} from '@angular/forms';\r\nimport {Way} from '../../add-contact/add-contact.component';\r\n\r\n\r\n@Component({\r\n  selector: 'app-way-of-obtaining',\r\n  templateUrl: './way-of-obtaining.component.html',\r\n  styleUrls: ['./way-of-obtaining.component.css']\r\n})\r\nexport class WayOfObtainingComponent implements OnInit {\r\n\r\n  @Input()\r\n  public wayOfObtaining: string;\r\n\r\n  @Input()\r\n  public recommending: string;\r\n\r\n  submitted = false;\r\n  constructor() { }\r\n  wayControl = new FormControl('', [Validators.required]);\r\n  ways: Way[] = [\r\n    {value: 'RECOMENDATION', viewValue: 'Rekomendacja'},\r\n    {value: 'CONFERENCE_OR_TRAINING', viewValue: 'konferencja i szkolenie'},\r\n    {value: 'SOCIAL_MEDIA', viewValue: 'media społęcznościowe'},\r\n    {value: 'WWWW', viewValue: 'strona www'}\r\n  ];\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","export default \"<hr>\\r\\n<div [hidden]=\\\"submitted\\\" style=\\\"width: 400px;\\\" [formGroup]=\\\"companyForm\\\">\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"name\\\">Nazwa firmy</label>\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" [(ngModel)]=\\\"companyy.name\\\" name=\\\"name\\\" formControlName=\\\"name\\\">\\r\\n\\r\\n\\r\\n      <div *ngIf=\\\"!companyForm.get('name').valid && companyForm.get('name').touched\\\" style=\\\"color:red\\\">\\r\\n        Nazwa firmy jest wymagana!\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"nip\\\">NIP</label>\\r\\n      <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"nip\\\" [(ngModel)]=\\\"companyy.nip\\\" name=\\\"nip\\\" formControlName=\\\"nip\\\">\\r\\n    </div>\\r\\n\\r\\n  <div *ngIf=\\\"!companyForm.get('nip').valid && companyForm.get('nip').touched\\\" style=\\\"color:red\\\">\\r\\n     NIP jest wymagany, musi być w formie: XXXXXXXXXX\\r\\n  </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"regon\\\">Regon</label>\\r\\n      <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"regon\\\" [(ngModel)]=\\\"companyy.regon\\\" name=\\\"regon\\\" formControlName=\\\"regon\\\">\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"krs\\\">KRS</label>\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"krs\\\" [(ngModel)]=\\\"companyy.krs\\\" name=\\\"krs\\\" formControlName=\\\"krs\\\">\\r\\n    </div>\\r\\n\\r\\n  <div class=\\\"form-group\\\"  >\\r\\n  <mat-form-field>\\r\\n    <mat-label>Forma prawna</mat-label>\\r\\n    <mat-select  [(ngModel)]=\\\"companyy.legalForm\\\"  formControlName=\\\"legalForm\\\">\\r\\n      <mat-option>--</mat-option>\\r\\n      <mat-option *ngFor=\\\"let form of forms\\\" [value]=\\\"form.value\\\">\\r\\n        {{form.viewValue}}\\r\\n      </mat-option>\\r\\n    </mat-select>\\r\\n </mat-form-field>\\r\\n    <div *ngIf=\\\"companyy.legalForm=='OTHER'\\\">\\r\\n      <label for=\\\"legal-form-other\\\">Inna forma prawna</label>\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"companyy.legalFormOther\\\" name=\\\"legal-form-other\\\" id=\\\"legal-form-other\\\">\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'angular-app';\r\n}\r\n","export default \"<div class=\\\"container\\\">\\r\\n  <router-outlet></router-outlet>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\";","import {Component, OnInit} from '@angular/core';\r\nimport {Address, Contact, ContactService, Person} from '../../contacts/services/contact.service';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-details-person',\r\n  templateUrl: './details-person.component.html',\r\n  styleUrls: ['./details-person.component.css']\r\n})\r\nexport class DetailsPersonComponent implements OnInit {\r\n  id: number;\r\n  contact: Contact;\r\n  public addresses: Address[] = [];\r\n\r\n  constructor(private route: ActivatedRoute, private router: Router,\r\n              private contactService: ContactService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.contact = new Contact();\r\n\r\n    let id = null;\r\n    this.route.queryParams.subscribe(params => id = params.id);\r\n    if (null != id) {\r\n      this.contactService.getContactId(id)\r\n        .subscribe(((res: any[]) => {\r\n          this.contact = res[0];\r\n        }));\r\n    }\r\n  }\r\n\r\n  getRouteLink(contact: Contact) {\r\n    return  '/edycja_osoba_fizyczna';\r\n  }\r\n}\r\n","import {Component, Injectable, Input, OnInit, Output} from '@angular/core';\r\nimport {Company} from '../../services/contact.service';\r\nimport {CompanyService} from '../../services/company.service';\r\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {Router} from '@angular/router';\r\n@Component({\r\n  selector: 'app-company-general-informations',\r\n  templateUrl: './company-general-information.component.html',\r\n  styleUrls: ['./company-general-information.component.css']\r\n})\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class CompanyGeneralInformationComponent {\r\n  @Input()\r\n  public companyForm: FormGroup;\r\n\r\n  constructor(private companyService: CompanyService, private router: Router) { }\r\n  @Input()\r\n  public companyy: Company = new Company();\r\n  submitted = false;\r\n  forms: Form[] = [\r\n    {value: 'STOCK_COMPANY', viewValue: 'Spółka akcyja'},\r\n    {value: 'PARTNERSHIP_COMPANY', viewValue: 'Spółka cywilna'},\r\n    {value: 'SLAW_COMPANY', viewValue: 'Spółka prawna'},\r\n    {value: 'LIMITED_COMPANY', viewValue: 'Spółka zoo'},\r\n    {value: 'OTHER', viewValue: 'Inne'}\r\n  ];\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n  }\r\n\r\n  gotoList() {\r\n    this.router.navigate(['/kontakt']);\r\n  }\r\n\r\n\r\n\r\n  // tslint:disable-next-line:use-lifecycle-interface\r\n  ngOnInit(): void {\r\n    this.initializeForm();\r\n  }\r\n\r\n\r\n\r\n  private initializeForm() {\r\n\r\n    // @ts-ignore\r\n    this.companyForm = new FormGroup({\r\n      name : new FormControl(null, Validators.required),\r\n      nip :  new FormControl(null, [Validators.pattern('[0-9]{10}'), Validators.required]),\r\n      regon :  new FormControl(null),\r\n      krs :  new FormControl(null),\r\n      legalForm :  new FormControl(null)\r\n    });\r\n  }\r\n\r\n}\r\n\r\nexport interface Form {\r\n  value: string;\r\n  viewValue: string;\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { ContactsComponent } from './contacts/contacts.component';\r\n// import {AddContactComponent} from \"./add-contact/add-contact.component\";\r\n// import {Router, RouterModule, Routes} from \"@angular/FormsModule\r\n// @ts-ignore\r\nimport {MAT_RADIO_DEFAULT_OPTIONS, MatRadioModule} from '@angular/material/radio';\r\nimport {HttpClientModule} from '@angular/common/http';\r\n\r\n\r\n\r\nimport {\r\n  _MatMenuDirectivesModule,\r\n  MatButtonModule,\r\n  MatCommonModule, MatDialogModule,\r\n  MatFormFieldModule, MatIconModule, MatInputModule, MatMenuModule, MatPaginatorModule,\r\n  MatSelectModule,\r\n  MatTableModule, MatTabsModule\r\n} from '@angular/material';\r\n\r\n// @ts-ignore\r\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\r\nimport { AddressComponent } from './contacts/contact-parts/address/address.component';\r\nimport { CompanyGeneralInformationComponent } from './contacts/contact-parts/company-general-informations/company-general-information.component';\r\nimport { PersonGeneralInformationComponent } from './contacts/contact-parts/person-general-informations/person-general-information.component';\r\n\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {AddContactComponent} from './contacts/add-contact/add-contact.component';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport { EditCompanyComponent } from './contacts/edit-company/edit-company.component';\r\nimport { EditPersonComponent } from './contacts/edit-person/edit-person.component';\r\n\r\n// @ts-ignore\r\n\r\nimport { DetailsCompanyComponent } from './details/details-company/details-company.component';\r\nimport { DetailsPersonComponent } from './details/details-person/details-person.component';\r\nimport { AddEmployeesComponent } from './details/details-company/employees/add-employees/add-employees.component';\r\nimport { EmployeesListComponent } from './details/details-company/employees/employees-list/employees-list.component';\r\nimport { SummaryComponent } from './details/details-company/summary/summary.component';\r\nimport { EditEmployeeComponent } from './details/details-company/employees/edit-employee/edit-employee.component';\r\nimport {WayOfObtainingComponent} from './contacts/contact-parts/way-of-obtaining/way-of-obtaining.component';\r\nimport { BaseInformationComponent } from './contacts/contact-parts/base-information/base-information.component';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const appRoutes :Routes =[\r\n//   {\r\n//     path: 'kontakty',\r\n//     component:ContactsComponent\r\n//   },\r\n//   {\r\n//     path: 'dodaj_kontakt',\r\n//     component: AddContactComponent\r\n//   }\r\n// ];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ContactsComponent,\r\n    AddContactComponent,\r\n    AddressComponent,\r\n    CompanyGeneralInformationComponent,\r\n    PersonGeneralInformationComponent,\r\n    WayOfObtainingComponent,\r\n    EditCompanyComponent,\r\n    EditPersonComponent,\r\n    DetailsCompanyComponent,\r\n    DetailsPersonComponent,\r\n    AddEmployeesComponent,\r\n    EmployeesListComponent,\r\n    SummaryComponent,\r\n    EditEmployeeComponent,\r\n    BaseInformationComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    MatRadioModule,\r\n    HttpClientModule,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    BrowserAnimationsModule,\r\n    MatButtonModule,\r\n    HttpClientModule,\r\n    MatTableModule,\r\n    MatCommonModule,\r\n    _MatMenuDirectivesModule,\r\n    MatMenuModule,\r\n    MatIconModule,\r\n    MatTabsModule,\r\n    MatDialogModule,\r\n    MatPaginatorModule,\r\n    MatInputModule\r\n\r\n  ],\r\n  exports: [\r\n    MatRadioModule,\r\n    MatCommonModule,\r\n    MatNativeDateModule,\r\n    MatRippleModule,\r\n\r\n  ],\r\n  providers: [\r\n    // {\r\n    //   provide: MAT_RADIO_DEFAULT_OPTIONS,\r\n    //   useValue: { color: 'accent' },\r\n    // }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n\r\n\r\n}\r\n","export default \"<div class=\\\"panel-body\\\">\\r\\n  <h4>Lista pracowników</h4>\\r\\n  <br>\\r\\n  <table class=\\\"table table-striped\\\">\\r\\n    <thead>\\r\\n    <tr>\\r\\n      <th>Imię</th>\\r\\n      <th>Nazwisko</th>\\r\\n      <th>Stanowisko</th>\\r\\n      <th>Telefon</th>\\r\\n      <th>Status</th>\\r\\n      <th>Akcje</th>\\r\\n    </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n\\r\\n    <tr *ngFor=\\\"let employee of employees | async\\\">\\r\\n      <td>{{employee.firstName}}</td>\\r\\n      <td>{{employee.lastName}}</td>\\r\\n      <td>{{employee.position}}</td>\\r\\n      <td>{{employee.phoneNumber}}</td>\\r\\n      <td id=\\\"hover-contact\\\" >{{getStatus(employee)}}</td>\\r\\n      <td>\\r\\n        <mat-icon aria-hidden=\\\"false\\\" aria-label=\\\"Example create-black icon\\\" (click)=\\\"editEmployee(employee)\\\" class=\\\"hover-icons\\\">create</mat-icon>\\r\\n        <mat-icon aria-hidden=\\\"false\\\" aria-label=\\\"Example close-black icon\\\" (click)=\\\"deleteEmployee(employee.id)\\\" class=\\\"hover-icons\\\">close</mat-icon>\\r\\n      </td>\\r\\n    </tr>\\r\\n    </tbody>\\r\\n  </table>\\r\\n <button  mat-raised-button class=\\\"add new empoyee\\\" (click)=\\\"addEmployee()\\\">Dodaj</button>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\";","export default \"<mat-dialog-content>\\r\\n  <h3>Edytuj pracownika</h3>\\r\\n</mat-dialog-content>\\r\\n\\r\\n<mat-dialog-actions>\\r\\n    <div class=\\\"container\\\">\\r\\n      <!--Imię-->\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <mat-label for=\\\"firstName\\\">Imię</mat-label>\\r\\n        <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"firstName\\\" required [(ngModel)]=\\\"employee.firstName\\\" name=\\\"firstName\\\"  >\\r\\n      </div>\\r\\n      <!--Nazwisko-->\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <mat-label for=\\\"lastName\\\">Nazwisko</mat-label>\\r\\n        <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"lastName\\\" required [(ngModel)]=\\\"employee.lastName\\\" name=\\\"lastName\\\" >\\r\\n      </div>\\r\\n      <!--    Stanowisko-->\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <mat-label for=\\\"position\\\">Stanowisko</mat-label>\\r\\n        <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"position\\\" required [(ngModel)]=\\\"employee.position\\\" name=\\\"position\\\"/>\\r\\n      </div>\\r\\n      <!--Telefon-->\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <mat-label for=\\\"phoneNumber\\\">Telefon</mat-label>\\r\\n        <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"phoneNumber\\\" required [(ngModel)]=\\\"employee.phoneNumber\\\" name=\\\"phoneNumber\\\" >\\r\\n      </div>\\r\\n      <!--   Status-->\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <mat-label for=\\\"status\\\">Status</mat-label>\\r\\n        <input matInput type=\\\"checkbox\\\" class=\\\"form-control\\\" id=\\\"status\\\" required [(ngModel)]=\\\"employee.active\\\" name=\\\"status\\\"/>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n<div class=\\\"mat-button\\\">\\r\\n  <button type=\\\"button\\\" class=\\\"btn btn-outline-success\\\" (click)=\\\"save()\\\">Zapisz</button>\\r\\n</div>\\r\\n\\r\\n</mat-dialog-actions>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\";","export default \"\\r\\n<div class=\\\"person-form\\\" style=\\\"width: 400px;\\\" [formGroup]=\\\"addressForm\\\">\\r\\n  <hr>\\r\\n  <h4>Adres:</h4>\\r\\n  <br>\\r\\n  <div class=\\\"mat-form-field\\\">\\r\\n    <li *ngFor=\\\"let address of addresses\\\" style=\\\"list-style-type: none\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"name\\\">Nazwa typu adresu</label>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\"  [(ngModel)]=\\\"address.name\\\" name=\\\"name\\\" formControlName=\\\"nameAddress\\\">\\r\\n        </div>\\r\\n  <div >\\r\\n        <div class=\\\"form-group\\\" style=\\\"float: left; margin-right: 10px\\\">\\r\\n          <label for=\\\"street\\\" >Ulica</label>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"street\\\" [(ngModel)]=\\\"address.street\\\" name=\\\"street\\\" formControlName=\\\"street\\\">\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\" style=\\\"float: left; margin-right: 10px\\\">\\r\\n          <label for=\\\"houseNumber\\\">Nr domu</label>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"houseNumber\\\"  [(ngModel)]=\\\"address.houseNumber\\\" name=\\\"houseNumber\\\" formControlName=\\\"houseNumber\\\">\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\" style=\\\"float: right\\\">\\r\\n          <label for=\\\"flatNumber\\\">Nr mieszkania</label>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"flatNumber\\\" [(ngModel)]=\\\"address.flatNumber\\\" name=\\\"apartmentNumber\\\" formControlName=\\\"apartmentNumber\\\">\\r\\n\\r\\n        </div>\\r\\n  </div>\\r\\n     <div class=\\\"mat-form-field\\\">\\r\\n        <div id=\\\"address\\\">\\r\\n          <div class=\\\"form-group\\\" style=\\\"float: left; margin-right: 10px; width: 30%\\\">\\r\\n            <label for=\\\"zipCode\\\">Kod pocztowy</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"zipCode\\\" [(ngModel)]=\\\"address.zipCode\\\" name=\\\"zipCode\\\" formControlName=\\\"zipCode\\\">\\r\\n            <div *ngIf=\\\"!addressForm.get('zipCode').valid && addressForm.get('zipCode').touched\\\" style=\\\"color:red\\\">\\r\\n              Podaj poprawny kod pocztowy w formie XX-XXX\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n\\r\\n          <div class=\\\"form-group\\\" style=\\\"float: right; width: 50%\\\">\\r\\n            <label for=\\\"city\\\">Miasto</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"city\\\"  [(ngModel)]=\\\"address.city\\\" name=\\\"city\\\" formControlName=\\\"city\\\"/>\\r\\n          </div>\\r\\n        </div>\\r\\n  </div>\\r\\n\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-danger\\\" [disabled]=\\\"!canDeleteAddress()\\\" (click)=\\\"deleteAddress(address)\\\" style=\\\"float: right\\\">Usuń</button>\\r\\n    </li>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-info\\\" (click)=\\\"newAddress()\\\" style=\\\"float: right; margin-right: 10px\\\" >Dodaj kolejny adres</button>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJlZGl0LWVtcGxveWVlLmNvbXBvbmVudC5jc3MifQ== */\";","import {ChangeDetectorRef, Component, OnInit} from '@angular/core';\r\nimport {Address, Company, Contact, ContactService} from '../../../contacts/services/contact.service';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {AddressService} from '../../../contacts/services/address.service';\r\nimport {Way} from '../../../contacts/add-contact/add-contact.component';\r\nimport {Form} from '../../../contacts/contact-parts/company-general-informations/company-general-information.component';\r\n\r\n@Component({\r\n  selector: 'app-summary',\r\n  templateUrl: './summary.component.html',\r\n  styleUrls: ['./summary.component.css']\r\n})\r\nexport class SummaryComponent implements OnInit {\r\n\r\n  id: number;\r\n  contact: Contact;\r\n  ways: Way[] = [\r\n    {value: 'RECOMENDATION', viewValue: 'Rekomendacja'},\r\n    {value: 'CONFERENCE_OR_TRAINING', viewValue: 'konferencja i szkolenie'},\r\n    {value: 'SOCIAL_MEDIA', viewValue: 'media społęcznościowe'},\r\n    {value: 'WWWW', viewValue: 'strona www'}\r\n  ];\r\n\r\n  forms: Form[] = [\r\n    {value: 'STOCK_COMPANY', viewValue: 'Spółka akcyja'},\r\n    {value: 'PARTNERSHIP_COMPANY', viewValue: 'Spółka cywilna'},\r\n    {value: 'SLAW_COMPANY', viewValue: 'Spółka prawna'},\r\n    {value: 'LIMITED_COMPANY', viewValue: 'Spółka zoo'},\r\n    {value: 'OTHER', viewValue: 'Inne'}\r\n  ];\r\n\r\n  constructor(private route: ActivatedRoute, private router: Router,\r\n              private contactService: ContactService) {\r\n  }\r\n\r\n  showAll() {\r\n    this.router.navigate(['/edycja_firma']);\r\n  }\r\nngOnInit(): void {\r\n\r\n  this.contact = new Contact();\r\n  this.contact.company = new Company();\r\n}\r\n\r\n  // tslint:disable-next-line:use-lifecycle-interface\r\n  ngAfterViewInit() {\r\n\r\n    let id = null;\r\n    this.route.queryParams.subscribe(params => id = params.id);\r\n    if (null != id) {\r\n      this.contactService.getContactId(id)\r\n        .subscribe(((res: any[]) => {\r\n          this.contact = res[0];\r\n        }));\r\n    }\r\n  }\r\n\r\n  getRouteLink(contact: Contact) {\r\n      return '/edycja_firma';\r\n  }\r\n\r\n  getWay(): string {\r\n    const result = this.ways.filter(s => s.value === this.contact.wayOfObtaining).pop();\r\n    // tslint:disable-next-line:triple-equals\r\n    return result != undefined ? result.viewValue : '';\r\n  }\r\n\r\n  getForms(): string {\r\n    const result = this.forms.filter(s => s.value === this.contact.company.legalForm).pop();\r\n    // tslint:disable-next-line:triple-equals\r\n    return result != undefined ? result.viewValue : '';\r\n  }\r\n}\r\n","import {Component, Injectable, Input, Output} from '@angular/core';\r\nimport {Contact, Person} from '../../services/contact.service';\r\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\r\n\r\n\r\n@Component({\r\n  selector: 'app-person-general-informations',\r\n  templateUrl: './person-general-information.component.html',\r\n  styleUrls: ['./person-general-information.component.css']\r\n})\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PersonGeneralInformationComponent {\r\n  @Input()\r\n  public personForm: FormGroup;\r\n  @Input()\r\n  public person: Person = new Person();\r\n  contact: Contact = new Contact();\r\n  submitted = false;\r\n  constructor() { }\r\n\r\n  // tslint:disable-next-line:use-lifecycle-interface\r\n  ngOnInit() {\r\n    this.initializeForm();\r\n  }\r\n\r\n  private initializeForm() {\r\n    // @ts-ignore\r\n    this.personForm = new FormGroup({\r\n      firstName : new FormControl(null),\r\n      surname :  new FormControl(null, Validators.required),\r\n      pesel :  new FormControl(null, [Validators.pattern('[0-9]{11}'), Validators.required])\r\n    });\r\n  }\r\n\r\n\r\n}\r\n","export default \"<h3 style=\\\"text-align: center\\\">Edycja</h3>\\r\\n<form (ngSubmit)=\\\"onSubmit()\\\">\\r\\n\\r\\n  <div class=\\\"container\\\">\\r\\n    <app-company-general-informations #companya></app-company-general-informations>\\r\\n    <app-base-information #baseInformation></app-base-information>\\r\\n\\r\\n    <app-address #address></app-address>\\r\\n    <app-way-of-obtaining #wayOfObtaining></app-way-of-obtaining>\\r\\n    <router-outlet></router-outlet>\\r\\n  </div>\\r\\n  <div id=\\\"submit\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-success\\\" (click)=\\\"save()\\\" >Zapisz</button>\\r\\n  </div>\\r\\n</form>\\r\\n\";","import {Component, Input, OnInit} from '@angular/core';\r\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {Contact} from '../../services/contact.service';\r\n\r\n@Component({\r\n  selector: 'app-base-information',\r\n  templateUrl: './base-information.component.html',\r\n  styleUrls: ['./base-information.component.css']\r\n})\r\nexport class BaseInformationComponent implements OnInit {\r\n  @Input()\r\n  public baseForm: FormGroup;\r\n  @Input()\r\n  contact: Contact = new Contact();\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    this.contact = new Contact();\r\n    this.initializeForm();\r\n  }\r\n\r\n\r\n  private initializeForm() {\r\n    this.baseForm = new FormGroup({\r\n      phoneNumber : new FormControl(null),\r\n      email :  new FormControl(null, [Validators.email, Validators.required]),\r\n      additionalInformation :  new FormControl(null)\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {Observable} from \"rxjs\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CompanyService {\r\n\r\n  private baseUrl = 'http://localhost:8075/kontakty';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  addCompany(company: Object): Observable<Object> {\r\n    return this.http.post(`${this.baseUrl}`, company);\r\n  }\r\n}\r\n","import {Component, Injectable, Input, OnDestroy, OnInit, Output} from '@angular/core';\r\n\r\nimport {Router} from '@angular/router';\r\nimport {AddressService} from '../../services/address.service';\r\nimport {Address} from '../../services/contact.service';\r\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\r\n\r\n\r\n@Component({\r\n  selector: 'app-address',\r\n  templateUrl: './address.component.html',\r\n  styleUrls: ['./address.component.css']\r\n})\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AddressComponent implements OnInit, OnDestroy  {\r\n  @Input()\r\n  public addressForm: FormGroup;\r\n\r\n  @Input()\r\n  public addresses: Address[] = [];\r\n  constructor(private addressService: AddressService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.addresses.push(new Address());\r\n    this.initializeForm();\r\n  }\r\n\r\n  newAddress(): void {\r\n    this.addresses.push(new Address());\r\n  }\r\n\r\n  canDeleteAddress(): boolean {\r\n    return this.addresses.length > 1;\r\n  }\r\n\r\n  deleteAddress(address: Address): void {\r\n    const idx = this.addresses.indexOf(address);\r\n    this.addresses.splice(idx, 1);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n  }\r\n\r\n  private initializeForm() {\r\n\r\n    // @ts-ignore\r\n    this.addressForm = new FormGroup({\r\n      nameAddress : new FormControl(null),\r\n      street :  new FormControl(null),\r\n      houseNumber :  new FormControl(null),\r\n      apartmentNumber :  new FormControl(null),\r\n      zipCode :  new FormControl(null, Validators.pattern('[0-9]{2}\\-[0-9]{3}')),\r\n      city :  new FormControl(null),\r\n    });\r\n  }\r\n\r\n}\r\n","import {Component, Input, OnInit, ViewChild} from '@angular/core';\r\nimport {Address, Contact, ContactService} from './services/contact.service';\r\nimport {Observable} from 'rxjs';\r\nimport {Employee} from './services/employee.service';\r\nimport {Router} from '@angular/router';\r\nimport {MatTableDataSource} from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-contacts',\r\n  templateUrl: './contacts.component.html',\r\n  styleUrls: ['./contacts.component.css']\r\n})\r\nexport class ContactsComponent implements OnInit {\r\n\r\n  constructor(private contactRestApi: ContactService, private router: Router) {}\r\n  contacts: Observable<Contact[]>;\r\n\r\n  items = [];\r\n  filteredItems = [];\r\n  pageOfItems: Array<Contact>;\r\n  filterValue: string;\r\n\r\nonChangePage(pageOfItems: Array<Contact>) {\r\n    this.pageOfItems = pageOfItems;\r\n  }\r\n  ngOnInit() {\r\n    this.reloadData();\r\n  }\r\n  getContactName(contact) {\r\n    if (null != contact.company) {\r\n      return contact.company.name;\r\n    } else if (null != contact.person) {\r\n      return  contact.person.firstName + ' ' + contact.person.lastName;\r\n    }\r\n  }\r\n\r\ngetContactType(contact) {\r\n    if (null != contact.company) {\r\n      return 'Firma';\r\n    } else if (null != contact.person) {\r\n      return  'Osoba fizyczna';\r\n    }\r\n  }\r\n\r\ngetEmail(contact: Contact) {\r\n    return contact.email;\r\n  }\r\n\r\ngetPhoneNumber(contact: Contact) {\r\n    return contact.phoneNumber;\r\n  }\r\n\r\ngetRouteLink(contact: Contact) {\r\n    if (null != contact.company) {\r\n      return '/edycja_firma';\r\n    } else if (null != contact.person) {\r\n      return  '/edycja_osoba_fizyczna';\r\n    }\r\n  }\r\nshowDetails(contact: Contact) {\r\n    if (null != contact.company) {\r\n      return '/szczegoly_kontaktu_firma';\r\n    } else if (null != contact.person) {\r\n      return  '/szczegoly_kontaktu';\r\n    }\r\n  }\r\n\r\ndeleteContact(id: number) {\r\n    this.contactRestApi.deleteContact(id)\r\n      .subscribe(\r\n        data => {\r\n          console.log(data);\r\n          this.reloadData();\r\n        },\r\n        error => console.log(error));\r\n  }\r\nreloadData() {\r\n    this.contactRestApi.getContactsList().subscribe(con => {this.items = con;\r\n    this.filteredItems = con; });\r\n  }\r\n\r\n  filter() {\r\n    this.filteredItems = (this.filterValue !== undefined || this.filterValue !== '') ? this.doFilter(this.filterValue) : this.filteredItems;\r\n  }\r\n\r\n  doFilter(filterBy: string): Contact[] {\r\n    filterBy = filterBy.toLowerCase();\r\n    return this.items.filter((contact: Contact) =>\r\n      contact.email.toLowerCase().indexOf(filterBy) > -1);\r\n  }\r\n}\r\n","export default \".mat-radio-button ~ .mat-radio-button {\\r\\n  margin-left: 16px;\\r\\n}\\r\\n\\r\\n.example-container {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n}\\r\\n\\r\\n.example-container > * {\\r\\n  width: 400px;\\r\\n}\\r\\n\\r\\nh2{\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFkZC1jb250YWN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxpQkFBaUI7QUFDbkI7O0FBRUE7RUFDRSxhQUFhO0VBQ2Isc0JBQXNCO0FBQ3hCOztBQUVBO0VBQ0UsWUFBWTtBQUNkOztBQUVBO0VBQ0Usa0JBQWtCO0FBQ3BCIiwiZmlsZSI6ImFkZC1jb250YWN0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWF0LXJhZGlvLWJ1dHRvbiB+IC5tYXQtcmFkaW8tYnV0dG9uIHtcclxuICBtYXJnaW4tbGVmdDogMTZweDtcclxufVxyXG5cclxuLmV4YW1wbGUtY29udGFpbmVyIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbn1cclxuXHJcbi5leGFtcGxlLWNvbnRhaW5lciA+ICoge1xyXG4gIHdpZHRoOiA0MDBweDtcclxufVxyXG5cclxuaDJ7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcbiJdfQ== */\";","import { Injectable } from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\r\nimport {Observable, of, pipe} from 'rxjs';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\nimport { MessageService } from './message.service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ContactService {\r\n\r\n  private api = 'http://localhost:8075';\r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      'Content-Type': 'application/json'\r\n    })\r\n  }\r\n  private contact: Contact;\r\n\r\n  constructor(private httpClient: HttpClient, private messageService: MessageService) {\r\n  }\r\n\r\n  getData(): Observable<any[]> {\r\n    return this.httpClient.get<any[]>(this.api + '/contacts/');\r\n  }\r\n\r\n\r\n//\r\n  getContactId(id: string): Observable<Contact[]> {\r\n    const url = this.api + '/contact/' + id;\r\n    return this.httpClient.get<Contact[]>(url);\r\n  }\r\n\r\n  addContact(contact: Contact): Observable<Contact> {\r\n    return this.httpClient.post<Contact>(this.api + '/contacts/', contact);\r\n  }\r\n\r\n\r\n\r\n  // deleteContact(id: number): Observable<Contact> {\r\n  //   return this.httpClient.delete<Contact>(this.api + '/contacts/');\r\n  // }\r\n\r\n  // @ts-ignore\r\n  updateCompany(id: number, value: any): Observable<RootObject> {\r\n    // return this.httpClient.put(`${this.baseUrl}/${id}`, value);\r\n  }\r\n\r\n  // @ts-ignore\r\n  deleteCompany(id: number): Observable<any> {\r\n    // return this.http.delete(`${this.baseUrl}/${id}`, { responseType: 'text' });\r\n  }\r\n\r\n  // @ts-ignore\r\n  showCompanies(): Observable<any> {\r\n    // return this.http.get(`${this.baseUrl}`);\r\n  }\r\n\r\n\r\n  private log(message: string) {\r\n    this.messageService.add(`HeroService: ${message}`);\r\n  }\r\n\r\n  /**\r\n   * Handle Http operation that failed.\r\n   * Let the app continue.\r\n   * @param operation - name of the operation that failed\r\n   * @param result - optional value to return as the observable result\r\n   */\r\n  private handleError<T>(operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n\r\n      // TODO: send the error to remote logging infrastructure\r\n      console.error(error); // log to console instead\r\n\r\n      // TODO: better job of transforming error for user consumption\r\n      this.log(`${operation} failed: ${error.message}`);\r\n\r\n      // Let the app keep running by returning an empty result.\r\n      return of(result as T);\r\n    };\r\n\r\n  }\r\n\r\n  getContactsList(): Observable<any> {\r\n    return this.httpClient.get(this.api + '/contacts');\r\n  }\r\n\r\n  deleteContact(id: number): Observable<any> {\r\n    return this.httpClient.delete(this.api + '/contacts/' + id);\r\n  }\r\n\r\n  deleteEmployee(id: number): Observable<any> {\r\n    return this.httpClient.delete(this.api + '/employees/' + id);\r\n  }\r\n}\r\n\r\nexport class Company {\r\n  id: number;\r\n  name: string;\r\n  nip: number;\r\n  regon: number;\r\n  krs: string;\r\n  legalForm: string;\r\n  legalFormOther: string;\r\n}\r\n\r\nexport class Person {\r\n  id: number;\r\n  firstName: string;\r\n  lastName: string;\r\n  pesel: number;\r\n}\r\n\r\nexport class Address {\r\n  id: number;\r\n  street: string;\r\n  houseNumber: string;\r\n  flatNumber: string;\r\n  zipCode: string;\r\n  city: string;\r\n  name: string;\r\n}\r\n\r\nexport  class Contact {\r\n  id: number;\r\n  phoneNumber: string;\r\n  email: string;\r\n  additionalInfo: string;\r\n  company: Company;\r\n  person: Person;\r\n  wayOfObtaining: string;\r\n  legalForm: string;\r\n  recommending: string;\r\n  addresses: Address[];\r\n}\r\n\r\n// export class Employee {\r\n//   id: number;\r\n//   firstName: string;\r\n//   lastName: string;\r\n//   position: string;\r\n//   phoneNumber: number;\r\n//   isActive: string;\r\n//   company: Company;\r\n// }\r\n","export default \".hover-icons{\\r\\n  cursor: pointer;\\r\\n  margin-right: 20%;\\r\\n}\\r\\n\\r\\nbutton{\\r\\n  float: right;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVtcGxveWVlcy1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxlQUFlO0VBQ2YsaUJBQWlCO0FBQ25COztBQUVBO0VBQ0UsWUFBWTtBQUNkIiwiZmlsZSI6ImVtcGxveWVlcy1saXN0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuaG92ZXItaWNvbnN7XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG4gIG1hcmdpbi1yaWdodDogMjAlO1xyXG59XHJcblxyXG5idXR0b257XHJcbiAgZmxvYXQ6IHJpZ2h0O1xyXG59XHJcbiJdfQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhZGQtZW1wbG95ZWVzLmNvbXBvbmVudC5jc3MifQ== */\";","export default \"<mat-dialog-content>\\r\\n  <h3>Dodaj pracownika</h3>\\r\\n</mat-dialog-content>\\r\\n\\r\\n<mat-dialog-actions>\\r\\n<div class=\\\"container\\\">\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <mat-label for=\\\"firstName\\\">Imię</mat-label>\\r\\n    <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"firstName\\\" required [(ngModel)]=\\\"employee.firstName\\\" name=\\\"firstName\\\" >\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <mat-label for=\\\"lastName\\\">Nazwisko</mat-label>\\r\\n    <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"lastName\\\" required [(ngModel)]=\\\"employee.lastName\\\" name=\\\"lastName\\\" >\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <mat-label for=\\\"position\\\">Stanowisko</mat-label>\\r\\n    <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"position\\\" required [(ngModel)]=\\\"employee.position\\\" name=\\\"position\\\"/>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <mat-label for=\\\"phoneNumber\\\">Telefon</mat-label>\\r\\n    <input matInput type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"phoneNumber\\\" required [(ngModel)]=\\\"employee.phoneNumber\\\" name=\\\"phoneNumber\\\" >\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n<div mat-dialog-actions>\\r\\n  <button type=\\\"button\\\" class=\\\"btn btn-outline-success\\\" (click)=\\\"save()\\\">Zapisz</button>\\r\\n</div>\\r\\n</mat-dialog-actions>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\";","import {AfterViewInit, Component, OnInit, ViewChild} from '@angular/core';\r\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {Router} from '@angular/router';\r\nimport {Contact, ContactService} from '../services/contact.service';\r\nimport {PersonGeneralInformationComponent} from '../contact-parts/person-general-informations/person-general-information.component';\r\nimport {AddressComponent} from '../contact-parts/address/address.component';\r\nimport {WayOfObtainingComponent} from '../contact-parts/way-of-obtaining/way-of-obtaining.component';\r\nimport {CompanyGeneralInformationComponent} from '../contact-parts/company-general-informations/company-general-information.component';\r\nimport {BaseInformationComponent} from '../contact-parts/base-information/base-information.component';\r\n\r\n\r\nexport interface Way {\r\n  value: string;\r\n  viewValue: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-add-contact',\r\n  templateUrl: './add-contact.component.html',\r\n  styleUrls: ['./add-contact.component.css']\r\n})\r\nexport class AddContactComponent implements OnInit, AfterViewInit {\r\n\r\n  // @ts-ignore\r\n  @ViewChild('company', { read: CompanyGeneralInformationComponent })\r\n  companyComponent: CompanyGeneralInformationComponent;\r\n  // @ts-ignore\r\n  @ViewChild('person', { read: PersonGeneralInformationComponent })\r\n  personComponent: PersonGeneralInformationComponent;\r\n  // @ts-ignore\r\n  @ViewChild('wayOfObtainingComponent', { read: WayOfObtainingComponent })\r\n  wayOfObtainingComponent: WayOfObtainingComponent;\r\n  // @ts-ignore\r\n  @ViewChild('address', { read: AddressComponent })\r\n  addressComponent: AddressComponent;\r\n  @ViewChild('baseInformation', { read: BaseInformationComponent })\r\n  baseComponent: BaseInformationComponent;\r\n\r\n\r\n  constructor(private contactService: ContactService, private router: Router) {\r\n\r\n  }\r\n  contact: Contact;\r\n  submitted = false;\r\n  isShow = 'PERSON';\r\n  address: AddressComponent;\r\n  contactForm: FormGroup;\r\n\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  save() {\r\n    if (!this.isValid()) {\r\n      this.markAsTouched();\r\n      return;\r\n    }\r\n    this.contact = this.baseComponent.contact;\r\n    if (this.isShow === 'PERSON') {\r\n      this.contact.person = this.personComponent.person;\r\n    } else if (this.isShow === 'COMPANY') {\r\n      this.contact.company = this.companyComponent.companyy;\r\n    }\r\n    this.contact.wayOfObtaining = this.wayOfObtainingComponent.wayOfObtaining;\r\n    this.contact.recommending = this.wayOfObtainingComponent.recommending;\r\n    this.contact.addresses = this.addressComponent.addresses;\r\n    this.contactService.addContact(this.contact)\r\n      .subscribe(data => console.log(data), error => console.log(error));\r\n    this.contact = new Contact();\r\n    this.gotoList();\r\n\r\n  }\r\n\r\n  private markAsTouched() {\r\n// tslint:disable-next-line:triple-equals\r\n    if (this.companyComponent != undefined) {\r\n      this.companyComponent.companyForm.markAllAsTouched();\r\n    }\r\n    // tslint:disable-next-line:triple-equals\r\n    if (this.personComponent != undefined) {\r\n      this.personComponent.personForm.markAllAsTouched();\r\n    }\r\n    this.addressComponent.addressForm.markAllAsTouched();\r\n    this.baseComponent.baseForm.markAllAsTouched();\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n  }\r\n\r\n  gotoList() {\r\n    this.router.navigate(['/kontakty']);\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n  }\r\n\r\n\r\n\r\n  isValid() {\r\n    let isValidCompanyOrPerson;\r\n    if (this.isShow === 'PERSON') {\r\n      isValidCompanyOrPerson = this.personComponent.personForm.valid;\r\n    } else {\r\n      isValidCompanyOrPerson = this.companyComponent.companyForm.valid;\r\n    }\r\n    return this.baseComponent.baseForm.valid && isValidCompanyOrPerson && this.addressComponent.addressForm.valid;\r\n  }\r\n}\r\n","export default \"button{\\r\\n  float: right;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRldGFpbHMtcGVyc29uLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxZQUFZO0FBQ2QiLCJmaWxlIjoiZGV0YWlscy1wZXJzb24uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImJ1dHRvbntcclxuICBmbG9hdDogcmlnaHQ7XHJcbn1cclxuIl19 */\";","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class MessageService {\r\n  messages: string[] = [];\r\n\r\n  add(message: string) {\r\n    this.messages.push(message);\r\n  }\r\n\r\n  clear() {\r\n    this.messages = [];\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n\r\nimport {ContactsComponent} from './contacts/contacts.component';\r\nimport {AddContactComponent} from './contacts/add-contact/add-contact.component';\r\nimport {EditCompanyComponent} from './contacts/edit-company/edit-company.component';\r\nimport {EditPersonComponent} from './contacts/edit-person/edit-person.component';\r\nimport {DetailsPersonComponent} from './details/details-person/details-person.component';\r\nimport {DetailsCompanyComponent} from './details/details-company/details-company.component';\r\nimport {AddEmployeesComponent} from './details/details-company/employees/add-employees/add-employees.component';\r\nimport {EmployeesListComponent} from './details/details-company/employees/employees-list/employees-list.component';\r\nimport {EditEmployeeComponent} from './details/details-company/employees/edit-employee/edit-employee.component';\r\nimport {AppComponent} from './app.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ContactsComponent\r\n  },\r\n  {\r\n    path: 'kontakty',\r\n    component: ContactsComponent\r\n  },\r\n  {\r\n    path: 'dodaj_kontakt',\r\n    component: AddContactComponent\r\n  },\r\n  {\r\n    path: 'edycja_firma',\r\n    component: EditCompanyComponent\r\n  },\r\n  {\r\n    path: 'edycja_osoba_fizyczna',\r\n    component: EditPersonComponent\r\n  },\r\n  {\r\n    path: 'szczegoly_kontaktu',\r\n    component: DetailsPersonComponent\r\n  },\r\n  {\r\n    path: 'szczegoly_kontaktu_firma',\r\n    component: DetailsCompanyComponent\r\n  },\r\n  {\r\n    path: 'szczegoly_kontaktu_pracownicy',\r\n    component: EmployeesListComponent\r\n  },\r\n  {\r\n    path: 'dodaj_pracownika',\r\n    component: AddEmployeesComponent\r\n  },\r\n  {\r\n    path: 'edycja_pracownik',\r\n    component: EditEmployeeComponent\r\n  }\r\n\r\n\r\n  ];\r\n\r\n\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","export default \"<h2>Lista kontaktów</h2>\\r\\n\\r\\n<div><button mat-button-toggle-group class=\\\"add-contact-button\\\" routerLink=\\\"/dodaj_kontakt\\\">Dodaj</button></div>\\r\\n<br>\\r\\n<input type=\\\"text\\\" [(ngModel)]=\\\"filterValue\\\"/>\\r\\n<button type=\\\"button\\\" name=\\\"Filter\\\" (click)=\\\"filter()\\\">Filtruj</button>\\r\\n<div class=\\\"panel-body\\\">\\r\\n  <table class=\\\"table table-striped\\\" >\\r\\n    <thead>\\r\\n    <tr class=\\\"border-element\\\">\\r\\n      <th class=\\\"border-element\\\">Nazwa kontaktu</th>\\r\\n      <th class=\\\"border-element\\\">Rodzaj kontaktu</th>\\r\\n      <th class=\\\"border-element\\\">Email</th>\\r\\n      <th class=\\\"border-element\\\">Telefon</th>\\r\\n      <th class=\\\"border-element\\\">Akcje</th>\\r\\n    </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n\\r\\n    <tr *ngFor=\\\"let contact of pageOfItems\\\">\\r\\n      <td id=\\\"hover-contact\\\" [routerLink]=\\\"showDetails(contact)\\\"\\r\\n          [queryParams]=\\\"{id: contact.id}\\\">{{getContactName(contact)}}</td>\\r\\n      <td>{{getContactType(contact)}}</td>\\r\\n      <td>{{getEmail(contact)}}</td>\\r\\n      <td>{{getPhoneNumber(contact)}}</td>\\r\\n      <td>\\r\\n        <mat-icon aria-hidden=\\\"false\\\" aria-label=\\\"Example create-black icon\\\" [routerLink]=\\\"getRouteLink(contact)\\\"\\r\\n                  [queryParams]=\\\"{id: contact.id}\\\" class=\\\"hover-icons\\\">create\\r\\n        </mat-icon>\\r\\n        <mat-icon aria-hidden=\\\"false\\\" aria-label=\\\"Example close-black icon\\\" (click)=\\\"deleteContact(contact.id)\\\"\\r\\n                  class=\\\"hover-icons\\\">close\\r\\n        </mat-icon>\\r\\n      </td>\\r\\n    </tr>\\r\\n    </tbody>\\r\\n  </table>\\r\\n  <!-- <div class=\\\"pagination\\\">\\r\\n    <!-- <jw-pagination [items]=\\\"filteredItems\\\" (changePage)=\\\"onChangePage($event)\\\" [pageSize]=\\\"3\\\"></jw-pagination> -->\\r\\n  </div> -->\\r\\n</div>\\r\\n\";","export default \"<h2 style=\\\"text-align: center\\\">Edycja</h2>\\r\\n\\r\\n<br>\\r\\n<form (ngSubmit)=\\\"onSubmit()\\\">\\r\\n\\r\\n  <div class=\\\"container\\\">\\r\\n    <app-person-general-informations #person ></app-person-general-informations>\\r\\n    <app-base-information #baseInformation></app-base-information>\\r\\n\\r\\n    <app-address #address></app-address>\\r\\n    <app-way-of-obtaining #wayOfObtainingComponent></app-way-of-obtaining>\\r\\n    <router-outlet></router-outlet>\\r\\n  </div>\\r\\n  <div id=\\\"submit\\\">\\r\\n    <button mat-button type=\\\"submit\\\" class=\\\"btn btn-success\\\" (click)=\\\"save()\\\">Zapisz</button>\\r\\n  </div>\\r\\n</form>\\r\\n\\r\\n\";","import {Component, OnInit} from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'app-details-company',\r\n  templateUrl: './details-company.component.html',\r\n  styleUrls: ['./details-company.component.css']\r\n})\r\nexport class DetailsCompanyComponent implements OnInit {\r\n\r\n  constructor() {\r\n  }\r\n  ngOnInit() {\r\n\r\n  }\r\n}\r\n","export default \"hr{\\r\\n  width: 100%;\\r\\n}\\r\\n.container{\\r\\n  width: 1000px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVkaXQtcGVyc29uLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXO0FBQ2I7QUFDQTtFQUNFLGFBQWE7QUFDZiIsImZpbGUiOiJlZGl0LXBlcnNvbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaHJ7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuLmNvbnRhaW5lcntcclxuICB3aWR0aDogMTAwMHB4O1xyXG59XHJcbiJdfQ== */\";","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {Observable} from \"rxjs\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AddressService {\r\n\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  private baseUrl = 'http://localhost:8075/kontakty/employees';\r\n\r\n\r\n\r\n  getAddressById(id: number): Observable<any> {\r\n    return this.http.get(`${this.baseUrl}/${id}`);\r\n  }\r\n\r\n  addAddress(address: Object): Observable<Object> {\r\n    return this.http.post(`${this.baseUrl}`, address);\r\n  }\r\n\r\n  updateAddress(id: number, value: any): Observable<Object> {\r\n    return this.http.put(`${this.baseUrl}/${id}`, value);\r\n  }\r\n\r\n  deleteAddress(id: number): Observable<any> {\r\n    return this.http.delete(`${this.baseUrl}/${id}`, { responseType: 'text' });\r\n  }\r\n\r\n  showAddresses(): Observable<any> {\r\n    return this.http.get(`${this.baseUrl}`);\r\n  }\r\n}\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}