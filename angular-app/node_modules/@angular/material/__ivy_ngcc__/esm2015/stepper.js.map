{"version":3,"file":"stepper.js","sources":["../../../src/material/stepper/step-label.ts","../../../src/material/stepper/stepper-intl.ts","../../../src/material/stepper/step-header.ts","../../../src/material/stepper/stepper-animations.ts","../../../src/material/stepper/stepper-icon.ts","../../../src/material/stepper/stepper.ts","../../../src/material/stepper/stepper-button.ts","../../../src/material/stepper/stepper-module.ts"],"names":["state"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive} from '@angular/core';\nimport {CdkStepLabel} from '@angular/cdk/stepper';\n\n@Directive({\n  selector: '[matStepLabel]',\n})\nexport class MatStepLabel extends CdkStepLabel {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable, Optional, SkipSelf} from '@angular/core';\nimport {Subject} from 'rxjs';\n\n\n/** Stepper data that is required for internationalization. */\n@Injectable({providedIn: 'root'})\nexport class MatStepperIntl {\n  /**\n   * Stream that emits whenever the labels here are changed. Use this to notify\n   * components if the labels have changed after initialization.\n   */\n  readonly changes: Subject<void> = new Subject<void>();\n\n  /** Label that is rendered below optional steps. */\n  optionalLabel: string = 'Optional';\n}\n\n\n/** @docs-private */\nexport function MAT_STEPPER_INTL_PROVIDER_FACTORY(parentIntl: MatStepperIntl) {\n  return parentIntl || new MatStepperIntl();\n}\n\n/** @docs-private */\nexport const MAT_STEPPER_INTL_PROVIDER = {\n  provide: MatStepperIntl,\n  deps: [[new Optional(), new SkipSelf(), MatStepperIntl]],\n  useFactory: MAT_STEPPER_INTL_PROVIDER_FACTORY\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {FocusMonitor} from '@angular/cdk/a11y';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  Input,\n  OnDestroy,\n  ViewEncapsulation,\n  TemplateRef,\n} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {MatStepLabel} from './step-label';\nimport {MatStepperIntl} from './stepper-intl';\nimport {MatStepperIconContext} from './stepper-icon';\nimport {CdkStepHeader, StepState} from '@angular/cdk/stepper';\n\n\n@Component({\n  moduleId: module.id,\n  selector: 'mat-step-header',\n  templateUrl: 'step-header.html',\n  styleUrls: ['step-header.css'],\n  host: {\n    'class': 'mat-step-header',\n    'role': 'tab',\n  },\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatStepHeader extends CdkStepHeader implements OnDestroy {\n  private _intlSubscription: Subscription;\n\n  /** State of the given step. */\n  @Input() state: StepState;\n\n  /** Label of the given step. */\n  @Input() label: MatStepLabel | string;\n\n  /** Error message to display when there's an error. */\n  @Input() errorMessage: string;\n\n  /** Overrides for the header icons, passed in via the stepper. */\n  @Input() iconOverrides: {[key: string]: TemplateRef<MatStepperIconContext>};\n\n  /** Index of the given step. */\n  @Input() index: number;\n\n  /** Whether the given step is selected. */\n  @Input() selected: boolean;\n\n  /** Whether the given step label is active. */\n  @Input() active: boolean;\n\n  /** Whether the given step is optional. */\n  @Input() optional: boolean;\n\n  /** Whether the ripple should be disabled. */\n  @Input() disableRipple: boolean;\n\n  constructor(\n    public _intl: MatStepperIntl,\n    private _focusMonitor: FocusMonitor,\n    _elementRef: ElementRef<HTMLElement>,\n    changeDetectorRef: ChangeDetectorRef) {\n    super(_elementRef);\n    _focusMonitor.monitor(_elementRef, true);\n    this._intlSubscription = _intl.changes.subscribe(() => changeDetectorRef.markForCheck());\n  }\n\n  ngOnDestroy() {\n    this._intlSubscription.unsubscribe();\n    this._focusMonitor.stopMonitoring(this._elementRef);\n  }\n\n  /** Focuses the step header. */\n  focus() {\n    this._focusMonitor.focusVia(this._elementRef, 'program');\n  }\n\n  /** Returns string label of given step if it is a text label. */\n  _stringLabel(): string | null {\n    return this.label instanceof MatStepLabel ? null : this.label;\n  }\n\n  /** Returns MatStepLabel if the label of given step is a template label. */\n  _templateLabel(): MatStepLabel | null {\n    return this.label instanceof MatStepLabel ? this.label : null;\n  }\n\n  /** Returns the host HTML element. */\n  _getHostElement() {\n    return this._elementRef.nativeElement;\n  }\n\n  /** Template context variables that are exposed to the `matStepperIcon` instances. */\n  _getIconContext(): MatStepperIconContext {\n    return {\n      index: this.index,\n      active: this.active,\n      optional: this.optional\n    };\n  }\n\n  _getDefaultTextForState(state: StepState): string {\n    if (state == 'number') {\n      return `${this.index + 1}`;\n    }\n    if (state == 'edit') {\n      return 'create';\n    }\n    if (state == 'error') {\n      return 'warning';\n    }\n    return state;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n  AnimationTriggerMetadata,\n} from '@angular/animations';\n\n/**\n * Animations used by the Material steppers.\n * @docs-private\n */\nexport const matStepperAnimations: {\n  readonly horizontalStepTransition: AnimationTriggerMetadata;\n  readonly verticalStepTransition: AnimationTriggerMetadata;\n} = {\n  /** Animation that transitions the step along the X axis in a horizontal stepper. */\n  horizontalStepTransition: trigger('stepTransition', [\n    state('previous', style({transform: 'translate3d(-100%, 0, 0)', visibility: 'hidden'})),\n    state('current', style({transform: 'none', visibility: 'visible'})),\n    state('next', style({transform: 'translate3d(100%, 0, 0)', visibility: 'hidden'})),\n    transition('* => *', animate('500ms cubic-bezier(0.35, 0, 0.25, 1)'))\n  ]),\n\n  /** Animation that transitions the step along the Y axis in a vertical stepper. */\n  verticalStepTransition: trigger('stepTransition', [\n    state('previous', style({height: '0px', visibility: 'hidden'})),\n    state('next', style({height: '0px', visibility: 'hidden'})),\n    state('current', style({height: '*', visibility: 'visible'})),\n    transition('* <=> current', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)'))\n  ])\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, Input, TemplateRef} from '@angular/core';\nimport {StepState} from '@angular/cdk/stepper';\n\n/** Template context available to an attached `matStepperIcon`. */\nexport interface MatStepperIconContext {\n  /** Index of the step. */\n  index: number;\n  /** Whether the step is currently active. */\n  active: boolean;\n  /** Whether the step is optional. */\n  optional: boolean;\n}\n\n/**\n * Template to be used to override the icons inside the step header.\n */\n@Directive({\n  selector: 'ng-template[matStepperIcon]',\n})\nexport class MatStepperIcon {\n  /** Name of the icon to be overridden. */\n  @Input('matStepperIcon') name: StepState;\n\n  constructor(public templateRef: TemplateRef<MatStepperIconContext>) {}\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directionality} from '@angular/cdk/bidi';\nimport {\n  CdkStep,\n  CdkStepper,\n  StepContentPositionState,\n  STEPPER_GLOBAL_OPTIONS,\n  StepperOptions\n} from '@angular/cdk/stepper';\nimport {AnimationEvent} from '@angular/animations';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  Optional,\n  Output,\n  QueryList,\n  SkipSelf,\n  TemplateRef,\n  ViewChildren,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {FormControl, FormGroupDirective, NgForm} from '@angular/forms';\nimport {DOCUMENT} from '@angular/common';\nimport {ErrorStateMatcher} from '@angular/material/core';\nimport {Subject} from 'rxjs';\nimport {takeUntil, distinctUntilChanged} from 'rxjs/operators';\n\nimport {MatStepHeader} from './step-header';\nimport {MatStepLabel} from './step-label';\nimport {matStepperAnimations} from './stepper-animations';\nimport {MatStepperIcon, MatStepperIconContext} from './stepper-icon';\n\n@Component({\n  moduleId: module.id,\n  selector: 'mat-step',\n  templateUrl: 'step.html',\n  providers: [{provide: ErrorStateMatcher, useExisting: MatStep}],\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'matStep',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatStep extends CdkStep implements ErrorStateMatcher {\n  /** Content for step label given by `<ng-template matStepLabel>`. */\n  @ContentChild(MatStepLabel, {static: false}) stepLabel: MatStepLabel;\n\n  /** @breaking-change 8.0.0 remove the `?` after `stepperOptions` */\n  constructor(@Inject(forwardRef(() => MatStepper)) stepper: MatStepper,\n              @SkipSelf() private _errorStateMatcher: ErrorStateMatcher,\n              @Optional() @Inject(STEPPER_GLOBAL_OPTIONS) stepperOptions?: StepperOptions) {\n    super(stepper, stepperOptions);\n  }\n\n  /** Custom error state matcher that additionally checks for validity of interacted form. */\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const originalErrorState = this._errorStateMatcher.isErrorState(control, form);\n\n    // Custom error state checks for the validity of form that is not submitted or touched\n    // since user can trigger a form change by calling for another step without directly\n    // interacting with the current form.\n    const customErrorState = !!(control && control.invalid && this.interacted);\n\n    return originalErrorState || customErrorState;\n  }\n}\n\n\n@Directive({selector: '[matStepper]', providers: [{provide: CdkStepper, useExisting: MatStepper}]})\nexport class MatStepper extends CdkStepper implements AfterContentInit {\n  /** The list of step headers of the steps in the stepper. */\n  @ViewChildren(MatStepHeader) _stepHeader: QueryList<MatStepHeader>;\n\n  /** Steps that the stepper holds. */\n  @ContentChildren(MatStep) _steps: QueryList<MatStep>;\n\n  /** Custom icon overrides passed in by the consumer. */\n  @ContentChildren(MatStepperIcon) _icons: QueryList<MatStepperIcon>;\n\n  /** Event emitted when the current step is done transitioning in. */\n  @Output() readonly animationDone: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Whether ripples should be disabled for the step headers. */\n  @Input() disableRipple: boolean;\n\n  /** Consumer-specified template-refs to be used to override the header icons. */\n  _iconOverrides: {[key: string]: TemplateRef<MatStepperIconContext>} = {};\n\n  /** Stream of animation `done` events when the body expands/collapses. */\n  _animationDone = new Subject<AnimationEvent>();\n\n  ngAfterContentInit() {\n    this._icons.forEach(({name, templateRef}) => this._iconOverrides[name] = templateRef);\n\n    // Mark the component for change detection whenever the content children query changes\n    this._steps.changes.pipe(takeUntil(this._destroyed)).subscribe(() => this._stateChanged());\n\n    this._animationDone.pipe(\n      // This needs a `distinctUntilChanged` in order to avoid emitting the same event twice due\n      // to a bug in animations where the `.done` callback gets invoked twice on some browsers.\n      // See https://github.com/angular/angular/issues/24084\n      distinctUntilChanged((x, y) => x.fromState === y.fromState && x.toState === y.toState),\n      takeUntil(this._destroyed)\n    ).subscribe(event => {\n      if ((event.toState as StepContentPositionState) === 'current') {\n        this.animationDone.emit();\n      }\n    });\n  }\n}\n\n@Component({\n  moduleId: module.id,\n  selector: 'mat-horizontal-stepper',\n  exportAs: 'matHorizontalStepper',\n  templateUrl: 'stepper-horizontal.html',\n  styleUrls: ['stepper.css'],\n  inputs: ['selectedIndex'],\n  host: {\n    'class': 'mat-stepper-horizontal',\n    '[class.mat-stepper-label-position-end]': 'labelPosition == \"end\"',\n    '[class.mat-stepper-label-position-bottom]': 'labelPosition == \"bottom\"',\n    'aria-orientation': 'horizontal',\n    'role': 'tablist',\n  },\n  animations: [matStepperAnimations.horizontalStepTransition],\n  providers: [\n    {provide: MatStepper, useExisting: MatHorizontalStepper},\n    {provide: CdkStepper, useExisting: MatHorizontalStepper}\n  ],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatHorizontalStepper extends MatStepper {\n  /** Whether the label should display in bottom or end position. */\n  @Input()\n  labelPosition: 'bottom' | 'end' = 'end';\n}\n\n@Component({\n  moduleId: module.id,\n  selector: 'mat-vertical-stepper',\n  exportAs: 'matVerticalStepper',\n  templateUrl: 'stepper-vertical.html',\n  styleUrls: ['stepper.css'],\n  inputs: ['selectedIndex'],\n  host: {\n    'class': 'mat-stepper-vertical',\n    'aria-orientation': 'vertical',\n    'role': 'tablist',\n  },\n  animations: [matStepperAnimations.verticalStepTransition],\n  providers: [\n    {provide: MatStepper, useExisting: MatVerticalStepper},\n    {provide: CdkStepper, useExisting: MatVerticalStepper}\n  ],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatVerticalStepper extends MatStepper {\n  constructor(\n    @Optional() dir: Directionality,\n    changeDetectorRef: ChangeDetectorRef,\n    // @breaking-change 8.0.0 `elementRef` and `_document` parameters to become required.\n    elementRef?: ElementRef<HTMLElement>,\n    @Inject(DOCUMENT) _document?: any) {\n    super(dir, changeDetectorRef, elementRef, _document);\n    this._orientation = 'vertical';\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CdkStepperNext, CdkStepperPrevious} from '@angular/cdk/stepper';\nimport {Directive} from '@angular/core';\n\n/** Button that moves to the next step in a stepper workflow. */\n@Directive({\n  selector: 'button[matStepperNext]',\n  host: {\n    '[type]': 'type',\n  },\n  inputs: ['type']\n})\nexport class MatStepperNext extends CdkStepperNext {\n}\n\n/** Button that moves to the previous step in a stepper workflow. */\n@Directive({\n  selector: 'button[matStepperPrevious]',\n  host: {\n    '[type]': 'type',\n  },\n  inputs: ['type']\n})\nexport class MatStepperPrevious extends CdkStepperPrevious {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {PortalModule} from '@angular/cdk/portal';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {MatButtonModule} from '@angular/material/button';\nimport {ErrorStateMatcher, MatCommonModule, MatRippleModule} from '@angular/material/core';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatStepHeader} from './step-header';\nimport {MatStepLabel} from './step-label';\nimport {MatHorizontalStepper, MatStep, MatStepper, MatVerticalStepper} from './stepper';\nimport {MatStepperNext, MatStepperPrevious} from './stepper-button';\nimport {MatStepperIcon} from './stepper-icon';\nimport {MAT_STEPPER_INTL_PROVIDER} from './stepper-intl';\n\n\n@NgModule({\n  imports: [\n    MatCommonModule,\n    CommonModule,\n    PortalModule,\n    MatButtonModule,\n    CdkStepperModule,\n    MatIconModule,\n    MatRippleModule,\n  ],\n  exports: [\n    MatCommonModule,\n    MatHorizontalStepper,\n    MatVerticalStepper,\n    MatStep,\n    MatStepLabel,\n    MatStepper,\n    MatStepperNext,\n    MatStepperPrevious,\n    MatStepHeader,\n    MatStepperIcon,\n  ],\n  declarations: [\n    MatHorizontalStepper,\n    MatVerticalStepper,\n    MatStep,\n    MatStepLabel,\n    MatStepper,\n    MatStepperNext,\n    MatStepperPrevious,\n    MatStepHeader,\n    MatStepperIcon,\n  ],\n  providers: [MAT_STEPPER_INTL_PROVIDER, ErrorStateMatcher],\n})\nexport class MatStepperModule {}\n"]}