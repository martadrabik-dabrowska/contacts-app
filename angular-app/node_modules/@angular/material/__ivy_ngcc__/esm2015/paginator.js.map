{"version":3,"file":"paginator.js","sources":["../../../src/material/paginator/paginator-intl.ts","../../../src/material/paginator/paginator.ts","../../../src/material/paginator/paginator-module.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable, Optional, SkipSelf} from '@angular/core';\nimport {Subject} from 'rxjs';\n\n\n/**\n * To modify the labels and text displayed, create a new instance of MatPaginatorIntl and\n * include it in a custom provider\n */\n@Injectable({providedIn: 'root'})\nexport class MatPaginatorIntl {\n  /**\n   * Stream to emit from when labels are changed. Use this to notify components when the labels have\n   * changed after initialization.\n   */\n  readonly changes: Subject<void> = new Subject<void>();\n\n  /** A label for the page size selector. */\n  itemsPerPageLabel: string = 'Items per page:';\n\n  /** A label for the button that increments the current page. */\n  nextPageLabel: string = 'Next page';\n\n  /** A label for the button that decrements the current page. */\n  previousPageLabel: string = 'Previous page';\n\n  /** A label for the button that moves to the first page. */\n  firstPageLabel: string = 'First page';\n\n  /** A label for the button that moves to the last page. */\n  lastPageLabel: string = 'Last page';\n\n  /** A label for the range of items within the current page and the length of the whole list. */\n  getRangeLabel = (page: number, pageSize: number, length: number) => {\n    if (length == 0 || pageSize == 0) { return `0 of ${length}`; }\n\n    length = Math.max(length, 0);\n\n    const startIndex = page * pageSize;\n\n    // If the start index exceeds the list length, do not try and fix the end index to the end.\n    const endIndex = startIndex < length ?\n        Math.min(startIndex + pageSize, length) :\n        startIndex + pageSize;\n\n    return `${startIndex + 1} – ${endIndex} of ${length}`;\n  }\n}\n\n/** @docs-private */\nexport function MAT_PAGINATOR_INTL_PROVIDER_FACTORY(parentIntl: MatPaginatorIntl) {\n  return parentIntl || new MatPaginatorIntl();\n}\n\n/** @docs-private */\nexport const MAT_PAGINATOR_INTL_PROVIDER = {\n  // If there is already an MatPaginatorIntl available, use that. Otherwise, provide a new one.\n  provide: MatPaginatorIntl,\n  deps: [[new Optional(), new SkipSelf(), MatPaginatorIntl]],\n  useFactory: MAT_PAGINATOR_INTL_PROVIDER_FACTORY\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {coerceNumberProperty, coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {MatPaginatorIntl} from './paginator-intl';\nimport {\n  HasInitialized,\n  HasInitializedCtor,\n  mixinInitialized,\n  ThemePalette,\n  mixinDisabled,\n  CanDisableCtor,\n  CanDisable,\n} from '@angular/material/core';\n\n/** The default page size if there is no page size and there are no provided page size options. */\nconst DEFAULT_PAGE_SIZE = 50;\n\n/**\n * Change event object that is emitted when the user selects a\n * different page size or navigates to another page.\n */\nexport class PageEvent {\n  /** The current page index. */\n  pageIndex: number;\n\n  /**\n   * Index of the page that was selected previously.\n   * @breaking-change 8.0.0 To be made into a required property.\n   */\n  previousPageIndex?: number;\n\n  /** The current page size */\n  pageSize: number;\n\n  /** The current total number of items being paged */\n  length: number;\n}\n\n// Boilerplate for applying mixins to MatPaginator.\n/** @docs-private */\nclass MatPaginatorBase {}\nconst _MatPaginatorBase: CanDisableCtor & HasInitializedCtor & typeof MatPaginatorBase =\n    mixinDisabled(mixinInitialized(MatPaginatorBase));\n\n/**\n * Component to provide navigation between paged information. Displays the size of the current\n * page, user-selectable options to change that size, what items are being shown, and\n * navigational button to go to the previous or next page.\n */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-paginator',\n  exportAs: 'matPaginator',\n  templateUrl: 'paginator.html',\n  styleUrls: ['paginator.css'],\n  inputs: ['disabled'],\n  host: {\n    'class': 'mat-paginator',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class MatPaginator extends _MatPaginatorBase implements OnInit, OnDestroy, CanDisable,\n  HasInitialized {\n  private _initialized: boolean;\n  private _intlChanges: Subscription;\n\n  /** Theme color to be used for the underlying form controls. */\n  @Input() color: ThemePalette;\n\n  /** The zero-based page index of the displayed list of items. Defaulted to 0. */\n  @Input()\n  get pageIndex(): number { return this._pageIndex; }\n  set pageIndex(value: number) {\n    this._pageIndex = Math.max(coerceNumberProperty(value), 0);\n    this._changeDetectorRef.markForCheck();\n  }\n  private _pageIndex = 0;\n\n  /** The length of the total number of items that are being paginated. Defaulted to 0. */\n  @Input()\n  get length(): number { return this._length; }\n  set length(value: number) {\n    this._length = coerceNumberProperty(value);\n    this._changeDetectorRef.markForCheck();\n  }\n  private _length = 0;\n\n  /** Number of items to display on a page. By default set to 50. */\n  @Input()\n  get pageSize(): number { return this._pageSize; }\n  set pageSize(value: number) {\n    this._pageSize = Math.max(coerceNumberProperty(value), 0);\n    this._updateDisplayedPageSizeOptions();\n  }\n  private _pageSize: number;\n\n  /** The set of provided page size options to display to the user. */\n  @Input()\n  get pageSizeOptions(): number[] { return this._pageSizeOptions; }\n  set pageSizeOptions(value: number[]) {\n    this._pageSizeOptions = (value || []).map(p => coerceNumberProperty(p));\n    this._updateDisplayedPageSizeOptions();\n  }\n  private _pageSizeOptions: number[] = [];\n\n  /** Whether to hide the page size selection UI from the user. */\n  @Input()\n  get hidePageSize(): boolean { return this._hidePageSize; }\n  set hidePageSize(value: boolean) {\n    this._hidePageSize = coerceBooleanProperty(value);\n  }\n  private _hidePageSize = false;\n\n\n  /** Whether to show the first/last buttons UI to the user. */\n  @Input()\n  get showFirstLastButtons(): boolean { return this._showFirstLastButtons; }\n  set showFirstLastButtons(value: boolean) {\n    this._showFirstLastButtons = coerceBooleanProperty(value);\n  }\n  private _showFirstLastButtons = false;\n\n  /** Event emitted when the paginator changes the page size or page index. */\n  @Output() readonly page: EventEmitter<PageEvent> = new EventEmitter<PageEvent>();\n\n  /** Displayed set of page size options. Will be sorted and include current page size. */\n  _displayedPageSizeOptions: number[];\n\n  constructor(public _intl: MatPaginatorIntl,\n              private _changeDetectorRef: ChangeDetectorRef) {\n    super();\n    this._intlChanges = _intl.changes.subscribe(() => this._changeDetectorRef.markForCheck());\n  }\n\n  ngOnInit() {\n    this._initialized = true;\n    this._updateDisplayedPageSizeOptions();\n    this._markInitialized();\n  }\n\n  ngOnDestroy() {\n    this._intlChanges.unsubscribe();\n  }\n\n  /** Advances to the next page if it exists. */\n  nextPage(): void {\n    if (!this.hasNextPage()) { return; }\n\n    const previousPageIndex = this.pageIndex;\n    this.pageIndex++;\n    this._emitPageEvent(previousPageIndex);\n  }\n\n  /** Move back to the previous page if it exists. */\n  previousPage(): void {\n    if (!this.hasPreviousPage()) { return; }\n\n    const previousPageIndex = this.pageIndex;\n    this.pageIndex--;\n    this._emitPageEvent(previousPageIndex);\n  }\n\n  /** Move to the first page if not already there. */\n  firstPage(): void {\n    // hasPreviousPage being false implies at the start\n    if (!this.hasPreviousPage()) { return; }\n\n    const previousPageIndex = this.pageIndex;\n    this.pageIndex = 0;\n    this._emitPageEvent(previousPageIndex);\n  }\n\n  /** Move to the last page if not already there. */\n  lastPage(): void {\n    // hasNextPage being false implies at the end\n    if (!this.hasNextPage()) { return; }\n\n    const previousPageIndex = this.pageIndex;\n    this.pageIndex = this.getNumberOfPages() - 1;\n    this._emitPageEvent(previousPageIndex);\n  }\n\n  /** Whether there is a previous page. */\n  hasPreviousPage(): boolean {\n    return this.pageIndex >= 1 && this.pageSize != 0;\n  }\n\n  /** Whether there is a next page. */\n  hasNextPage(): boolean {\n    const maxPageIndex = this.getNumberOfPages() - 1;\n    return this.pageIndex < maxPageIndex && this.pageSize != 0;\n  }\n\n  /** Calculate the number of pages */\n  getNumberOfPages(): number {\n    if (!this.pageSize) {\n      return 0;\n    }\n\n    return Math.ceil(this.length / this.pageSize);\n  }\n\n\n  /**\n   * Changes the page size so that the first item displayed on the page will still be\n   * displayed using the new page size.\n   *\n   * For example, if the page size is 10 and on the second page (items indexed 10-19) then\n   * switching so that the page size is 5 will set the third page as the current page so\n   * that the 10th item will still be displayed.\n   */\n  _changePageSize(pageSize: number) {\n    // Current page needs to be updated to reflect the new page size. Navigate to the page\n    // containing the previous page's first item.\n    const startIndex = this.pageIndex * this.pageSize;\n    const previousPageIndex = this.pageIndex;\n\n    this.pageIndex = Math.floor(startIndex / pageSize) || 0;\n    this.pageSize = pageSize;\n    this._emitPageEvent(previousPageIndex);\n  }\n\n  /** Checks whether the buttons for going forwards should be disabled. */\n  _nextButtonsDisabled() {\n    return this.disabled || !this.hasNextPage();\n  }\n\n  /** Checks whether the buttons for going backwards should be disabled. */\n  _previousButtonsDisabled() {\n    return this.disabled || !this.hasPreviousPage();\n  }\n\n  /**\n   * Updates the list of page size options to display to the user. Includes making sure that\n   * the page size is an option and that the list is sorted.\n   */\n  private _updateDisplayedPageSizeOptions() {\n    if (!this._initialized) { return; }\n\n    // If no page size is provided, use the first page size option or the default page size.\n    if (!this.pageSize) {\n      this._pageSize = this.pageSizeOptions.length != 0 ?\n          this.pageSizeOptions[0] :\n          DEFAULT_PAGE_SIZE;\n    }\n\n    this._displayedPageSizeOptions = this.pageSizeOptions.slice();\n\n    if (this._displayedPageSizeOptions.indexOf(this.pageSize) === -1) {\n      this._displayedPageSizeOptions.push(this.pageSize);\n    }\n\n    // Sort the numbers using a number-specific sort function.\n    this._displayedPageSizeOptions.sort((a, b) => a - b);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** Emits an event notifying that a change of the paginator's properties has been triggered. */\n  private _emitPageEvent(previousPageIndex: number) {\n    this.page.emit({\n      previousPageIndex,\n      pageIndex: this.pageIndex,\n      pageSize: this.pageSize,\n      length: this.length\n    });\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatPaginator} from './paginator';\nimport {MAT_PAGINATOR_INTL_PROVIDER} from './paginator-intl';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    MatSelectModule,\n    MatTooltipModule,\n  ],\n  exports: [MatPaginator],\n  declarations: [MatPaginator],\n  providers: [MAT_PAGINATOR_INTL_PROVIDER],\n})\nexport class MatPaginatorModule {}\n"]}