{"version":3,"file":"tabs.js","sources":["../../../src/material/tabs/ink-bar.ts","../../../src/material/tabs/tab-content.ts","../../../src/material/tabs/tab-label.ts","../../../src/material/tabs/tab.ts","../../../src/material/tabs/tabs-animations.ts","../../../src/material/tabs/tab-body.ts","../../../src/material/tabs/tab-group.ts","../../../src/material/tabs/tab-label-wrapper.ts","../../../src/material/tabs/paginated-tab-header.ts","../../../src/material/tabs/tab-header.ts","../../../src/material/tabs/tab-nav-bar/tab-nav-bar.ts","../../../src/material/tabs/tabs-module.ts"],"names":["observableOf"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsBA,MAAa,uBAAuB,GAClC,IAAI,cAAc,CAAuB,qBAAqB,EAAE;AACjE,IAAG,UAAU,EAAE,MAAM;AACrB,IAAG,OAAO,EAAE,+BAA+B;AAC3C,CAAE,CAAC,CAAJ;AAAE;AAEF;AACmD;AACnC;AAEL;AAAX,SAAgB,+BAA+B,GAA/C;AAAG;AAAsB,IACzB,MAAQ,MAAM;AAAS;AACnB;AAAoB;AAAS,IADhB,CAAC,OAAoB,MAAM;AAC3C,QAAG,IAAI,EAAE,OAAO,GAAG,CAAC,OAAO,CAAC,UAAU,IAAI,CAAC,IAAI,IAAI,GAAG,GAAG;AACzD,QAAG,KAAK,EAAE,OAAO,GAAG,CAAC,OAAO,CAAC,WAAW,IAAI,CAAC,IAAI,IAAI,GAAG,GAAG;AAC3D,KAAE,CAAC,CAAA,CAAJ;AAAE,IAEA,OAAO,MAAM,CAAC;AACf,CAAA;AAED;AACC;AACC;AAEF;AAOA,MAAa,SAAS,CAAtB;AAAG;AAAS;AAET;AAA2B;AACb;AACM;AAAS,IAH9B,WAAF,CACY,WAAoC,EACpC,OAAe,EACkB,iBAAuC,EAC9B,cAAuB,EAJ7E;AAAG,QACS,IAAZ,CAAA,WAAuB,GAAX,WAAW,CAAyB;AAChD,QAAY,IAAZ,CAAA,OAAmB,GAAP,OAAO,CAAQ;AAC3B,QAA6C,IAA7C,CAAA,iBAA8D,GAAjB,iBAAiB,CAAsB;AACpF,QAAsD,IAAtD,CAAA,cAAoE,GAAd,cAAc,CAAS;AAAE,KAAG;AAElF;AACG;AACG;AACG;AAEC;AAAoB;AAAS,IAArC,cAAc,CAAC,OAAoB,EAArC;AAAG,QACC,IAAI,CAAC,IAAI,EAAE,CAAC;AAEhB,QAAI,IAAI,OAAO,qBAAqB,KAAK,WAAW,EAAE;AACrD,YAAK,IAAI,CAAC,OAAO,CAAC,iBAAiB;AAAO;AACjB;AAAiB,YADN,MAArC;AAAG,gBACK,qBAAqB;AAAO;AAC/B;AAEF,gBAH2B,MAAM,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,EAAC,CAAC;AAC7D,aAAM,EAAC,CAAC;AACR,SAAI;AAAE,aAAI;AACV,YAAK,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;AAC9B,SAAI;AACJ,KAAE;AAEH;AAAS;AACD;AACG;AAAS,IADlB,IAAI,GAAN;AAAG,QACC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,KAAK,CAAC,UAAU,GAAG,SAAS,CAAC;AAC/D,KAAE;AAEH;AAAS;AACD;AACG;AAAS,IADlB,IAAI,GAAN;AAAG,QACC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,KAAK,CAAC,UAAU,GAAG,QAAQ,CAAC;AAC9D,KAAE;AAEH;AACG;AACG;AACH;AACqB;AAAoB;AACpC,IADE,UAAU,CAAC,OAAoB,EAAzC;AAAG;AAA0B,QAC7B,MAAU,SAAS,GAAG,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAArD;AAAE;AAA0B,QAC5B,MAAU,MAAM,GAAgB,IAAI,CAAC,WAAW,CAAC,aAAa,CAA9D;AAAE,QAEE,MAAM,CAAC,KAAK,CAAC,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC;AACtC,QAAG,MAAM,CAAC,KAAK,CAAC,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC;AACxC,KAAE;AACF;+BApDD,EAAA,IAAA,EAAC,SAAS,EAAV,IAAA,EAAA,CAAW,mBACT,QAAQ,EAAE,aAAa,mBACvB,IAAI,EAAE,uBACJ,OAAO,EAAE,aAAa,uBACtB,iCAAiC,EAAE,CAAvC,mCAAA,CAA4E;cACzE,gBACF,EAAD,EAAA;;WACE;AAAE;AAAoB;AAEJ,IA9CpB,EAAA,IAAA,EAAmB,UAAU,EAA7B;AAAG,IAAH,EAAA,IAAA,EAAuD,MAAM,EAA7D;AAAG,IAgDH,EAAA,IAAA,EAAA,SAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAK,MAAM,EAAX,IAAA,EAAA,CAAY,uBAAuB,EAAnC,EAAA,CAAA,EAAA;AAAG,IACH,EAAA,IAAA,EAAA,MAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAK,QAAQ,EAAb,EAAA,EAAA,IAAA,EAAiB,MAAM,EAAvB,IAAA,EAAA,CAAwB,qBAAqB,EAA7C,EAAA,CAAA,EAAA;AAAE;;;;;;;;;;;;;;;;;;kCAAE;AAAE;AAAE;AAAK;AAAmC;AAG4B;AAAK;AAAK;AAE/E;AClDP,MAAa,aAAa,CAA1B;AAAG;AAAS;AACD;AAAS,IAAlB,WAAF,CAAqB,QAA0B,EAA/C;AAAG,QAAkB,IAArB,CAAA,QAA6B,GAAR,QAAQ,CAAkB;AAAE,KAAG;AACnD;mCAHD,EAAA,IAAA,EAAC,SAAS,EAAV,IAAA,EAAA,CAAW,EAAC,QAAQ,EAAE,iBAAiB,EAAC,EAAxC,EAAA;+GAAK;AAAE;AAAoB;AACF,IAJzB,EAAA,IAAA,EAAmB,WAAW,EAA9B;AAAE;;;;4EAAE;AAAE;AAAE;AAAK;AAAmC;AAGb;AAAK;AACrC;AACiC;ACEpC,MAAa,WAAY,SAAQ,SAAS,CAA1C;AAAG;iCAHH,EAAA,IAAA,EAAC,SAAS,EAAV,IAAA,EAAA,CAAW,mBACT,QAAQ,EAAE;aAAgC,gBAC3C,EAAD,EAAA;;;;;;;0BACE;AAAE;AAAE;AAAK;AACX;AAAsH;AAAK;AAA+C;AAAK;AAAmB;ACelM,MAAM,UAAU,CAAhB;AAAG,CAAgB;AAClB;AAAD,MAAM,gBAAgB,GAClB,aAAa,CAAC,UAAU,CAAC,CAD7B;AAYA,MAAa,MAAO,SAAQ,gBAAgB,CAA5C;AAAG;AAAS;AAAqC;AAAS,IAqDxD,WAAF,CAAsB,iBAAmC,EAAzD;AAAG,QACC,KAAK,EAAE,CAAC;AACX,QAFqB,IAAtB,CAAA,iBAAuC,GAAjB,iBAAiB,CAAkB;AAAE;AAChD;AAIgB;AAAa,QA5CtB,IAAlB,CAAA,SAA2B,GAAW,EAAE,CAAC;AAEzC;AAAa;AAEb;AAEM,QAMI,IAAV,CAAA,cAAwB,GAA0B,IAAI,CAAC;AAEvD;AAAa;AAEE;AAAa,QAIjB,IAAX,CAAA,aAAwB,GAAG,IAAI,OAAO,EAAQ,CAAC;AAE/C;AACO;AACO;AAEC;AAAa,QAA1B,IAAF,CAAA,QAAU,GAAkB,IAAI,CAAC;AAEjC;AACO;AACO;AAEC;AAAa,QAA1B,IAAF,CAAA,MAAQ,GAAkB,IAAI,CAAC;AAE/B;AACO;AAEC;AAER,QAFE,IAAF,CAAA,QAAU,GAAG,KAAK,CAAC;AAEnB,KAEG;AAEH;AAAS;AAAuB;AAC1B;AAAS,IA7Bb,IAAI,OAAO,GAAb;AAAG,QACC,OAAO,IAAI,CAAC,cAAc,CAAC;AAC9B,KAAE;AAEH;AAAS;AAA2B;AAAoB;AACtD,IAuBA,WAAW,CAAC,OAAsB,EAApC;AAAG,QACC,IAAI,OAAO,CAAC,cAAc,CAAC,WAAW,CAAC,IAAI,OAAO,CAAC,cAAc,CAAC,UAAU,CAAC,EAAE;AAClF,YAAK,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;AAC/B,SAAI;AACJ,KAAE;AAEH;AAAS;AACJ;AAAS,IADZ,WAAW,GAAb;AAAG,QACC,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC;AACjC,KAAE;AAEH;AAAS;AACD;AAAS,IADf,QAAQ,GAAV;AAAG,QACC,IAAI,CAAC,cAAc,GAAG,IAAI,cAAc,CACpC,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;AAC/E,KAAE;AACF;4BAhFD,EAAA,IAAA,EAAC,SAAS,EAAV,IAAA,EAAA,CAAW,CAAX,QAAA,EAAA,SAAA,mBACE,QAAQ,EAAE;kCAAZ,mBACE,MAAF,EAAU,CAAV,UAAqB,CAArB,mBACE,eAAF,EAAA,uBAAA,CAAA,MAAA,mBACE;QAAF,EAAA,iBAAA,CAAA,IAAA,mBACE;EAAF,EAAA,QAAA,gBACA,EAAA,EAAA,IACA;;;;;;;;;;;;;iDAAA;AAAE;AACF;AAC8B;AAAgC;AAxB9D,MAAA,CAAA,cAAA,GAAA;AAAG;AAGsB;AAEF,IAqBvB,gBAAA,EAAA,CAAA,EAAA,IAAA,EAAA,SAAe,EAAf,IAAA,EAAA,CAAgB,WAAW,EAAE,EAAC,MAAM,EAAE,IAAtC,EAAA,EAAA,EAAA,CAAA;AAAG,IAKH,SAAA,EAAA,CAAA,EAAA,IAAA,EAAA,KAAA,EAAG,IAAH,EAAA,CAAA,OAAA,EAAA,EAAA,CAAA;AAAG,IAIH,SAAA,EAAA,CAAA,EAAA,IAAA,EAAA,KAAA,EAAG,IAAH,EAAA,CAAA,YAAA,EAAA,EAAA,CAAA;AAAG,IAGH,cAAA,EAAA,CAAA,EAAA,IAAA,EAAQ,KAAR,EAAA,IAAA,EAAA,CAAA,iBAAA,EAAA,EAAA,CAAA;AAAE,CAGF;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAAA;AAAE;AAAE;AAAK;AAER;AAEqD;AAAK;AACzD;AACoC;AAElC;AAAc;ACjDlB,MAAa,iBAAiB,GAE1B;AACH;AAAS;AACD;AAAS,IAAhB,YAAY,EAAE,OAAO,CAAC,cAAc,EAAE;AACvC;AACK,QAAF,KAAK,CAAC,uDAAuD,EAAE,KAAK,CAAC,EAAC,SAAS,EAAE,MAAM,EAAC,CAAC,CAAC;AAE9F;AACK;AACK;AACK;AACK,QAAhB,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,EAAC,SAAS,EAAE,0BAA0B,EAAE,SAAS,EAAE,KAAK,EAAC,CAAC,CAAC;AAClF,QAAG,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,EAAC,SAAS,EAAE,yBAAyB,EAAE,SAAS,EAAE,KAAK,EAAC,CAAC,CAAC;AAEnF,QAAI,UAAU,CAAC,wDAAwD,EAC/D,OAAO,CAAC,sDAAsD,CAAC,CAAC;AACvE,QAAG,UAAU,CAAC,4BAA4B,EAAE;AAC5C,YAAK,KAAK,CAAC,EAAC,SAAS,EAAE,0BAA0B,EAAC,CAAC;AACnD,YAAK,OAAO,CAAC,sDAAsD,CAAC;AACpE,SAAI,CAAC;AACL,QAAG,UAAU,CAAC,6BAA6B,EAAE;AAC7C,YAAK,KAAK,CAAC,EAAC,SAAS,EAAE,yBAAyB,EAAC,CAAC;AAClD,YAAK,OAAO,CAAC,sDAAsD,CAAC;AACpE,SAAI,CAAC;AACL,KAAE,CAAC;AACH,CAAA;AACA;AAAE;AAAK;AAAmC;AAAsH;AAAK;AAAK;AAA2D;AAAmB;ACezP,MAAa,gBAAiB,SAAQ,eAAe,CAArD;AAAG;AAAS;AAA4C;AACjD;AAAyB;AAAS,IAKvC,WAAF,CACI,wBAAkD,EAClD,gBAAkC,EACY,KAAiB,EAHnE;AAAG,QAIG,KAAK,CAAC,wBAAwB,EAAE,gBAAgB,CAAC,CAAC;AACvD,QAFiD,IAAlD,CAAA,KAAuD,GAAL,KAAK,CAAY;AAAE;AAC1D;AAGa;AAAa,QAX3B,IAAV,CAAA,aAAuB,GAAG,YAAY,CAAC,KAAK,CAAC;AAC5C;AAAa;AACG;AAAa,QAApB,IAAV,CAAA,WAAqB,GAAG,YAAY,CAAC,KAAK,CAAC;AAE3C,KAKG;AAEH;AAAS;AACD;AACD;AAAS,IADd,QAAQ,GAAV;AAAG,QACC,KAAK,CAAC,QAAQ,EAAE,CAAC;AAErB,QAAI,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,gBAAgB;AACnD,aAAM,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;AACzE,aAAM,SAAS;AAAO;AACV;AAAwB;AACrC,QAFiB,CAAC,WAAoB,KAAtC;AAAG,YACK,IAAI,WAAW,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE;AAC/C,gBAAS,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;AAC1C,aAAQ;AACR,SAAM,EAAC,CAAC;AAET,QAAI,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,mBAAmB,CAAC,SAAS;AAAO;AAErE;AAGA,QAL+D,MAAhE;AAAG,YACG,IAAI,CAAC,MAAM,EAAE,CAAC;AACnB,SAAI,EAAC,CAAC;AACN,KAAE;AAEH;AAAS;AACD;AACJ;AAAS,IADX,WAAW,GAAb;AAAG,QACC,KAAK,CAAC,WAAW,EAAE,CAAC;AACvB,QAAG,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;AACpC,QAAG,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC;AAClC,KAAE;AACF;sCAvCD,EAAA,IAAA,EAAC,SAAS,EAAV,IAAA,EAAA,CAAW,mBACT,QAAQ,EAAE,kBAAkB,eAC7B,EAAD,EAAA;;;qKACE;AAAE;AAAoB;AAA2C,IAxCnE,EAAA,IAAA,EAAE,wBAAwB,EAA1B;AAAG,IACH,EAAA,IAAA,EAAE,gBAAgB,EAAlB;AAAG,IAgDH,EAAA,IAAA,EAAyD,UAAU,EAAnE,UAAA,EAAA,CAAA,EAAA,IAAA,EAAK,MAAM,EAAX,IAAA,EAAA,CAAY,UAAU;AAAO;AAAoC;AAC9C,oBADI,MAAM,UAAU,EAAC,EAAxC,EAAA,CAAA,EAAA;AAAE;;;;;;;;;;;kCAAE;AAAE;AAAK;AAA2D;AACpD;AAAc;AAAK;AAqCrC,MAAsB,eAAe,CAArC;AAAG;AAAS;AAA+B;AAAwB;AAChC;AAAS,IA6C1C,WAAF,CAAsB,WAAoC,EACxB,IAAoB,EACxC,iBAAoC,EAFlD;AAAG,QAAmB,IAAtB,CAAA,WAAiC,GAAX,WAAW,CAAyB;AAC1D,QAAkC,IAAlC,CAAA,IAAsC,GAAJ,IAAI,CAAgB;AACtD;AAAa;AAGL;AAAa,QA9CX,IAAV,CAAA,sBAAgC,GAAG,YAAY,CAAC,KAAK,CAAC;AAEtD;AAAa;AAA4D;AAAa,QAIpF,IAAF,CAAA,qBAAuB,GAAG,IAAI,OAAO,EAAkB,CAAC;AAExD;AAAa;AACG;AAAa,QAAR,IAArB,CAAA,YAAiC,GAAyB,IAAI,YAAY,EAAU,CAAC;AAErF;AAAa;AACG;AAAa,QAAR,IAArB,CAAA,gBAAqC,GAA0B,IAAI,YAAY,EAAW,CAAC;AAE3F;AAAa;AACG;AAAa,QAAR,IAArB,CAAA,mBAAwC,GAA0B,IAAI,YAAY,EAAW,CAAC;AAE9F;AAAa;AACG;AAAa,QAAR,IAArB,CAAA,WAAgC,GAAuB,IAAI,YAAY,CAAO,IAAI,CAAC,CAAC;AAEpF;AACC;AAGmB;AAAa;AAED;AAAa,QAMlC,IAAX,CAAA,iBAA4B,GAAW,OAAO,CAAC;AAE/C,QAWI,IAAI,IAAI,EAAE;AACb,YAAK,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS;AAAO;AACjD;AAA4B;AACjC,YAFgD,CAAC,GAAc,KAAzE;AAAG,gBACK,IAAI,CAAC,8BAA8B,CAAC,GAAG,CAAC,CAAC;AAChD,gBAAO,iBAAiB,CAAC,YAAY,EAAE,CAAC;AACxC,aAAM,EAAC,CAAC;AACR,SAAI;AAEL;AACK;AACK,QAAN,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,oBAAoB;AAAO;AAC5C;AAAyB;AAAwB;AACxD,QAF6C,CAAC,CAAC,EAAE,CAAC,KAA9D;AAAG,YACG,OAAO,CAAC,CAAC,SAAS,KAAK,CAAC,CAAC,SAAS,IAAI,CAAC,CAAC,OAAO,KAAK,CAAC,CAAC,OAAO,CAAC;AACnE,SAAI,EAAC,CAAC,CAAC,SAAS;AAAO;AACA;AAAwB;AAAa,QAD3C,KAAK,IAAvB;AAAG;AAC+C,YAC5C,IAAI,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE;AAC1F,gBAAO,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;AAC/B,aAAM;AAEP,YAAM,IAAI,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE;AAC7F,gBAAO,IAAI,CAAC,mBAAmB,CAAC,IAAI,EAAE,CAAC;AACvC,aAAM;AACN,SAAI,EAAC,CAAC;AACN,KAAE;AAEH;AACG;AACM;AAA4B;AAAoB;AAAS,IAnChE,IACI,QAAQ,CAAC,QAAgB,EAD/B;AAAG,QAEC,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC;AAClC,QAAG,IAAI,CAAC,8BAA8B,EAAE,CAAC;AACzC,KAAE;AAEH;AAAS;AACkC;AAI9B;AAAoB;AAAS,IA0BxC,QAAQ,GAAV;AAAG,QACC,IAAI,IAAI,CAAC,SAAS,IAAI,QAAQ,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,EAAE;AAC1D,YAAK,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,0BAA0B,EAAE,CAAC;AACxD,SAAI;AACJ,KAAE;AAEH;AAAS;AACE;AAAS,IADlB,WAAW,GAAb;AAAG,QACC,IAAI,CAAC,sBAAsB,CAAC,WAAW,EAAE,CAAC;AAC7C,QAAG,IAAI,CAAC,qBAAqB,CAAC,QAAQ,EAAE,CAAC;AACzC,KAAE;AAEH;AAAS;AAAyB;AAAoB;AAC/C,IADL,sBAAsB,CAAC,KAAqB,EAA9C;AAAG;AAA0B,QAC7B,MAAU,WAAW,GAAG,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,OAAO,CAAC,CAA7D;AAAE,QACE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AAC3C,QAAG,IAAI,WAAW,EAAE;AACpB,YAAK,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;AACzE,SAAI;AACJ,KAAE;AAEH;AAAS;AACD;AAAoB;AAC5B,IADE,mBAAmB,GAArB;AAAG,QACC,OAAO,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,KAAK,KAAK,GAAG,KAAK,GAAG,KAAK,CAAC;AACjE,KAAE;AAEH;AAAS;AACD;AAA4B;AAAoB;AAAS,IAA/D,iBAAiB,CAAC,QAAwC,EAA5D;AAAG,QACC,OAAO,QAAQ,IAAI,QAAQ;AAC9B,YAAO,QAAQ,IAAI,oBAAoB;AACvC,YAAO,QAAQ,IAAI,qBAAqB,CAAC;AACzC,KAAE;AAEH;AAAS;AACD;AAAiB;AAAwB;AAAoB;AAAS,IAApE,8BAA8B,CAAC,GAAzC,GAA0D,IAAI,CAAC,mBAAmB,EAAE,EAApF;AAAG,QACC,IAAI,IAAI,CAAC,cAAc,GAAG,CAAC,EAAE;AAChC,YAAK,IAAI,CAAC,SAAS,GAAG,GAAG,IAAI,KAAK,GAAG,MAAM,GAAG,OAAO,CAAC;AACtD,SAAI;AAAE,aAAI,IAAI,IAAI,CAAC,cAAc,GAAG,CAAC,EAAE;AACvC,YAAK,IAAI,CAAC,SAAS,GAAG,GAAG,IAAI,KAAK,GAAG,OAAO,GAAG,MAAM,CAAC;AACtD,SAAI;AAAE,aAAI;AACV,YAAK,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;AAC/B,SAAI;AACJ,KAAE;AAEH;AACG;AACG;AAEH;AAAiB;AAAoB;AAAS,IAAvC,0BAA0B,GAApC;AAAG;AAA0B,QAC7B,MAAU,GAAG,GAAG,IAAI,CAAC,mBAAmB,EAAE,CAA1C;AAAE,QAEE,IAAI,CAAC,GAAG,IAAI,KAAK,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,MAAM,GAAG,IAAI,KAAK,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE;AAChF,YAAK,OAAO,oBAAoB,CAAC;AACjC,SAAI;AAEL,QAAI,OAAO,qBAAqB,CAAC;AAChC,KAAE;AACF;qCAzID,EAAA,IAAA,EAAC,SAAS,EAAV,IAAA,EAAA,CAAW,mHAET,QAAQ,EAAE,uCAAuC,eAClD,EAAD,EAAA;2ZACE;AAAE;AAAoB;AACG,IA5F3B,EAAA,IAAA,EAAE,UAAU,EAAZ;AAAG,IAYH,EAAA,IAAA,EAAQ,cAAc,EAAtB,UAAA,EAAA,CAAA,EAAA,IAAA,EA+He,QAAQ,EA/HvB,CAAA,EAAA;AAAG,IAnBH,EAAA,IAAA,EAAE,iBAAiB,EAAnB;AAAE;AAAI;AAGJ,IA8GF,YAAA,EAAA,CAAA,EAAA,IAAA,EAAG,MAAM,EAAT,CAAA;AAAG,IAGH,gBAAA,EAAA,CAAA,EAAA,IAAA,EAAG,MAAM,EAAT,CAAA;AAAG,IAGH,mBAAA,EAAA,CAAA,EAAA,IAAA,EAAG,MAAM,EAAT,CAAA;AAAG,IAGH,WAAA,EAAA,CAAA,EAAA,IAAA,EAAG,MAAM,EAAT,CAAA;AAAG,IAMH,QAAA,EAAA,CAAA,EAAA,IAAA,EAAG,KAAK,EAAR,IAAA,EAAA,CAAS,SAAS,EAAlB,EAAA,CAAA;AAAG,IAGH,MAAA,EAAA,CAAA,EAAA,IAAA,EAAG,KAAK,EAAR,CAAA;AAAG,IAKH,iBAAA,EAAA,CAAA,EAAA,IAAA,EAAG,KAAK,EAAR,CAAA;AAAG,IAGH,QAAA,EAAA,CAAA,EAAA,IAAA,EAAG,KAAK,EAAR,CAAA;AAAE;;;;;;;;;;;;;;;;;;;;;;;;;;oBAAE;AAAE;AACN;AACI;AAAmB;AA4GvB,MAAa,UAAW,SAAQ,eAAe,CAA/C;AAAG;AAAS;AAA8B;AAC3B;AAAqC;AAAS,IAE3D,WAAF,CAAc,UAAmC,EACvB,GAAmB,EAC/B,iBAAoC,EAFlD;AAAG,QAGC,KAAK,CAAC,UAAU,EAAE,GAAG,EAAE,iBAAiB,CAAC,CAAC;AAC7C,KAAE;AACF;gCApBD,EAAA,IAAA,EAAC,SAAS,EAAV,IAAA,EAAA,CAAW,CAAX,QAAA,EAAA,cAAA,mBACE,QAAQ,EAAE;;wBAAZ,mBACE,MAAF,EAAU;AAAV;;kFAAA,CAAA;YACE,aAAa,EAAf,iBAAA,CAAA,IAAA,mBACE,eAAF,EAAA,uBAAA,CAAA,MAAA,mBACE,UAAF,EAAA,CAAe,iBAAf,CAAA,YAAA,CAAA,mBACE,IAAF,EAAA,uBACA,OAAA,EAAe,cAAf;kBACA,eACA,EAAA,EAAA,IACA;;;;;;0QAAA;AAAE;AAEa;AACb;AAA2B;AAErB,IArPR,EAAA,IAAA,EAAE,iBAAF,EAAA;AAAE,CAYF,CAAA;AAnBA,UAAA,CAAA,cAAA,GAAA;AAAG;AAOA;;;;;;;;;;;;;;;;;oBAAE;AAAE;AAAE;AACT;AAEU;AAML;AAAK;AAAK;AACgC;AACtC;ACgBT,IAAI,MAAM,GAAG,CAAC,CAAd;AAAE;AAAK;AAEgD;AACvD,MAAa,iBAAiB,CAA9B;AAAG,CAKF;AAED;AAAK;AACuC;AAEzC;AAOH,MAAa,eAAe,GAAG,IAAI,cAAc,CAAgB,iBAAiB,CAAC,CAAnF;AAAE;AAAoD;AAAK;AAAmB;AAI9E,MAAM,oBAAoB,CAA1B;AAAG;AAAS;AACE;AAAS,IAArB,WAAF,CAAqB,WAAuB,EAA5C;AAAG,QAAkB,IAArB,CAAA,WAAgC,GAAX,WAAW,CAAY;AAAE,KAAE;AAC/C,CAAA;AACA;AAAD,MAAM,qBAAqB,GACvB,UAAU,CAAC,kBAAkB,CAAC,oBAAoB,CAAC,EAAE,SAAS,CAAC,CADnE;AAAE;AAAK;AAAgE;AAAmB;AACnF;AAAK;AAgBZ,MAAsB,gBAAiB,SAAQ,qBAAqB,CAApE;AAAG;AAAS;AAA8B;AAAsC;AAChE;AAAmC;AAAS,IA0E1D,WAAF,CAAc,UAAsB,EACd,kBAAqC,EACR,aAA6B,EAChB,cAAuB,EAHvF;AAAG,QAIC,KAAK,CAAC,UAAU,CAAC,CAAC;AACrB,QAJqB,IAAtB,CAAA,kBAAwC,GAAlB,kBAAkB,CAAmB;AAC3D,QACgE,IAAhE,CAAA,cAA8E,GAAd,cAAc,CAAS;AAAE;AAC9E;AAEiC;AAAa,QA1E/C,IAAV,CAAA,cAAwB,GAAkB,CAAC,CAAC;AAE5C;AAAa;AACG;AAAa,QAAnB,IAAV,CAAA,qBAA+B,GAAW,CAAC,CAAC;AAE5C;AAAa;AACG;AAAa,QAAnB,IAAV,CAAA,iBAA2B,GAAG,YAAY,CAAC,KAAK,CAAC;AAEjD;AAAa;AACG;AAAa,QAAnB,IAAV,CAAA,qBAA+B,GAAG,YAAY,CAAC,KAAK,CAAC;AAErD,QAIU,IAAV,CAAA,cAAwB,GAAY,KAAK,CAAC;AAE1C,QAMU,IAAV,CAAA,cAAwB,GAAkB,IAAI,CAAC;AAE/C;AAAa;AACG;AAAa,QAAlB,IAAX,CAAA,cAAyB,GAAyB,OAAO,CAAC;AAE1D;AAAa;AAAgF;AACpF,QAwBY,IAArB,CAAA,mBAAwC,GAAyB,IAAI,YAAY,EAAU,CAAC;AAE5F;AAAa;AACG;AAAa,QAAR,IAArB,CAAA,WAAgC,GAC1B,IAAI,YAAY,EAAqB,CAAC;AAE5C;AAAa;AACG;AAAa,QAAR,IAArB,CAAA,aAAkC,GAAuB,IAAI,YAAY,EAAQ,CAAC;AAElF;AAAa;AACG;AAAa,QAAR,IAArB,CAAA,iBAAsC,GAChC,IAAI,YAAY,CAAoB,IAAI,CAAC,CAAC;AAEhD,QAOI,IAAI,CAAC,QAAQ,GAAG,MAAM,EAAE,CAAC;AAC5B,QAAG,IAAI,CAAC,iBAAiB,GAAG,aAAa,IAAI,aAAa,CAAC,iBAAiB;AAC5E,YAAO,aAAa,CAAC,iBAAiB,GAAG,OAAO,CAAC;AACjD,KAAE;AAEH;AACG;AAAyE;AAChE;AAAS,IApEnB,IACI,aAAa,GADnB,EACiC,OAAO,IAAI,CAAC,cAAc,CAAC,EAAE;AAC7D;AAAS;AAAyB;AAAoB;AAAS,IAA9D,IAAI,aAAa,CAAC,KAAc,EAAlC,EAAsC,IAAI,CAAC,cAAc,GAAG,qBAAqB,CAAC,KAAK,CAAC,CAAC,EAAE;AAC1F;AAAS;AAEP;AAAoB;AAAS,IAC9B,IACI,aAAa,GADnB,EACuC,OAAO,IAAI,CAAC,cAAc,CAAC,EAAE;AACnE;AAAS;AAAyB;AACxB;AAAS,IADlB,IAAI,aAAa,CAAC,KAAoB,EAAxC;AAAG,QACC,IAAI,CAAC,cAAc,GAAG,oBAAoB,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;AAC3D,KAAE;AACF;AAAS;AAGU;AAAoB;AAAS,IAG/C,IACI,iBAAiB,GADvB,EACoC,OAAO,IAAI,CAAC,kBAAkB,CAAC,EAAE;AACpE;AAAS;AAAyB;AACrB;AAAS,IADrB,IAAI,iBAAiB,CAAC,KAAa,EAArC;AAAG,QACC,IAAI,CAAC,kBAAkB,GAAG,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,KAAK,GAAG,IAAI,GAAG,KAAK,CAAC;AACxE,KAAE;AACF;AAAS;AAEI;AAAoB;AAAS,IACzC,IACI,eAAe,GADrB,EACwC,OAAO,IAAI,CAAC,gBAAgB,CAAC,EAAE;AACtE;AAAS;AAAyB;AACzB;AAAS,IADjB,IAAI,eAAe,CAAC,KAAmB,EAAzC;AAAG;AAA0B,QAC7B,MAAU,aAAa,GAAgB,IAAI,CAAC,WAAW,CAAC,aAAa,CAArE;AAAE,QAEE,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC,CAAnC,eAAA,EAAqD,IAAI,CAAC,eAAe,CAAzE,CAA2E,CAAC,CAAC;AAE7E,QAAI,IAAI,KAAK,EAAE;AACd,YAAK,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,CAAlC,eAAA,EAAoD,KAAK,CAAzD,CAA2D,CAAC,CAAC;AAC5D,SAAI;AAEL,QAAI,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;AACjC,KAAE;AACF;AAAS;AAE4C;AACkB;AAGhE;AACM;AAAoB;AAAS,IA2BzC,qBAAqB,GAAvB;AAAG;AACqE;AACZ;AACjD,QAAX,MAAU,aAAa,GAAG,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,cAAc,CAAC,CAAxF;AAAE;AAEI;AAA6D,QAE/D,IAAI,IAAI,CAAC,cAAc,IAAI,aAAa,EAAE;AAC7C;AAA8B,YAA/B,MAAY,UAAU,GAAG,IAAI,CAAC,cAAc,IAAI,IAAI,CAApD;AAAE,YAEI,IAAI,CAAC,UAAU,EAAE;AACtB,gBAAO,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,aAAa,CAAC,CAAC,CAAC;AAC3E,aAAM;AAEP;AACO;AACO,YAAR,OAAO,CAAC,OAAO,EAAE,CAAC,IAAI;AAAO;AACT;AAAiB,YADd,MAA7B;AAAG,gBACK,IAAI,CAAC,KAAK,CAAC,OAAO;AAAO;AAAmC;AAEhD;AACK;AAAqB,gBAHnB,CAAC,GAAG,EAAE,KAAK,KAAK,GAAG,CAAC,QAAQ,GAAG,KAAK,KAAK,aAAa,EAAC,CAAC;AAEnF,gBAAQ,IAAI,CAAC,UAAU,EAAE;AACxB,oBAAS,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;AACtD,iBAAQ;AACR,aAAM,EAAC,CAAC;AACR,SAAI;AAEL;AACK,QAAD,IAAI,CAAC,KAAK,CAAC,OAAO;AAAO;AAA2B;AAC5B;AAErB;AAAa,QAHG,CAAC,GAAW,EAAE,KAAa,KAAlD;AAAG,YACG,GAAG,CAAC,QAAQ,GAAG,KAAK,GAAG,aAAa,CAAC;AAE3C;AACO;AACO,YAAR,IAAI,IAAI,CAAC,cAAc,IAAI,IAAI,IAAI,GAAG,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE;AAC1E,gBAAO,GAAG,CAAC,MAAM,GAAG,aAAa,GAAG,IAAI,CAAC,cAAc,CAAC;AACxD,aAAM;AACN,SAAI,EAAC,CAAC;AAEP,QAAI,IAAI,IAAI,CAAC,cAAc,KAAK,aAAa,EAAE;AAC9C,YAAK,IAAI,CAAC,cAAc,GAAG,aAAa,CAAC;AACzC,YAAK,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;AAC5C,SAAI;AACJ,KAAE;AAEH;AAAS;AACL;AAAS,IADX,kBAAkB,GAApB;AAAG,QACC,IAAI,CAAC,qBAAqB,EAAE,CAAC;AAEjC;AACK;AACK,QAAN,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS;AAAO;AAC1C;AAAa,QADuB,MAA1D;AAAG;AAA8B,YACjC,MAAY,aAAa,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,cAAc,CAAC,CAApE;AAAE;AAE+B;AACjC,YACM,IAAI,aAAa,KAAK,IAAI,CAAC,cAAc,EAAE;AAChD;AAAkC,gBAAnC,MAAc,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAzC;AAAE,gBAEM,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC7C,oBAAS,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE;AAC/B;AACa;AACa;AACa,wBAA5B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;AACzD,wBAAW,MAAM;AACjB,qBAAU;AACV,iBAAQ;AACR,aAAM;AAEP,YAAM,IAAI,CAAC,qBAAqB,EAAE,CAAC;AAClC,YAAK,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;AAC5C,SAAI,EAAC,CAAC;AACN,KAAE;AAEH;AAAS;AACE;AAAS,IADlB,WAAW,GAAb;AAAG,QACC,IAAI,CAAC,iBAAiB,CAAC,WAAW,EAAE,CAAC;AACxC,QAAG,IAAI,CAAC,qBAAqB,CAAC,WAAW,EAAE,CAAC;AAC5C,KAAE;AAEH;AAAS;AACD;AACA;AAAS,IADf,aAAa,GAAf;AAAG,QACC,IAAI,IAAI,CAAC,UAAU,EAAE;AACxB,YAAK,IAAI,CAAC,UAAU,CAAC,yBAAyB,EAAE,CAAC;AACjD,SAAI;AACJ,KAAE;AAEH;AAAS;AACR;AAAoB;AAAS,IAD5B,aAAa,CAAC,KAAa,EAA7B;AAAG,QACC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC;AACzD,KAAE;AAEH;AAAS;AAAiB;AAAyB;AAC7C;AAAS,IADL,kBAAkB,CAAC,KAAa,EAA1C;AAAG;AAA0B,QAC7B,MAAU,KAAK,GAAG,IAAI,iBAAiB,CAAvC;AAAE,QACE,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC;AACvB,QAAG,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;AACxC,YAAK,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,KAAK,CAAC,CAAC;AAC7C,SAAI;AACJ,QAAG,OAAO,KAAK,CAAC;AAChB,KAAE;AAEH;AACG;AACI;AACG;AACG;AAEH;AAAiB;AAChB;AAAS,IADV,qBAAqB,GAA/B;AAAG,QACC,IAAI,IAAI,CAAC,qBAAqB,EAAE;AACnC,YAAK,IAAI,CAAC,qBAAqB,CAAC,WAAW,EAAE,CAAC;AAC9C,SAAI;AAEL,QAAI,IAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG;AAAO;AACzD;AAAwB;AAAa,QADc,GAAG,IAAI,GAAG,CAAC,aAAa,EAAC,CAAC;AAClF,aAAM,SAAS;AAAO;AAAwB;AAAa,QAA3C,MAAM,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,EAAC,CAAC;AAC9D,KAAE;AAEH;AAAS;AACD;AAAiB;AAAyB;AACrC;AAAS,IADZ,cAAc,CAAC,KAAoB,EAA7C;AAAG;AACyB;AACG;AAC7B,QACE,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACnE,KAAE;AAEH;AAAS;AACD;AAAqB;AAClB;AAAS,IADlB,cAAc,CAAC,CAAS,EAA1B;AAAG,QACC,OAAO,CAAX,cAAA,EAA4B,IAAI,CAAC,QAAQ,CAAzC,CAAA,EAA6C,CAAC,CAA9C,CAAgD,CAAC;AAChD,KAAE;AAEH;AAAS;AACD;AAAqB;AACpB;AAAS,IADhB,gBAAgB,CAAC,CAAS,EAA5B;AAAG,QACC,OAAO,CAAX,gBAAA,EAA8B,IAAI,CAAC,QAAQ,CAA3C,CAAA,EAA+C,CAAC,CAAhD,CAAkD,CAAC;AAClD,KAAE;AAEH;AACG;AACG;AAEH;AAA6B;AAAoB;AAC7C,IADL,wBAAwB,CAAC,SAAiB,EAA5C;AAAG,QACC,IAAI,CAAC,IAAI,CAAC,cAAc,IAAI,CAAC,IAAI,CAAC,qBAAqB,EAAE;AAAG,YAAD,OAAO;AAAE,SAAA;AAExE;AAA0B,QAA1B,MAAU,OAAO,GAAgB,IAAI,CAAC,eAAe,CAAC,aAAa,CAAnE;AAAE,QAEE,OAAO,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;AAE7D;AACK;AACK,QAAN,IAAI,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,YAAY,EAAE;AACxD,YAAK,OAAO,CAAC,KAAK,CAAC,MAAM,GAAG,SAAS,GAAG,IAAI,CAAC;AAC7C,SAAI;AACJ,KAAE;AAEH;AAAS;AACD;AAAoB;AAAS,IAAnC,2BAA2B,GAA7B;AAAG;AAA0B,QAC7B,MAAU,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC,aAAa,CAAtD;AAAE,QACE,IAAI,CAAC,qBAAqB,GAAG,OAAO,CAAC,YAAY,CAAC;AACrD,QAAG,OAAO,CAAC,KAAK,CAAC,MAAM,GAAG,EAAE,CAAC;AAC7B,QAAG,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;AAC7B,KAAE;AAEH;AAAS;AACD;AAAuB;AAA6B;AACtD;AACL;AAAS,IAFR,YAAY,CAAC,GAAW,EAAE,SAAgC,EAAE,KAAa,EAA3E;AAAG,QACC,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE;AACtB,YAAK,IAAI,CAAC,aAAa,GAAG,SAAS,CAAC,UAAU,GAAG,KAAK,CAAC;AACvD,SAAI;AACJ,KAAE;AAEH;AAAS;AACD;AAAuB;AAAuB;AACtC;AACf,IAFC,YAAY,CAAC,GAAW,EAAE,GAAW,EAAvC;AAAG,QACC,IAAI,GAAG,CAAC,QAAQ,EAAE;AACrB,YAAK,OAAO,IAAI,CAAC;AACjB,SAAI;AACJ,QAAG,OAAO,IAAI,CAAC,aAAa,KAAK,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;AAC9C,KAAE;AACF;sCAzQD,EAAA,IAAA,EAAC,SAAS,EAAV,IAAA,EAAA,CAAW,mHAET,QAAQ,EAAE,wCAAwC,eACnD,EAAD,EAAA;4gBACE;AAAE;AAAoB;AACI,IAxE5B,EAAA,IAAA,EAAE,UAAU,EAAZ;AAAG,IAHH,EAAA,IAAA,EAAE,iBAAiB,EAAnB;AAAG,IAwJH,EAAA,IAAA,EAAA,SAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAe,MAAM,EAArB,IAAA,EAAA,CAAsB,eAAe,EAArC,EAAA,EAAA,EAAA,IAAA,EAAwC,QAAQ,EAAhD,CAAA,EAAA;AAAG,IACH,EAAA,IAAA,EAAA,MAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAe,QAAQ,EAAvB,EAAA,EAAA,IAAA,EAA2B,MAAM,EAAjC,IAAA,EAAA,CAAkC,qBAAqB,EAAvD,EAAA,CAAA,EAAA;AAAE;AAAI;AAAqC,IA3D3C,aAAA,EAAA,CAAA,EAAA,IAAA,EAAG,KAAK,EAAR,CAAA;AAAG,IAMH,aAAA,EAAA,CAAA,EAAA,IAAA,EAAG,KAAK,EAAR,CAAA;AAAG,IAQH,cAAA,EAAA,CAAA,EAAA,IAAA,EAAG,KAAK,EAAR,CAAA;AAAG,IAGH,iBAAA,EAAA,CAAA,EAAA,IAAA,EAAG,KAAK,EAAR,CAAA;AAAG,IAQH,eAAA,EAAA,CAAA,EAAA,IAAA,EAAG,KAAK,EAAR,CAAA;AAAG,IAgBH,mBAAA,EAAA,CAAA,EAAA,IAAA,EAAG,MAAM,EAAT,CAAA;AAAG,IAGH,WAAA,EAAA,CAAA,EAAA,IAAA,EAAG,MAAM,EAAT,CAAA;AAAG,IAIH,aAAA,EAAA,CAAA,EAAA,IAAA,EAAG,MAAM,EAAT,CAAA;AAAG,IAGH,iBAAA,EAAA,CAAA,EAAA,IAAA,EAAG,MAAM,EAAT,CAAA;AAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAAE;AAAE;AAAK;AACuB;AAIjB;AACmB;AA8MpC,MAAa,WAAY,SAAQ,gBAAgB,CAAjD;AAAG;AAAS;AAA8B;AACf;AACnB;AAAkC;AAAS,IAGjD,WAAF,CAAc,UAAsB,EACtB,iBAAoC,EACC,aAA6B,EACvB,aAAsB,EAH/E;AAAG,QAIC,KAAK,CAAC,UAAU,EAAE,iBAAiB,EAAE,aAAa,EAAE,aAAa,CAAC,CAAC;AACtE,KAAE;AACF;iCA1BD,EAAA,IAAA,EAAC,SAAS,EAAV,IAAA,EAAA,CAAW,CAAX,QAAA,EAAA,eAAA,mBACE,QAAQ,EAAE,aAAZ,mBACE,QAAQ,EAAE;;;;;;;;;;;;;;;skBAAZ,mBACE,MAAF,EAAU,CAAV;;;;;;;;;;;;;;;kCAAA,CAAA;KACE,aAAa,EAAf,iBAAA,CAAA,IAAA,mBACE,eAAF,EAAA,uBAAA,CAAA,MAAA,mBACE,MAAF,EAAA,CAAA,OAAA,EAAA,eAAmC,CAAnC,mBACE,IAAF,EAAA,uBACA,OAAA,EAAA,eAAA,uBACM,sCAAN,EAAA,eAAA,uBACI,uCAAJ,EAAA,4BAAA,oBACA,gBACA,EAAA,EAAA,IACA,kyCAAA;AAAE;AAEY;AACd;AAA2B;AACnB,IApWR,EAAA,IAAA,EAAE,SAAF,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,CAAA,eAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,QAAA,EAAA,CAAA,EAAA;AAAG,IAHH,EAAA,IAAA,EAAE,MAAF,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,CAAA,qBAAA,EAAA,EAAA,CAAA,EAAA;AAAE,CA4WF,CAAA;AACA,WAAA,CAAA,cAAA,GAAA;AAAG;AAA0D;AACQ,IARrE,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,SAAA,EAAA,IAAA,EAAA,CAAA,WAAA,EAAA,EAAA,MAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA;AAAE,CACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAAA;AAAE;AAAE;AAAK;AAAmC;AAGtC;AAAK;AACqB;AAAK;AACjC;AC3WJ,MAAM,sBAAsB,CAA5B;AAAG,CAA4B;AAC9B;AAAD,MAAM,4BAA4B,GAC9B,aAAa,CAAC,sBAAsB,CAAC,CADzC;AAAE;AAAK;AAA4D;AAClE;AAcD,MAAa,kBAAmB,SAAQ,4BAA4B,CAApE;AAAG;AAAS;AAA8B;AAAS,IACjD,WAAF,CAAqB,UAAsB,EAA3C;AAAG,QACC,KAAK,EAAE,CAAC;AACX,QAFoB,IAArB,CAAA,UAA+B,GAAV,UAAU,CAAY;AAAE,KAE1C;AAEH;AAAS;AACD;AACE;AAAS,IADjB,KAAK,GAAP;AAAG,QACC,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;AACzC,KAAE;AAEH;AAAS;AACR;AAAS,IADR,aAAa,GAAf;AAAG,QACC,OAAO,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,UAAU,CAAC;AACnD,KAAE;AAEH;AAAS;AACT;AAAS,IADP,cAAc,GAAhB;AAAG,QACC,OAAO,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,WAAW,CAAC;AACpD,KAAE;AACF;wCAzBD,EAAA,IAAA,EAAC,SAAS,EAAV,IAAA,EAAA,CAAW,mBACT,QAAQ,EAAE,sBAAsB,mBAChC,MAAM,EAAE,CAAC;EAAU,CAAC,mBACpB,IAAI,EAAE,uBACJ,0BAA0B,EAAE,UAAU,uBACtC,sBAAsB,EAAE,YAAY,oBACrC,eACF,EAAD,EAAA;;;4FACE;AAAE;AAAoB;AAA6C,IAtBrE,EAAA,IAAA,EAAmB,UAAU,EAA7B;AAAE;;;;;;;;;;;2EAAE;AAAE;AAAE;AAAK;AAAmC;AAInB;AAAK;AAAK;AAE/B;AAAc;ACoBtB,MAAM,2BAA2B,sBAC7B,+BAA+B,CAAC,EAAC,OAAO,EAAE,IAAI,EAAC,CAAC,EAAwB,CAD5E;AAAE;AAAK;AAC8D;AAG3B;AAAc;AAUxD,MAAM,sBAAsB,GAAG,EAAE,CAAjC;AAAE;AAAK;AAG+C;AACM;AAAc;AAE1E,MAAM,mBAAmB,GAAG,GAAG,CAA/B;AAAE;AAAK;AAGqB;AACb;AAAc;AAE7B,MAAM,sBAAsB,GAAG,GAAG,CAAlC;AAAE;AAAK;AAEsB;AACxB;AAAc;AAUnB,MAAsB,qBAAqB,CAA3C;AAAG;AAAS;AAA+B;AAAsC;AAC5D;AACL;AAA2B;AAC3B;AAAmC;AAAS,IAgE1D,WAAF,CAAwB,WAAoC,EACpC,kBAAqC,EACvC,cAA6B,EACjB,IAAoB,EAChC,OAAe,EAKf,SAAoB,EACsB,cAAuB,EAVvF;AAAG,QAAqB,IAAxB,CAAA,WAAmC,GAAX,WAAW,CAAyB;AAC5D,QAAwB,IAAxB,CAAA,kBAA0C,GAAlB,kBAAkB,CAAmB;AAC7D,QAAsB,IAAtB,CAAA,cAAoC,GAAd,cAAc,CAAe;AACnD,QAAkC,IAAlC,CAAA,IAAsC,GAAJ,IAAI,CAAgB;AACtD,QAAsB,IAAtB,CAAA,OAA6B,GAAP,OAAO,CAAQ;AACrC,QAIsB,IAAtB,CAAA,SAA+B,GAAT,SAAS,CAAW;AAC1C,QAAgE,IAAhE,CAAA,cAA8E,GAAd,cAAc,CAAS;AAAE;AAE/E;AACP;AAAa,QAtEN,IAAV,CAAA,eAAyB,GAAG,CAAC,CAAC;AAE9B;AAAa;AACG;AAAa,QAAnB,IAAV,CAAA,qBAA+B,GAAG,KAAK,CAAC;AAExC;AAAa;AACG;AAAa,QAAR,IAArB,CAAA,UAA+B,GAAG,IAAI,OAAO,EAAQ,CAAC;AAEtD;AAAa;AACG;AAAa,QAA3B,IAAF,CAAA,uBAAyB,GAAG,KAAK,CAAC;AAElC;AAAa;AACG;AAAa,QAA3B,IAAF,CAAA,mBAAqB,GAAG,IAAI,CAAC;AAE7B;AAAa;AACG;AAAa,QAA3B,IAAF,CAAA,oBAAsB,GAAG,IAAI,CAAC;AAE9B;AACO;AAA2D;AAAa,QAerE,IAAV,CAAA,cAAwB,GAAG,IAAI,OAAO,EAAQ,CAAC;AAE/C,QAcU,IAAV,CAAA,cAAwB,GAAW,CAAC,CAAC;AAErC;AAAa;AACG;AAAa,QAAlB,IAAX,CAAA,kBAA6B,GAAyB,IAAI,YAAY,EAAU,CAAC;AAEjF;AAAa;AACG;AAAa,QAAlB,IAAX,CAAA,YAAuB,GAAyB,IAAI,YAAY,EAAU,CAAC;AAE3E;AACuC,QAYnC,OAAO,CAAC,iBAAiB;AAAO;AACd;AAAa,QADL,MAA9B;AAAG,YACG,SAAS,CAAC,WAAW,CAAC,aAAa,EAAE,YAAY,CAAC;AACvD,iBAAQ,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AACxC,iBAAQ,SAAS;AAAO;AACC;AACf,YAFQ,MAAnB;AAAG,gBACO,IAAI,CAAC,aAAa,EAAE,CAAC;AAC9B,aAAQ,EAAC,CAAC;AACV,SAAI,EAAC,CAAC;AACN,KAAE;AAEH;AAAS;AAAqC;AAAoB;AAC5D,IA5CJ,IAAI,aAAa,GAAnB,EAAgC,OAAO,IAAI,CAAC,cAAc,CAAC,EAAE;AAC5D;AAAS;AAAyB;AACjB;AAAS,IADzB,IAAI,aAAa,CAAC,KAAa,EAAjC;AAAG,QACC,KAAK,GAAG,oBAAoB,CAAC,KAAK,CAAC,CAAC;AAExC,QAAI,IAAI,IAAI,CAAC,cAAc,IAAI,KAAK,EAAE;AACrC,YAAK,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;AACvC,YAAK,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;AAElC,YAAM,IAAI,IAAI,CAAC,WAAW,EAAE;AAC3B,gBAAO,IAAI,CAAC,WAAW,CAAC,qBAAqB,CAAC,KAAK,CAAC,CAAC;AACrD,aAAM;AACN,SAAI;AACJ,KAAE;AACF;AAAS;AAAoB;AAE9B,IA+BE,eAAe,GAAjB;AAAG;AACgF,QAC/E,SAAS,CAAC,IAAI,CAAC,kBAAkB,CAAC,aAAa,EAAE,YAAY,EAAE,2BAA2B,CAAC;AAC9F,aAAM,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AACtC,aAAM,SAAS;AAAO;AACD;AAAa,QADlB,MAAjB;AAAG,YACK,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,CAAC;AAC5C,SAAM,EAAC,CAAC;AAET,QAAI,SAAS,CAAC,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,YAAY,EAAE,2BAA2B,CAAC;AAC1F,aAAM,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AACtC,aAAM,SAAS;AAAO;AACD;AAAa,QADlB,MAAjB;AAAG,YACK,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAAC,CAAC;AAC3C,SAAM,EAAC,CAAC;AACR,KAAE;AAEH;AAAS;AACL;AAAS,IADX,kBAAkB,GAApB;AAAG;AACC,QAAJ,MAAU,SAAS,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAGA,EAAY,CAAC,IAAI,CAAC,CAAvE;AAAE;AAA0B,QAC5B,MAAU,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,GAAG,CAAC,CAAlD;AAAE;AAA0B,QAC5B,MAAU,OAAO;AAAS;AACJ;AAClB,QAFgB,MAApB;AAAG,YACG,IAAI,CAAC,gBAAgB,EAAE,CAAC;AAC7B,YAAK,IAAI,CAAC,yBAAyB,EAAE,CAAC;AACtC,SAAI,CAAA,CAAL;AAAE,QAEE,IAAI,CAAC,WAAW,GAAG,IAAI,eAAe,CAA4B,IAAI,CAAC,MAAM,CAAC;AACjF,aAAM,yBAAyB,CAAC,IAAI,CAAC,mBAAmB,EAAE,CAAC;AAC3D,aAAM,QAAQ,EAAE,CAAC;AAElB,QAAI,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;AAEzC;AACK;AACK,QAAN,OAAO,qBAAqB,KAAK,WAAW,GAAG,qBAAqB,CAAC,OAAO,CAAC,GAAG,OAAO,EAAE,CAAC;AAE9F;AACK;AACK,QAAN,KAAK,CAAC,SAAS,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,SAAS;AAAO;AAE9F;AAAa,QAF2E,MAA7F;AAAG,YACG,OAAO,EAAE,CAAC;AACf,YAAK,IAAI,CAAC,WAAW,CAAC,yBAAyB,CAAC,IAAI,CAAC,mBAAmB,EAAE,CAAC,CAAC;AAC5E,SAAI,EAAC,CAAC;AAEP;AACK;AACK;AACK,QAAX,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,SAAS;AAAO;AACrD;AACrB;AAAa,QAFuD,aAAa,IAApF;AAAG,YACG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;AAC3C,YAAK,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC;AACtC,SAAI,EAAC,CAAC;AACN,KAAE;AAEH;AAAS;AAAoB;AACzB,IADF,qBAAqB,GAAvB;AAAG;AACyD,QACxD,IAAI,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;AAClD,YAAK,IAAI,CAAC,gBAAgB,EAAE,CAAC;AAC7B,YAAK,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;AAC9C,YAAK,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;AAC5C,SAAI;AAEL;AACK;AACK,QAAN,IAAI,IAAI,CAAC,qBAAqB,EAAE;AACnC,YAAK,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;AAC9C,YAAK,IAAI,CAAC,uBAAuB,EAAE,CAAC;AACpC,YAAK,IAAI,CAAC,yBAAyB,EAAE,CAAC;AACtC,YAAK,IAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC;AACxC,YAAK,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;AAC5C,SAAI;AAEL;AACK;AACK,QAAN,IAAI,IAAI,CAAC,sBAAsB,EAAE;AACpC,YAAK,IAAI,CAAC,wBAAwB,EAAE,CAAC;AACrC,YAAK,IAAI,CAAC,sBAAsB,GAAG,KAAK,CAAC;AACzC,YAAK,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;AAC5C,SAAI;AACJ,KAAE;AAEH;AAAS;AACE;AAAS,IADlB,WAAW,GAAb;AAAG,QACC,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;AAC1B,QAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;AAC9B,QAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,CAAC;AAClC,KAAE;AAEH;AAAS;AACD;AAAyB;AACrB;AAAS,IADnB,cAAc,CAAC,KAAoB,EAArC;AAAG;AACyB,QACxB,IAAI,cAAc,CAAC,KAAK,CAAC,EAAE;AAC9B,YAAK,OAAO;AACZ,SAAI;AAEL,QAAI,QAAQ,KAAK,CAAC,OAAO;AACxB,YAAK,KAAK,IAAI;AACd,gBAAO,IAAI,CAAC,WAAW,CAAC,kBAAkB,EAAE,CAAC;AAC7C,gBAAO,KAAK,CAAC,cAAc,EAAE,CAAC;AAC9B,gBAAO,MAAM;AACb,YAAK,KAAK,GAAG;AACb,gBAAO,IAAI,CAAC,WAAW,CAAC,iBAAiB,EAAE,CAAC;AAC5C,gBAAO,KAAK,CAAC,cAAc,EAAE,CAAC;AAC9B,gBAAO,MAAM;AACb,YAAK,KAAK,KAAK,CAAC;AAChB,YAAK,KAAK,KAAK;AACf,gBAAO,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AACrD,gBAAO,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;AACjC,gBAAO,MAAM;AACb,YAAK;AACL,gBAAO,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;AACzC,SAAI;AACJ,KAAE;AAEH;AACG;AAEH;AAAoB;AACf,IADH,iBAAiB,GAAnB;AAAG;AACE,QAAL,MAAU,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,WAAW,CAAlE;AAAE;AAE6B;AACE;AACE,QAC/B,IAAI,WAAW,KAAK,IAAI,CAAC,mBAAmB,EAAE;AACjD,YAAK,IAAI,CAAC,mBAAmB,GAAG,WAAW,IAAI,EAAE,CAAC;AAEnD;AACO;AACO,YAAR,IAAI,CAAC,OAAO,CAAC,GAAG;AAAO;AACH;AAChB,YAFa,MAAvB;AAAG,gBACK,IAAI,CAAC,gBAAgB,EAAE,CAAC;AAC/B,gBAAO,IAAI,CAAC,yBAAyB,EAAE,CAAC;AACxC,gBAAO,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;AAC9C,aAAM,EAAC,CAAC;AACR,SAAI;AACJ,KAAE;AAEH;AACG;AAEF;AAAQ;AACG;AAER;AACQ;AACH;AAAS,IADhB,gBAAgB,GAAlB;AAAG,QACC,IAAI,CAAC,uBAAuB,EAAE,CAAC;AAClC,QAAG,IAAI,CAAC,uBAAuB,EAAE,CAAC;AAClC,QAAG,IAAI,CAAC,wBAAwB,EAAE,CAAC;AACnC,KAAE;AAEH;AAAS;AACD;AAAoB;AACpB,IADN,IAAI,UAAU,GAAhB;AAAG,QACC,OAAO,IAAI,CAAC,WAAW,sBAAG,IAAI,CAAC,WAAW,CAAC,eAAe,KAAI,CAAC,CAAC;AACnE,KAAE;AAEH;AAAS;AACD;AAAyB;AACd;AAAS,IAD1B,IAAI,UAAU,CAAC,KAAa,EAA9B;AAAG,QACC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,UAAU,KAAK,KAAK,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;AACrF,YAAK,OAAO;AACZ,SAAI;AAEL,QAAI,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;AACzC,KAAE;AAEH;AACG;AACG;AAEH;AAAyB;AACtB;AAAS,IADb,aAAa,CAAC,KAAa,EAA7B;AAAG,QACC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;AAAG,YAAD,OAAO,IAAI,CAAC;AAAE,SAAA;AAEtC;AAA0B,QAA1B,MAAU,GAAG,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,KAAK,CAAC,GAAG,IAAI,CAAjE;AAAE,QACE,OAAO,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC;AACjC,KAAE;AAEH;AACG;AACG;AAEH;AAA4B;AACf;AAAS,IADvB,YAAY,CAAC,QAAgB,EAA/B;AAAG,QACC,IAAI,IAAI,CAAC,uBAAuB,EAAE;AACrC,YAAK,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;AACnC,SAAI;AAEL,QAAI,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;AAC1C,YAAK,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,QAAQ,CAAC,CAAC,KAAK,EAAE,CAAC;AAE9C;AACO;AACO;AACO;AAA8B,YAAnD,MAAY,WAAW,GAAG,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAA9D;AAAE;AAA8B,YAChC,MAAY,GAAG,GAAG,IAAI,CAAC,mBAAmB,EAAE,CAA5C;AAAE,YAEI,IAAI,GAAG,IAAI,KAAK,EAAE;AACvB,gBAAO,WAAW,CAAC,UAAU,GAAG,CAAC,CAAC;AAClC,aAAM;AAAE,iBAAI;AACZ,gBAAO,WAAW,CAAC,UAAU,GAAG,WAAW,CAAC,WAAW,GAAG,WAAW,CAAC,WAAW,CAAC;AAClF,aAAM;AACN,SAAI;AACJ,KAAE;AAEH;AAAS;AACD;AAAoB;AAC5B,IADE,mBAAmB,GAArB;AAAG,QACC,OAAO,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,KAAK,KAAK,GAAG,KAAK,GAAG,KAAK,CAAC;AACjE,KAAE;AAEH;AAAS;AACD;AAAoB;AACtB,IADJ,wBAAwB,GAA1B;AAAG;AAA0B,QAC7B,MAAU,cAAc,GAAG,IAAI,CAAC,cAAc,CAA9C;AAAE;AAA0B,QAC5B,MAAU,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAnC;AAAE;AAA0B,QAC5B,MAAU,UAAU,GAAG,IAAI,CAAC,mBAAmB,EAAE,KAAK,KAAK,GAAG,CAAC,cAAc,GAAG,cAAc,CAA9F;AAAE;AAEC;AACK;AAA2E;AACzB;AAEnC;AAAyD,QAE5E,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,SAAS,GAAG,CAAlD,WAAA,EAAgE,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAtF,GAAA,CAA2F,CAAC;AAE5F;AACK;AACK;AACK;AACK;AACK,QAArB,IAAI,QAAQ,KAAK,QAAQ,CAAC,OAAO,IAAI,QAAQ,CAAC,IAAI,CAAC,EAAE;AACxD,YAAK,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,UAAU,GAAG,CAAC,CAAC;AACzD,SAAI;AACJ,KAAE;AAEH;AAAS;AACD;AAAoB;AAAS,IAAnC,IAAI,cAAc,GAApB,EAAiC,OAAO,IAAI,CAAC,eAAe,CAAC,EAAE;AAC9D;AAAS;AAAyB;AAClB;AAAS,IADxB,IAAI,cAAc,CAAC,KAAa,EAAlC;AAAG,QACC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;AACzB,KAAE;AAEH;AACG;AACG;AACG;AAEF;AAAQ;AACG;AAEH;AAA6B;AAC1B;AAAS,IADzB,aAAa,CAAC,SAA0B,EAA1C;AAAG;AAA0B,QAC7B,MAAU,UAAU,GAAG,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,WAAW,CAAvE;AAAE;AAEY;AAA0B,QACxC,MAAU,YAAY,GAAG,CAAC,SAAS,IAAI,QAAQ,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,UAAU,GAAG,CAAC,CAA1E;AAAE,QAEE,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,eAAe,GAAG,YAAY,CAAC,CAAC;AAC9D,KAAE;AAEH;AAAS;AACD;AAA6B;AAClC;AAAS,IADV,qBAAqB,CAAC,SAA0B,EAAlD;AAAG,QACC,IAAI,CAAC,aAAa,EAAE,CAAC;AACxB,QAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;AACjC,KAAE;AAEH;AACG;AAEF;AAAQ;AACG;AAEH;AACT;AAAoB;AAAS,IAD3B,cAAc,CAAC,UAAkB,EAAnC;AAAG;AAA0B,QAC7B,MAAU,aAAa,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,UAAU,CAAC,GAAG,IAAI,CAAhF;AAAE,QAEE,IAAI,CAAC,aAAa,EAAE;AAAG,YAAD,OAAO;AAAE,SAAA;AAEnC;AACK;AAA0B,QAA/B,MAAU,UAAU,GAAG,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,WAAW,CAAvE;AAAE,QACF,MAAU,EAAC,UAAU,EAAE,WAAW,EAAC,GAAG,aAAa,CAAC,UAAU,CAAC,aAAa,CAA5E;AAAE;AAA0B,QAE5B,IAAQ,cAAsB,CAA9B;AAAE;AAA0B,QAA5B,IAAgC,aAAqB,CAArD;AAAE,QACE,IAAI,IAAI,CAAC,mBAAmB,EAAE,IAAI,KAAK,EAAE;AAC5C,YAAK,cAAc,GAAG,UAAU,CAAC;AACjC,YAAK,aAAa,GAAG,cAAc,GAAG,WAAW,CAAC;AAClD,SAAI;AAAE,aAAI;AACV,YAAK,aAAa,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,WAAW,GAAG,UAAU,CAAC;AAC1E,YAAK,cAAc,GAAG,aAAa,GAAG,WAAW,CAAC;AAClD,SAAI;AAEL;AAA0B,QAA1B,MAAU,gBAAgB,GAAG,IAAI,CAAC,cAAc,CAAhD;AAAE;AAA0B,QAC5B,MAAU,eAAe,GAAG,IAAI,CAAC,cAAc,GAAG,UAAU,CAA5D;AAAE,QAEE,IAAI,cAAc,GAAG,gBAAgB,EAAE;AAC1C;AACO,YAAF,IAAI,CAAC,cAAc,IAAI,gBAAgB,GAAG,cAAc,GAAG,sBAAsB,CAAC;AACvF,SAAI;AAAE,aAAI,IAAI,aAAa,GAAG,eAAe,EAAE;AAC/C;AACO,YAAF,IAAI,CAAC,cAAc,IAAI,aAAa,GAAG,eAAe,GAAG,sBAAsB,CAAC;AACrF,SAAI;AACJ,KAAE;AAEH;AACG;AACG;AACG;AAEF;AAAQ;AACG;AAEH;AACV;AAAS,IADZ,uBAAuB,GAAzB;AAAG;AAA0B,QAC7B,MAAU,SAAS,GACX,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,WAAW,CAD5F;AAAE,QAGE,IAAI,CAAC,SAAS,EAAE;AACnB,YAAK,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;AAC7B,SAAI;AAEL,QAAI,IAAI,SAAS,KAAK,IAAI,CAAC,uBAAuB,EAAE;AACnD,YAAK,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;AAC5C,SAAI;AAEL,QAAI,IAAI,CAAC,uBAAuB,GAAG,SAAS,CAAC;AAC5C,KAAE;AAEH;AACG;AACG;AACG;AACG;AAEF;AAAQ;AACG;AAEH;AACV;AAAS,IADf,uBAAuB,GAAzB;AAAG;AACkC,QACjC,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,cAAc,IAAI,CAAC,CAAC;AACxD,QAAG,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,qBAAqB,EAAE,CAAC;AAClF,QAAG,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;AAC1C,KAAE;AAEH;AACG;AACG;AAEF;AAAQ;AACG;AAEH;AAAoB;AAC3B,IADH,qBAAqB,GAAvB;AAAG;AAA0B,QAC7B,MAAU,eAAe,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,WAAW,CAAnE;AAAE;AAA0B,QAC5B,MAAU,UAAU,GAAG,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,WAAW,CAAvE;AAAE,QACE,OAAO,CAAC,eAAe,GAAG,UAAU,KAAK,CAAC,CAAC;AAC9C,KAAE;AAEH;AAAS;AACD;AAAoB;AAAS,IAAnC,yBAAyB,GAA3B;AAAG;AAA0B,QAC7B,MAAU,YAAY,GAAG,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM;AACzD,YAAO,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,IAAI,CAAxD;AAAE;AAA0B,QAC5B,MAAU,oBAAoB,GAAG,YAAY,GAAG,YAAY,CAAC,UAAU,CAAC,aAAa,GAAG,IAAI,CAA5F;AAAE,QAEE,IAAI,oBAAoB,EAAE;AAC7B,YAAK,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,oBAAoB,CAAC,CAAC;AACvD,SAAI;AAAE,aAAI;AACV,YAAK,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;AACzB,SAAI;AACJ,KAAE;AAEH;AAAS;AACF;AACA;AAAS,IADd,aAAa,GAAf;AAAG,QACC,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;AAC9B,KAAE;AAEH;AACG;AACG;AACG;AAEC;AAAoB;AAAS,IAArC,qBAAqB,CAAC,SAA0B,EAAlD;AAAG;AAAsC,QAErC,IAAI,CAAC,aAAa,EAAE,CAAC;AAEzB;AACK,QAAD,KAAK,CAAC,mBAAmB,EAAE,sBAAsB,CAAC;AACrD;AACO,aAAD,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;AAClE,aAAM,SAAS;AAAO;AACD;AAAa,QADlB,MAAjB;AAAG,YACH,MAAc,EAAC,iBAAiB,EAAE,QAAQ,EAAC,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAA3E;AAAE;AAAsE,YAGhE,IAAI,QAAQ,KAAK,CAAC,IAAI,QAAQ,IAAI,iBAAiB,EAAE;AAC5D,gBAAS,IAAI,CAAC,aAAa,EAAE,CAAC;AAC9B,aAAQ;AACR,SAAM,EAAC,CAAC;AACR,KAAE;AAEH;AACG;AACG;AAAiB;AACO;AAEA;AAAS,IAA7B,SAAS,CAAC,QAAgB,EAApC;AAAG;AAA0B,QAC7B,MAAU,iBAAiB,GAAG,IAAI,CAAC,qBAAqB,EAAE,CAA1D;AAAE,QACE,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,iBAAiB,EAAE,QAAQ,CAAC,CAAC,CAAC;AAE9E;AACK;AACK,QAAN,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC;AACtC,QAAG,IAAI,CAAC,uBAAuB,EAAE,CAAC;AAEnC,QAAI,OAAO,EAAC,iBAAiB,EAAE,QAAQ,EAAE,IAAI,CAAC,eAAe,EAAC,CAAC;AAC9D,KAAE;AACF;2CA7eD,EAAA,IAAA,EAAC,SAAS,EAAV,IAAA,EAAA,CAAW,mHAET,QAAQ,EAAE,8CAA8C,eACzD,EAAD,EAAA;sJACE;AAAE;AAAoB;AAAgD,IA/DxE,EAAA,IAAA,EAAE,UAAU,EAAZ;AAAG,IADH,EAAA,IAAA,EAAE,iBAAiB,EAAnB;AAAG,IAeH,EAAA,IAAA,EAAQ,aAAa,EAArB;AAAG,IAFH,EAAA,IAAA,EAAmB,cAAc,EAAjC,UAAA,EAAA,CAAA,EAAA,IAAA,EAyHe,QAAQ,EAzHvB,CAAA,EAAA;AAAG,IAXH,EAAA,IAAA,EAAE,MAAM,EAAR;AAAG,IAkBH,EAAA,IAAA,EAAQ,QAAQ,EAAhB;AAAG,IAyHH,EAAA,IAAA,EAAA,MAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAe,QAAQ,EAAvB,EAAA,EAAA,IAAA,EAA2B,MAAM,EAAjC,IAAA,EAAA,CAAkC,qBAAqB,EAAvD,EAAA,CAAA,EAAA;AAAE;;;;;;;;;;;;;;kCAAE;AAAE;AAAE;AAAK;AAAmC;AAE0B;AAAK;AAAK;AAEzE;AAAmB;AAAc;AAAK;AC7GjD,MAAsB,iBAAkB,SAAQ,qBAAqB,CAArE;AAAG;AAAS;AAA8B;AAAqC;AAChD;AAAuB;AAE3C;AAA4B;AAEhC;AAAS,IAId,WAAF,CAAc,UAAsB,EACtB,iBAAoC,EACpC,aAA4B,EAChB,GAAmB,EAC/B,MAAc,EACd,QAAkB;AAC9B;AAA+E,IACxB,aAAsB,EAA/E;AAAG,QACC,KAAK,CAAC,UAAU,EAAE,iBAAiB,EAAE,aAAa,EAAE,GAAG,EAAE,MAAM,EAAE,QAAQ,EAAE,aAAa,CAAC,CAAC;AAC7F,QAXS,IAAV,CAAA,cAAwB,GAAY,KAAK,CAAC;AAE1C,KASG;AAEH;AAAS;AACI;AAEZ;AAGE,IAtBD,IACI,aAAa,GADnB,EACwB,OAAO,IAAI,CAAC,cAAc,CAAC,EAAE;AACpD;AAAS;AAAyB;AAAoB;AAAS,IAA9D,IAAI,aAAa,CAAC,KAAU,EAA9B,EAAkC,IAAI,CAAC,cAAc,GAAG,qBAAqB,CAAC,KAAK,CAAC,CAAC,EAAE;AACtF;AAAS;AAAmB;AAEnB;AAAoB;AAC7B,IAUW,aAAa,CAAC,KAAoB,EAA9C;AAAG,QACC,KAAK,CAAC,cAAc,EAAE,CAAC;AAC1B,KAAE;AACF;uCA5BD,EAAA,IAAA,EAAC,SAAS,EAAV,IAAA,EAAA,CAAW,mHAET,QAAQ,EAAE,yCAAyC,eACpD,EAAD,EAAA;oOACE;AAAE;AAAoB;AACK,IA5B7B,EAAA,IAAA,EAAE,UAAU,EAAZ;AAAG,IAHH,EAAA,IAAA,EAAE,iBAAiB,EAAnB;AAAG,IALH,EAAA,IAAA,EAAQ,aAAa,EAArB;AAAG,IADH,EAAA,IAAA,EAAQ,cAAc,EAAtB,UAAA,EAAA,CAAA,EAAA,IAAA,EAiDe,QAAQ,EAjDvB,CAAA,EAAA;AAAG,IAUH,EAAA,IAAA,EAAE,MAAM,EAAR;AAAG,IAeH,EAAA,IAAA,EAAQ,QAAQ,EAAhB;AAAG,IA4BH,EAAA,IAAA,EAAA,MAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAe,QAAQ,EAAvB,EAAA,EAAA,IAAA,EAA2B,MAAM,EAAjC,IAAA,EAAA,CAAkC,qBAAqB,EAAvD,EAAA,CAAA,EAAA;AAAE;AAAI;AAAsC,IAZ5C,aAAA,EAAA,CAAA,EAAA,IAAA,EAAG,KAAK,EAAR,CAAA;AAAE;;;;;;;;;;;;;;;;oBAAE;AAAE;AACN;AAC2C;AAGrC;AAEG;AACN;AAAmB;AAmCtB,MAAa,YAAa,SAAQ,iBAAiB,CAAnD;AAAG;AAAS;AAA8B;AACjB;AAAiC;AACvD;AAA0B;AAA4B;AAC1B;AAAS,IAKtC,WAAF,CAAc,UAAsB,EACtB,iBAAoC,EACpC,aAA4B,EAChB,GAAmB,EAC/B,MAAc,EACd,QAAkB;AAC9B;AAA+E,IACxB,aAAsB,EAA/E;AAAG,QACC,KAAK,CAAC,UAAU,EAAE,iBAAiB,EAAE,aAAa,EAAE,GAAG,EAAE,MAAM,EAAE,QAAQ,EAAE,aAAa,CAAC,CAAC;AAC7F,KAAE;AACF;kCAjCD,EAAA,IAAA,EAAC,SAAS,EAAV,IAAA,EAAA,CAAW,CAAX,QAAA,EAAA,gBAAA,mBACE,QAAQ,EAAE;;;;;;;;;;;;;;;;;+BAAZ,mBACE,MAAF,EAAU,CAAV;;;;;;;;;;;;;;;;;;;;;oGAAA,CAAA,mBACE,MAAF,EAAA,CAAA,eAAA,CAAA,mBACE,OAAF,EAAW,CAAX,oBAAA,EAAA,cAAA,CAAA,mBACE,aAAF,EAAA,iBAAA,CAAA,IAAA,mBACE,eAAF,EAAA,uBAAA,CAAA,MAAiD,mBAC/C,IAAF,EAAA;mBACA,OAAA,EAAA;IAAA,uBACM;;4BAAN,EAAA,yBAAA,uBACI;cAAJ,EAAA,gCAAA,oBACA,gBACA,EAAA,EAAA,IACA;;;;;;ysFAAA;AAAE;AAEY;AAAuC;AAC3B;AAAkC,IA5E5D,EAAA,IAAA,EAAE,aAAF,EAAA;AAAG,IAHH,EAAA,IAAA,EAAE,cAAF,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,QAAA,EAAA,CAAA,EAAA;AAAG,IALH,EAAA,IAAA,EAAQ,MAAR,EAAA;AAAG,IADH,EAAA,IAAA,EAAQ,QAAR,EAAA;AAAG,IAUH,EAAA,IAAA,EAAE,MAAM,EAAR,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,CAAA,qBAAA,EAAA,EAAA,CAAA,EAAA;AAAE,CAeF,CAAA;AA0EA,YAAA,CAAA,cAAA,GAAA;AAAG;AAAuE;AACR,IAflE,iBAAG,EAAH,CAAA,EAAA,IAAA,EAAA,SAAA,EAAA,IAAA,EAAA,CAAA,kBAAA,EAAA,EAAA,MAAA,EAAA,IAAA,EAAA,EAAA,EAAA,CAAA;AAAG,IACH,QAAA,EAAA,CAAA,EAAA,IAAA,EAAA,SAAA,EAAA,IAAA,EAAa,CAAb,SAAA,EAAA,EAAA,MAAA,EAAA,IAAA,EAAA,EAAA,EAAA,CAAA;AAAG,IACH,cAAA,EAAA,CAAA,EAAA,IAAA,EAAA,SAAA,EAAA,IAAA,EAAA,CAAA,eAAA,EAAA,EAAA,MAAkC,EAAlC,KAAA,EAAA,EAAA,EAAA,CAA+C;AAAG,IAClD,kBAAA,EAAA,CAAA,EAAA,IAAA,EAAA,SAAA,EAAA,IAAA,EAAsB,CAAtB,mBAAA,EAAA,EAAA,MAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA;AAAE,CACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAAA;AAAE;AAAE;AAAK;AAAmC;AAC8B;AAAK;AAAK;AAG7E;AAAmB;AAAc;AAAK;AC1C7C,MAAsB,cAAe,SAAQ,qBAAqB,CAAlE;AAAG;AAAS;AAA8B;AAAuB;AAA0B;AAC9D;AAEA;AAA6B;AAC1B;AAAS,IA0BvC,WAAF,CAAc,UAAsB,EACV,GAAmB,EAC/B,MAAc,EACd,iBAAoC,EACpC,aAA4B;AACxC;AAAS;AACkE;AAAS,IAE5D,QAAmB,EACY,aAAsB,EAD/E;AAAG,QAEC,KAAK,CAAC,UAAU,EAAE,iBAAiB,EAAE,aAAa,EAAE,GAAG,EAAE,MAAM,EAAE,QAAQ,EAAE,aAAa,CAAC,CAAC;AAC7F,QAhBS,IAAV,CAAA,cAAwB,GAAY,KAAK,CAAC;AAE1C;AAAa;AACG;AAAa,QAAlB,IAAX,CAAA,KAAgB,GAAiB,SAAS,CAAC;AAE3C,KAWG;AAEH;AAAS;AAIN;AAAoB;AAChB,IAzCL,IACI,eAAe,GADrB,EACwC,OAAO,IAAI,CAAC,gBAAgB,CAAC,EAAE;AACtE;AAAS;AAAyB;AACzB;AAAS,IADjB,IAAI,eAAe,CAAC,KAAmB,EAAzC;AAAG;AAA0B,QAC7B,MAAU,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,SAAS,CAA9D;AAAE,QACE,SAAS,CAAC,MAAM,CAAC,CAArB,eAAA,EAAuC,IAAI,CAAC,eAAe,CAA3D,CAA6D,CAAC,CAAC;AAE/D,QAAI,IAAI,KAAK,EAAE;AACd,YAAK,SAAS,CAAC,GAAG,CAAC,CAApB,eAAA,EAAsC,KAAK,CAA3C,CAA6C,CAAC,CAAC;AAC9C,SAAI;AAEL,QAAI,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;AACjC,KAAE;AACF;AAAS;AAEW;AAAoB;AAAS,IAChD,IACI,aAAa,GADnB,EACwB,OAAO,IAAI,CAAC,cAAc,CAAC,EAAE;AACpD;AAAS;AAAyB;AAAoB;AAAS,IAA9D,IAAI,aAAa,CAAC,KAAU,EAA9B,EAAkC,IAAI,CAAC,cAAc,GAAG,qBAAqB,CAAC,KAAK,CAAC,CAAC,EAAE;AACtF;AAAS;AAAmB;AAExB;AAAS,IAgBF,aAAa,GAAzB;AAAG;AAAiB,KAEjB;AAEH;AAAS;AACL;AAAS,IADX,kBAAkB,GAApB;AAAG;AACsE;AACC,QACtE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,SAAS;AAAO;AACpE;AAClB,QAFgF,MAApF;AAAG,YACG,IAAI,CAAC,gBAAgB,EAAE,CAAC;AAC7B,SAAI,EAAC,CAAC;AAEP,QAAI,KAAK,CAAC,kBAAkB,EAAE,CAAC;AAC9B,KAAE;AAEH;AACG;AACG;AAEF;AAA6B;AACxB;AAAS,IADhB,gBAAgB,CAAC,QAAqB,EAAxC;AAAG,QACC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;AACrB,YAAK,OAAO;AACZ,SAAI;AAEL;AAA0B,QAA1B,MAAU,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAvC;AAAE,QAEE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC1C,YAAK,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE;AAC1B,gBAAO,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;AAC9B,gBAAO,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;AAC9C,gBAAO,OAAO;AACd,aAAM;AACN,SAAI;AAEL;AACK,QAAD,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC,CAAC;AAC3B,QAAG,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;AACvB,KAAE;AACF;oCArFD,EAAA,IAAA,EAAC,SAAS,EAAV,IAAA,EAAA,CAAW,mHAET,QAAQ,EAAE,sCAAsC,eACjD,EAAD,EAAA;+QACE;AAAE;AAAoB;AACE,IAxC1B,EAAA,IAAA,EAAE,UAAU,EAAZ;AAAG,IAZH,EAAA,IAAA,EAAQ,cAAc,EAAtB,UAAA,EAAA,CAAA,EAAA,IAAA,EAmFe,QAAQ,EAnFvB,CAAA,EAAA;AAAG,IAgBH,EAAA,IAAA,EAAE,MAAM,EAAR;AAAG,IARH,EAAA,IAAA,EAAE,iBAAiB,EAAnB;AAAG,IANH,EAAA,IAAA,EAAQ,aAAa,EAArB;AAAG,IADH,EAAA,IAAA,EAAQ,QAAQ,EAAhB,UAAA,EAAA,CAAA,EAAA,IAAA,EAyFe,QAAQ,EAzFvB,CAAA,EAAA;AAAG,IA0FH,EAAA,IAAA,EAAA,MAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAe,QAAQ,EAAvB,EAAA,EAAA,IAAA,EAA2B,MAAM,EAAjC,IAAA,EAAA,CAAkC,qBAAqB,EAAvD,EAAA,CAAA,EAAA;AAAE;AAAI;AAAmC,IAhCzC,eAAA,EAAA,CAAA,EAAA,IAAA,EAAG,KAAK,EAAR,CAAA;AAAG,IAeH,aAAA,EAAA,CAAA,EAAA,IAAA,EAAG,KAAK,EAAR,CAAA;AAAG,IAMH,KAAA,EAAA,CAAA,EAAA,IAAA,EAAG,KAAK,EAAR,CAAA;AAAE;;;;;;;;;;;;;;;;;;;;;;oBAAE;AAAE;AAAK;AAEyB;AAE7B;AAyEP,MAAa,SAAU,SAAQ,cAAc,CAA7C;AAAG;AAAS;AAA8B;AACzB;AAA0B;AAAqC;AACpE;AAA6B;AAC1B;AAAS,IAKtB,WAAF,CAAc,UAAsB,EACpB,GAAmB,EAC/B,MAAc,EACd,iBAAoC,EACpC,aAA4B;AAC9B;AACC;AACC;AACC,IAAW,QAAmB,EACY,aAAsB,EADrE;AAAG,QAEC,KAAK,CAAC,UAAU,EAAE,GAAG,EAAE,MAAM,EAAE,iBAAiB,EAAE,aAAa,EAAE,QAAQ,EAAE,aAAa,CAAC,CAAC;AAC7F,KAAE;AACF;+BAtCD,EAAA,IAAA,EAAC,SAAS,EAAV,IAAA,EAAA,CAAW,CAAX,QAAA,EAAA,mBAAA,mBACE,QAAQ,EAAE,yBAAZ,mBACE,MAAF,EAAU,CAAV,OAAA,CAAA,mBACE,QAAQ,EAAE;;;;;;;;;;;;;;;;;+CAAZ,mBACE,MAAM,EAAE,CAAC;;;;;;;;;;;;;;;;;;;;;8KAAX,CAAA,mBACE,IAAF,EAAA,uBACA,OAAa,EAAb,gCAAA,uBACM,oDAAN,EAAA;aAAA,uBACI;wBAAJ,EAAA;;OAAA,uBACI,qBAAJ,EAAA;CAAA,uBACI,oBAAJ,EAAA,oBAAA,uBACI;YAAJ,EAAA;EAAA,oBACA,mBACA,aAAA,EAAA,iBAAA,CAAA,IAAA;MACA,eAAA,EAAA,uBAAA,CAAA,MAAA,gBACA,EAAA,EAAA,IACA;o0FAAA;AAAE;AAAoB;AAElB;AAA2B;AACiB,IAlJhD,EAAA,IAAA,EAAE,MAAF,EAAA;AAAG,IAZH,EAAA,IAAA,EAAQ,iBAAR,EAAA;AAAG,IAgBH,EAAA,IAAA,EAAE,aAAF,EAAA;AAAG,IARH,EAAA,IAAA,EAAE,QAAF,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,QAAA,EAAA,CAAA,EAAA;AAAG,IANH,EAAA,IAAA,EAAQ,MAAR,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,CAAA,qBAAA,EAAA,EAAA,CAAA,EAAA;AAAE,CADF,CAAA;AA6KA,SAAA,CAAA,cAAA,GAAA;AAAG;AAA8D;AACzC;AAAqB;AAIrC;AAEJ,IAvBJ,iBAAmC,EAAnC,CAAA,EAAA,IAAA,EAA8C,SAA9C,EAAA,IAAA,EAA6D,CAA7D,kBAAA,EAAA,EAAA,MAAA,EAAA,IAAA,EAAA,EAAA,EAAA,CAAA;AAAG,IACH,QAAA,EAAA,CAAA,EAAA,IAAA,EAAA,SAAA,EAAA,IAAA,EAAa,CAAb,SAAA,EAAA,EAAA,MAAA,EAAA,IAAA,EAAA,EAAA,EAAA,CAAA;AAAG,IACH,cAAA,EAAA,CAAA,EAAA,IAAA,EAAA,SAAA,EAAA,IAAA,EAAA,CAAA,eAAA,EAAA,EAAA,MAAkC,EAAlC,KAAA,EAAA,EAAA,EAAA,CAA+C;AAAG,IAClD,kBAAA,EAAA,CAAA,EAAA,IAAA,EAAA,SAAA,EAAA,IAAA,EAAsB,CAAtB,mBAAA,EAAA,EAAA,MAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA;AAAE,CACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAAA;AACA;AAAmD;AAA6B;AAAG;AAiBnF,MAAA,oBAAA,GAAA,aAAA,CAAA,kBAAA,CAAA,aAAA,CAAA,mBAAA,CAAA,CAAA,CAAA,CAAA;AAAE;AAAK;AAEE;AAAK;AAAwC;AACrC;AAAS;AAA8B;AAElD;AAAuC;AAClC;AACoB;AAAkC;AAAS;AAIvE;AAAkB,QAiCrB,IAAA,CAAA,UAAA,GACwC,UADxC,CAAA;AAAE,QAKE,IAAJ,CAAS,UAAT,GAAA,UAAA,CAAA;AAAE,QAJY,IAAd,CAAA,aAAc,GAAd,aAAA,CAAA;AAAE;AAAa;AAAmD;AAC5D;AAAiC;AAAwD,QA/BnF,IAAZ,CAAA,QAAA,GAAA,QAAA,CAAA,QAAA,CAAA,IAAA,CAAA,CAAA;AAAE,QAoCE,IAAI,aAAa,KAArB,gBAAA,EAAA;AAAG,YACK,IAAR,CAAA,YAAA,CAAA,SAAA,GAAsC,EAAtC,aAAA,EAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,CAAA;AAAE,SAEF;AAAE,QACF,aAAA,CAAA,OAAuB,CAAC,UAAxB,CAAA,CAAoC;AAAE,KACtC;AAAE;AAEE;AACH;AAGG;AAAS;AAGH;AACT;AAAyB;AAAoB;AAAS;AAM3C;AAEF,YAtDV,IAAA,CAAA,SAAA,GAAA,KAAA,CAAA;AAAE,YACM,IAAR,CAAa,UAAU,CAAvB,gBAAA,CAAA,IAAA,CAAA,UAAA,CAAA,CAAA;AAAE,SACF;AAAE,KACF;AAAE;AAAS;AAEV;AAGY;AAAoB;AAAS;AAA4B;AACH,YAUnE,CAAA,CAAA,IAAA,CAAA,YAAA,CAAA,QAAA,CAAA;AAAE,KACF;AAAE;AAAS;AAAoB;AAAS;AAAe;AACnC,KAoBpB;AAAE;AAAS;AACQ;AAAS;AAG3B;AAC2C,KAD5C;AAAE,CACF;CACA,eAAA,CAAA,UAAA,GAAA,oJA7DA,QAAA,EAAA,uCAAA,uBAEA;gNAAA;AAAE;AAAoB;AAEb;AACR;AAA2B,IAkC5B,EAAA,IAAA,EAA0B,SAA1B,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,CAAA,yBAAA,EAAA,EAAA,CAAA,EAAA;AAAG,IArNH,EAAA,IAAA,EAAE,MAAF,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,SAAA,EAAA,IAAA,EAAA,CAAA,UAAA,EAAA,EAAA,CAAA,EAAA;AAAG,IAsNH,EAAA,IAAA,EAAA,YAAA,EAAA;AAAG,IACH,EAAA,IAAA,EAAA,MAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAO,QAAP,EAAA,EAAA,EAAA,IAAiB,EAAjB,MAAA,EAA2B,IAA3B,EAAA,CAAA,qBAAA,EAAA,EAAA,CAAA,EAAA;AAAE,CA9LF,CAAA;AA+LA,eAAA,CAAA,cAAA,GAAA;AAAG;AAA+B;;;;;;;;;;;;;;;;;;;;;;oBAAE;AADpC;AAAK;AAAwC;AAAK;AACxC;AAAS;AAA6B;AAC7C;AAEY;AAA4B;AACZ;AAElB;AAAgC;AACZ;AAAS;AAOhB;AAKvB,QAwBH,IAAA,CAAA,cAC0B,GAD1B,IAAA,cAAA,CAAA,IAAA,EAEsB,MAFtB,EAAA,UAAA,EAAA,QAAA,CAAA,CAAA;AAAE,QAME,IAAJ,CAAS,cAAT,CAAA,kBAAA,CAAA,UAAA,CAAsD,aAAtD,CAAA,CAAA;AAAE,KACF;AAAE;AAAS;AAAoB;AAAS;AAAqB;AACpD,QAGT,IAAA,CAAA,cAAA,CAAA,oBAAA,EAAA,CAAA;AAAE,KACF;AAAE,CACF;CACA,UAAA,CAAA,UAAA,GAAA,+GA/BA,QAAA,EAAA,YAAA,mBACE,MAAF,EAAU,CAAV,UAAA,EAAA,eAAA,EAAA,UAAA,CAAA,mBACE,IAAF,EAAA,uBACA,OAAA,EAAA,cAAA,uBACM,qBAAN,EAAA,wBAAA,uBACI,sBAAJ,EAAA,UAAA;IACI,iBAAJ,EAAA,UAAA,uBACI,0BAAJ,EAAA,UAAA,uBACI,8BAAJ,EAAA,QAAA,oBACA,eACA,EAAA,EAAA,IACA;;;4KAAA;AAAE;AAEa;AAAqC;AAC7C;AAA2B,IAIlC,EAAA,IAAA,EAAe,MAAf,EAAA;AAAG,IApQH,EAAA,IAAA,EAAE,QAAF,EAAY;AACX,IAGD,EAAA,IAAA,EAAE,SAAF,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,CAAA,yBAAA,EAAA,EAAA,CAAA,EAAA;AAAG,IAfH,EAAA,IAAA,EAAQ,MAAR,EAAgB,UAAhB,EAAA,CAAA,EAAA,IAAA,EAAA,SAAA,EAAA,IAAA,EAAA,CAAA,UAAA,EAAA,EAAA,CAAA,EAAA;AAAG,IAiRH,EAAA,IAAA,EAAA,YAAA,EAAA;AAAG,IACH,EAAA,IAAA,EAAA,MAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAK,QAAL,EAAA,EAAA,EAAA,IAAe,EAAf,MAAA,EAAyB,IAAzB,EAAA,CAAA,qBAAA,EAAA,EAAA,CAAA,EAAA;AAAE,CA9OF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAAA;AAAE;AAAE;AAAK;AAAmC;AAEvB;ACqBrB,MAAa,aAAa,CAA1B;AAAG;mCAzCH,EAAA,IAAA,EAAC,QAAQ,EAAT,IAAA,EAAA,CAAU,mBACR,OAAO,EAAE;gBACP,YAAY,uBACZ,eAAe;kBACf,YAAY,uBACZ;SAAe;MACf,eAAe;eACf,UAAU;mBACX;;;;iBAED,OAAO,EAAE,uBACP,eAAe,uBACf,WAAW,uBACX,WAAW,uBACX,MAAM,uBACN,SAAS,uBACT,UAAU,uBACV,aAAa,oBACd,mBACD,YAAY,EAAE,uBACZ,WAAW,uBACX,WAAW,uBACX,MAAM,uBACN,SAAS;gBACT;SAAkB;UAClB,SAAS;iBACT;EAAU,uBACV,UAAU,uBACV,gBAAgB,uBAChB,YAAY,uBACZ,aAAa;;;;cAGb;QAAqB;kBACrB,gBAAgB;;OAChB,cAAc;4BACd;MAAe;kBACf;gBAAiB,4CACjB,eAAe;KAChB,gBACF,EAAD,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BACE;AAAE;AAAE;AAAK;AACK;AAAsH;AAAK;AAAE;AAAK;AAAmC;AAAsH;AAAK;AAAE;AAAK;AAAmC;AAAsH;AAAK;AAAE;AAA6Z","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, ElementRef, Inject, InjectionToken, NgZone, Optional} from '@angular/core';\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\n\n\n/**\n * Interface for a a MatInkBar positioner method, defining the positioning and width of the ink\n * bar in a set of tabs.\n */\n// tslint:disable-next-line class-name Using leading underscore to denote internal interface.\nexport interface _MatInkBarPositioner {\n  (element: HTMLElement): { left: string, width: string };\n}\n\n/** Injection token for the MatInkBar's Positioner. */\nexport const _MAT_INK_BAR_POSITIONER =\n  new InjectionToken<_MatInkBarPositioner>('MatInkBarPositioner', {\n    providedIn: 'root',\n    factory: _MAT_INK_BAR_POSITIONER_FACTORY\n  });\n\n/**\n * The default positioner function for the MatInkBar.\n * @docs-private\n */\nexport function _MAT_INK_BAR_POSITIONER_FACTORY(): _MatInkBarPositioner {\n  const method = (element: HTMLElement) => ({\n    left: element ? (element.offsetLeft || 0) + 'px' : '0',\n    width: element ? (element.offsetWidth || 0) + 'px' : '0',\n  });\n\n  return method;\n}\n\n/**\n * The ink-bar is used to display and animate the line underneath the current active tab label.\n * @docs-private\n */\n@Directive({\n  selector: 'mat-ink-bar',\n  host: {\n    'class': 'mat-ink-bar',\n    '[class._mat-animation-noopable]': `_animationMode === 'NoopAnimations'`,\n  },\n})\nexport class MatInkBar {\n  constructor(\n    private _elementRef: ElementRef<HTMLElement>,\n    private _ngZone: NgZone,\n    @Inject(_MAT_INK_BAR_POSITIONER) private _inkBarPositioner: _MatInkBarPositioner,\n    @Optional() @Inject(ANIMATION_MODULE_TYPE) public _animationMode?: string) { }\n\n  /**\n   * Calculates the styles from the provided element in order to align the ink-bar to that element.\n   * Shows the ink bar if previously set as hidden.\n   * @param element\n   */\n  alignToElement(element: HTMLElement) {\n    this.show();\n\n    if (typeof requestAnimationFrame !== 'undefined') {\n      this._ngZone.runOutsideAngular(() => {\n        requestAnimationFrame(() => this._setStyles(element));\n      });\n    } else {\n      this._setStyles(element);\n    }\n  }\n\n  /** Shows the ink bar. */\n  show(): void {\n    this._elementRef.nativeElement.style.visibility = 'visible';\n  }\n\n  /** Hides the ink bar. */\n  hide(): void {\n    this._elementRef.nativeElement.style.visibility = 'hidden';\n  }\n\n  /**\n   * Sets the proper styles to the ink bar element.\n   * @param element\n   */\n  private _setStyles(element: HTMLElement) {\n    const positions = this._inkBarPositioner(element);\n    const inkBar: HTMLElement = this._elementRef.nativeElement;\n\n    inkBar.style.left = positions.left;\n    inkBar.style.width = positions.width;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, TemplateRef} from '@angular/core';\n\n/** Decorates the `ng-template` tags and reads out the template from it. */\n@Directive({selector: '[matTabContent]'})\nexport class MatTabContent {\n  constructor(public template: TemplateRef<any>) { }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive} from '@angular/core';\nimport {CdkPortal} from '@angular/cdk/portal';\n\n/** Used to flag tab labels for use with the portal directive */\n@Directive({\n  selector: '[mat-tab-label], [matTabLabel]',\n})\nexport class MatTabLabel extends CdkPortal {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {TemplatePortal} from '@angular/cdk/portal';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ContentChild,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild,\n  ViewContainerRef,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {CanDisable, CanDisableCtor, mixinDisabled} from '@angular/material/core';\nimport {Subject} from 'rxjs';\nimport {MatTabContent} from './tab-content';\nimport {MatTabLabel} from './tab-label';\n\n\n// Boilerplate for applying mixins to MatTab.\n/** @docs-private */\nclass MatTabBase {}\nconst _MatTabMixinBase: CanDisableCtor & typeof MatTabBase =\n    mixinDisabled(MatTabBase);\n\n@Component({\n  moduleId: module.id,\n  selector: 'mat-tab',\n  templateUrl: 'tab.html',\n  inputs: ['disabled'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'matTab',\n})\nexport class MatTab extends _MatTabMixinBase implements OnInit, CanDisable, OnChanges, OnDestroy {\n  /** Content for the tab label given by `<ng-template mat-tab-label>`. */\n  @ContentChild(MatTabLabel, {static: false}) templateLabel: MatTabLabel;\n\n  /**\n   * Template provided in the tab content that will be used if present, used to enable lazy-loading\n   */\n  @ContentChild(MatTabContent, {read: TemplateRef, static: true})\n  _explicitContent: TemplateRef<any>;\n\n  /** Template inside the MatTab view that contains an `<ng-content>`. */\n  @ViewChild(TemplateRef, {static: true}) _implicitContent: TemplateRef<any>;\n\n  /** Plain text label for the tab, used when there is no template label. */\n  @Input('label') textLabel: string = '';\n\n  /** Aria label for the tab. */\n  @Input('aria-label') ariaLabel: string;\n\n  /**\n   * Reference to the element that the tab is labelled by.\n   * Will be cleared if `aria-label` is set at the same time.\n   */\n  @Input('aria-labelledby') ariaLabelledby: string;\n\n  /** Portal that will be the hosted content of the tab */\n  private _contentPortal: TemplatePortal | null = null;\n\n  /** @docs-private */\n  get content(): TemplatePortal | null {\n    return this._contentPortal;\n  }\n\n  /** Emits whenever the internal state of the tab changes. */\n  readonly _stateChanges = new Subject<void>();\n\n  /**\n   * The relatively indexed position where 0 represents the center, negative is left, and positive\n   * represents the right.\n   */\n  position: number | null = null;\n\n  /**\n   * The initial relatively index origin of the tab if it was created and selected after there\n   * was already a selected tab. Provides context of what position the tab should originate from.\n   */\n  origin: number | null = null;\n\n  /**\n   * Whether the tab is currently active.\n   */\n  isActive = false;\n\n  constructor(private _viewContainerRef: ViewContainerRef) {\n    super();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.hasOwnProperty('textLabel') || changes.hasOwnProperty('disabled')) {\n      this._stateChanges.next();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._stateChanges.complete();\n  }\n\n  ngOnInit(): void {\n    this._contentPortal = new TemplatePortal(\n        this._explicitContent || this._implicitContent, this._viewContainerRef);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n  AnimationTriggerMetadata,\n} from '@angular/animations';\n\n/**\n * Animations used by the Material tabs.\n * @docs-private\n */\nexport const matTabsAnimations: {\n  readonly translateTab: AnimationTriggerMetadata;\n} = {\n  /** Animation translates a tab along the X axis. */\n  translateTab: trigger('translateTab', [\n    // Note: transitions to `none` instead of 0, because some browsers might blur the content.\n    state('center, void, left-origin-center, right-origin-center', style({transform: 'none'})),\n\n    // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n    // in order to ensure that the element has a height before its state changes. This is\n    // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n    // not have a static height and is not rendered. See related issue: #9465\n    state('left', style({transform: 'translate3d(-100%, 0, 0)', minHeight: '1px'})),\n    state('right', style({transform: 'translate3d(100%, 0, 0)', minHeight: '1px'})),\n\n    transition('* => left, * => right, left => center, right => center',\n        animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')),\n    transition('void => left-origin-center', [\n      style({transform: 'translate3d(-100%, 0, 0)'}),\n      animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n    ]),\n    transition('void => right-origin-center', [\n      style({transform: 'translate3d(100%, 0, 0)'}),\n      animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n    ])\n  ])\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  Component,\n  ChangeDetectorRef,\n  Input,\n  Inject,\n  Output,\n  EventEmitter,\n  OnDestroy,\n  OnInit,\n  ElementRef,\n  Directive,\n  Optional,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  ComponentFactoryResolver,\n  ViewContainerRef,\n  forwardRef,\n  ViewChild,\n} from '@angular/core';\nimport {AnimationEvent} from '@angular/animations';\nimport {TemplatePortal, CdkPortalOutlet, PortalHostDirective} from '@angular/cdk/portal';\nimport {Directionality, Direction} from '@angular/cdk/bidi';\nimport {Subscription, Subject} from 'rxjs';\nimport {matTabsAnimations} from './tabs-animations';\nimport {startWith, distinctUntilChanged} from 'rxjs/operators';\n\n/**\n * These position states are used internally as animation states for the tab body. Setting the\n * position state to left, right, or center will transition the tab body from its current\n * position to its respective state. If there is not current position (void, in the case of a new\n * tab body), then there will be no transition animation to its state.\n *\n * In the case of a new tab body that should immediately be centered with an animating transition,\n * then left-origin-center or right-origin-center can be used, which will use left or right as its\n * psuedo-prior state.\n */\nexport type MatTabBodyPositionState =\n    'left' | 'center' | 'right' | 'left-origin-center' | 'right-origin-center';\n\n/**\n * The origin state is an internally used state that is set on a new tab body indicating if it\n * began to the left or right of the prior selected index. For example, if the selected index was\n * set to 1, and a new tab is created and selected at index 2, then the tab body would have an\n * origin of right because its index was greater than the prior selected index.\n */\nexport type MatTabBodyOriginState = 'left' | 'right';\n\n/**\n * The portal host directive for the contents of the tab.\n * @docs-private\n */\n@Directive({\n  selector: '[matTabBodyHost]'\n})\nexport class MatTabBodyPortal extends CdkPortalOutlet implements OnInit, OnDestroy {\n  /** Subscription to events for when the tab body begins centering. */\n  private _centeringSub = Subscription.EMPTY;\n  /** Subscription to events for when the tab body finishes leaving from center position. */\n  private _leavingSub = Subscription.EMPTY;\n\n  constructor(\n    componentFactoryResolver: ComponentFactoryResolver,\n    viewContainerRef: ViewContainerRef,\n    @Inject(forwardRef(() => MatTabBody)) private _host: MatTabBody) {\n      super(componentFactoryResolver, viewContainerRef);\n  }\n\n  /** Set initial visibility or set up subscription for changing visibility. */\n  ngOnInit(): void {\n    super.ngOnInit();\n\n    this._centeringSub = this._host._beforeCentering\n      .pipe(startWith(this._host._isCenterPosition(this._host._position)))\n      .subscribe((isCentering: boolean) => {\n        if (isCentering && !this.hasAttached()) {\n          this.attach(this._host._content);\n        }\n      });\n\n    this._leavingSub = this._host._afterLeavingCenter.subscribe(() => {\n      this.detach();\n    });\n  }\n\n  /** Clean up centering subscription. */\n  ngOnDestroy(): void {\n    super.ngOnDestroy();\n    this._centeringSub.unsubscribe();\n    this._leavingSub.unsubscribe();\n  }\n}\n\n/**\n * Base class with all of the `MatTabBody` functionality.\n * @docs-private\n */\n@Directive({\n  // TODO(crisbeto): this selector can be removed when we update to Angular 9.0.\n  selector: 'do-not-use-abstract-mat-tab-body-base'\n})\n// tslint:disable-next-line:class-name\nexport abstract class _MatTabBodyBase implements OnInit, OnDestroy {\n  /** Current position of the tab-body in the tab-group. Zero means that the tab is visible. */\n  private _positionIndex: number;\n\n  /** Subscription to the directionality change observable. */\n  private _dirChangeSubscription = Subscription.EMPTY;\n\n  /** Tab body position state. Used by the animation trigger for the current state. */\n  _position: MatTabBodyPositionState;\n\n  /** Emits when an animation on the tab is complete. */\n  _translateTabComplete = new Subject<AnimationEvent>();\n\n  /** Event emitted when the tab begins to animate towards the center as the active tab. */\n  @Output() readonly _onCentering: EventEmitter<number> = new EventEmitter<number>();\n\n  /** Event emitted before the centering of the tab begins. */\n  @Output() readonly _beforeCentering: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  /** Event emitted before the centering of the tab begins. */\n  @Output() readonly _afterLeavingCenter: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  /** Event emitted when the tab completes its animation towards the center. */\n  @Output() readonly _onCentered: EventEmitter<void> = new EventEmitter<void>(true);\n\n   /** The portal host inside of this container into which the tab body content will be loaded. */\n  abstract _portalHost: PortalHostDirective;\n\n  /** The tab body content to display. */\n  @Input('content') _content: TemplatePortal;\n\n  /** Position that will be used when the tab is immediately becoming visible after creation. */\n  @Input() origin: number;\n\n  // Note that the default value will always be overwritten by `MatTabBody`, but we need one\n  // anyway to prevent the animations module from throwing an error if the body is used on its own.\n  /** Duration for the tab's animation. */\n  @Input() animationDuration: string = '500ms';\n\n  /** The shifted index position of the tab body, where zero represents the active center tab. */\n  @Input()\n  set position(position: number) {\n    this._positionIndex = position;\n    this._computePositionAnimationState();\n  }\n\n  constructor(private _elementRef: ElementRef<HTMLElement>,\n              @Optional() private _dir: Directionality,\n              changeDetectorRef: ChangeDetectorRef) {\n\n    if (_dir) {\n      this._dirChangeSubscription = _dir.change.subscribe((dir: Direction) => {\n        this._computePositionAnimationState(dir);\n        changeDetectorRef.markForCheck();\n      });\n    }\n\n    // Ensure that we get unique animation events, because the `.done` callback can get\n    // invoked twice in some browsers. See https://github.com/angular/angular/issues/24084.\n    this._translateTabComplete.pipe(distinctUntilChanged((x, y) => {\n      return x.fromState === y.fromState && x.toState === y.toState;\n    })).subscribe(event => {\n      // If the transition to the center is complete, emit an event.\n      if (this._isCenterPosition(event.toState) && this._isCenterPosition(this._position)) {\n        this._onCentered.emit();\n      }\n\n      if (this._isCenterPosition(event.fromState) && !this._isCenterPosition(this._position)) {\n        this._afterLeavingCenter.emit();\n      }\n    });\n  }\n\n  /**\n   * After initialized, check if the content is centered and has an origin. If so, set the\n   * special position states that transition the tab from the left or right before centering.\n   */\n  ngOnInit() {\n    if (this._position == 'center' && this.origin != null) {\n      this._position = this._computePositionFromOrigin();\n    }\n  }\n\n  ngOnDestroy() {\n    this._dirChangeSubscription.unsubscribe();\n    this._translateTabComplete.complete();\n  }\n\n  _onTranslateTabStarted(event: AnimationEvent): void {\n    const isCentering = this._isCenterPosition(event.toState);\n    this._beforeCentering.emit(isCentering);\n    if (isCentering) {\n      this._onCentering.emit(this._elementRef.nativeElement.clientHeight);\n    }\n  }\n\n  /** The text direction of the containing app. */\n  _getLayoutDirection(): Direction {\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n  }\n\n  /** Whether the provided position state is considered center, regardless of origin. */\n  _isCenterPosition(position: MatTabBodyPositionState|string): boolean {\n    return position == 'center' ||\n        position == 'left-origin-center' ||\n        position == 'right-origin-center';\n  }\n\n  /** Computes the position state that will be used for the tab-body animation trigger. */\n  private _computePositionAnimationState(dir: Direction = this._getLayoutDirection()) {\n    if (this._positionIndex < 0) {\n      this._position = dir == 'ltr' ? 'left' : 'right';\n    } else if (this._positionIndex > 0) {\n      this._position = dir == 'ltr' ? 'right' : 'left';\n    } else {\n      this._position = 'center';\n    }\n  }\n\n  /**\n   * Computes the position state based on the specified origin position. This is used if the\n   * tab is becoming visible immediately after creation.\n   */\n  private _computePositionFromOrigin(): MatTabBodyPositionState {\n    const dir = this._getLayoutDirection();\n\n    if ((dir == 'ltr' && this.origin <= 0) || (dir == 'rtl' && this.origin > 0)) {\n      return 'left-origin-center';\n    }\n\n    return 'right-origin-center';\n  }\n}\n\n/**\n * Wrapper for the contents of a tab.\n * @docs-private\n */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-tab-body',\n  templateUrl: 'tab-body.html',\n  styleUrls: ['tab-body.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [matTabsAnimations.translateTab],\n  host: {\n    'class': 'mat-tab-body',\n  }\n})\nexport class MatTabBody extends _MatTabBodyBase {\n  @ViewChild(PortalHostDirective, {static: false}) _portalHost: PortalHostDirective;\n\n  constructor(elementRef: ElementRef<HTMLElement>,\n              @Optional() dir: Directionality,\n              changeDetectorRef: ChangeDetectorRef) {\n    super(elementRef, dir, changeDetectorRef);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {coerceBooleanProperty, coerceNumberProperty} from '@angular/cdk/coercion';\nimport {\n  AfterContentChecked,\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  Output,\n  QueryList,\n  ViewChild,\n  ViewEncapsulation,\n  Optional,\n  Inject,\n  InjectionToken,\n  Directive,\n} from '@angular/core';\nimport {\n  CanColor,\n  CanColorCtor,\n  CanDisableRipple,\n  CanDisableRippleCtor,\n  mixinColor,\n  mixinDisableRipple,\n  ThemePalette,\n} from '@angular/material/core';\nimport {merge, Subscription} from 'rxjs';\nimport {MatTab} from './tab';\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\n\n\n/** Used to generate unique ID's for each tab component */\nlet nextId = 0;\n\n/** A simple change event emitted on focus or selection changes. */\nexport class MatTabChangeEvent {\n  /** Index of the currently-selected tab. */\n  index: number;\n  /** Reference to the currently-selected tab. */\n  tab: MatTab;\n}\n\n/** Possible positions for the tab header. */\nexport type MatTabHeaderPosition = 'above' | 'below';\n\n/** Object that can be used to configure the default options for the tabs module. */\nexport interface MatTabsConfig {\n  /** Duration for the tab animation. Must be a valid CSS value (e.g. 600ms). */\n  animationDuration?: string;\n}\n\n/** Injection token that can be used to provide the default options the tabs module. */\nexport const MAT_TABS_CONFIG = new InjectionToken<MatTabsConfig>('MAT_TABS_CONFIG');\n\n// Boilerplate for applying mixins to MatTabGroup.\n/** @docs-private */\nclass MatTabGroupMixinBase {\n  constructor(public _elementRef: ElementRef) {}\n}\nconst _MatTabGroupMixinBase: CanColorCtor & CanDisableRippleCtor & typeof MatTabGroupMixinBase =\n    mixinColor(mixinDisableRipple(MatTabGroupMixinBase), 'primary');\n\ninterface MatTabGroupBaseHeader {\n  _alignInkBarToSelectedTab: () => void;\n  focusIndex: number;\n}\n\n/**\n * Base class with all of the `MatTabGroupBase` functionality.\n * @docs-private\n */\n@Directive({\n  // TODO(crisbeto): this selector can be removed when we update to Angular 9.0.\n  selector: 'do-not-use-abstract-mat-tab-group-base'\n})\n// tslint:disable-next-line:class-name\nexport abstract class _MatTabGroupBase extends _MatTabGroupMixinBase implements AfterContentInit,\n    AfterContentChecked, OnDestroy, CanColor, CanDisableRipple {\n  abstract _tabs: QueryList<MatTab>;\n  abstract _tabBodyWrapper: ElementRef;\n  abstract _tabHeader: MatTabGroupBaseHeader;\n\n  /** The tab index that should be selected after the content has been checked. */\n  private _indexToSelect: number | null = 0;\n\n  /** Snapshot of the height of the tab body wrapper before another tab is activated. */\n  private _tabBodyWrapperHeight: number = 0;\n\n  /** Subscription to tabs being added/removed. */\n  private _tabsSubscription = Subscription.EMPTY;\n\n  /** Subscription to changes in the tab labels. */\n  private _tabLabelSubscription = Subscription.EMPTY;\n\n  /** Whether the tab group should grow to the size of the active tab. */\n  @Input()\n  get dynamicHeight(): boolean { return this._dynamicHeight; }\n  set dynamicHeight(value: boolean) { this._dynamicHeight = coerceBooleanProperty(value); }\n  private _dynamicHeight: boolean = false;\n\n  /** The index of the active tab. */\n  @Input()\n  get selectedIndex(): number | null { return this._selectedIndex; }\n  set selectedIndex(value: number | null) {\n    this._indexToSelect = coerceNumberProperty(value, null);\n  }\n  private _selectedIndex: number | null = null;\n\n  /** Position of the tab header. */\n  @Input() headerPosition: MatTabHeaderPosition = 'above';\n\n  /** Duration for the tab animation. Will be normalized to milliseconds if no units are set. */\n  @Input()\n  get animationDuration(): string { return this._animationDuration; }\n  set animationDuration(value: string) {\n    this._animationDuration = /^\\d+$/.test(value) ? value + 'ms' : value;\n  }\n  private _animationDuration: string;\n\n  /** Background color of the tab group. */\n  @Input()\n  get backgroundColor(): ThemePalette { return this._backgroundColor; }\n  set backgroundColor(value: ThemePalette) {\n    const nativeElement: HTMLElement = this._elementRef.nativeElement;\n\n    nativeElement.classList.remove(`mat-background-${this.backgroundColor}`);\n\n    if (value) {\n      nativeElement.classList.add(`mat-background-${value}`);\n    }\n\n    this._backgroundColor = value;\n  }\n  private _backgroundColor: ThemePalette;\n\n  /** Output to enable support for two-way binding on `[(selectedIndex)]` */\n  @Output() readonly selectedIndexChange: EventEmitter<number> = new EventEmitter<number>();\n\n  /** Event emitted when focus has changed within a tab group. */\n  @Output() readonly focusChange: EventEmitter<MatTabChangeEvent> =\n      new EventEmitter<MatTabChangeEvent>();\n\n  /** Event emitted when the body animation has completed */\n  @Output() readonly animationDone: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Event emitted when the tab selection has changed. */\n  @Output() readonly selectedTabChange: EventEmitter<MatTabChangeEvent> =\n      new EventEmitter<MatTabChangeEvent>(true);\n\n  private _groupId: number;\n\n  constructor(elementRef: ElementRef,\n              private _changeDetectorRef: ChangeDetectorRef,\n              @Inject(MAT_TABS_CONFIG) @Optional() defaultConfig?: MatTabsConfig,\n              @Optional() @Inject(ANIMATION_MODULE_TYPE) public _animationMode?: string) {\n    super(elementRef);\n    this._groupId = nextId++;\n    this.animationDuration = defaultConfig && defaultConfig.animationDuration ?\n        defaultConfig.animationDuration : '500ms';\n  }\n\n  /**\n   * After the content is checked, this component knows what tabs have been defined\n   * and what the selected index should be. This is where we can know exactly what position\n   * each tab should be in according to the new selected index, and additionally we know how\n   * a new selected tab should transition in (from the left or right).\n   */\n  ngAfterContentChecked() {\n    // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n    // the amount of tabs changes before the actual change detection runs.\n    const indexToSelect = this._indexToSelect = this._clampTabIndex(this._indexToSelect);\n\n    // If there is a change in selected index, emit a change event. Should not trigger if\n    // the selected index has not yet been initialized.\n    if (this._selectedIndex != indexToSelect) {\n      const isFirstRun = this._selectedIndex == null;\n\n      if (!isFirstRun) {\n        this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));\n      }\n\n      // Changing these values after change detection has run\n      // since the checked content may contain references to them.\n      Promise.resolve().then(() => {\n        this._tabs.forEach((tab, index) => tab.isActive = index === indexToSelect);\n\n        if (!isFirstRun) {\n          this.selectedIndexChange.emit(indexToSelect);\n        }\n      });\n    }\n\n    // Setup the position for each tab and optionally setup an origin on the next selected tab.\n    this._tabs.forEach((tab: MatTab, index: number) => {\n      tab.position = index - indexToSelect;\n\n      // If there is already a selected tab, then set up an origin for the next selected tab\n      // if it doesn't have one already.\n      if (this._selectedIndex != null && tab.position == 0 && !tab.origin) {\n        tab.origin = indexToSelect - this._selectedIndex;\n      }\n    });\n\n    if (this._selectedIndex !== indexToSelect) {\n      this._selectedIndex = indexToSelect;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  ngAfterContentInit() {\n    this._subscribeToTabLabels();\n\n    // Subscribe to changes in the amount of tabs, in order to be\n    // able to re-render the content as new tabs are added or removed.\n    this._tabsSubscription = this._tabs.changes.subscribe(() => {\n      const indexToSelect = this._clampTabIndex(this._indexToSelect);\n\n      // Maintain the previously-selected tab if a new tab is added or removed and there is no\n      // explicit change that selects a different tab.\n      if (indexToSelect === this._selectedIndex) {\n        const tabs = this._tabs.toArray();\n\n        for (let i = 0; i < tabs.length; i++) {\n          if (tabs[i].isActive) {\n            // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n            // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n            // adding a tab within the `selectedIndexChange` event.\n            this._indexToSelect = this._selectedIndex = i;\n            break;\n          }\n        }\n      }\n\n      this._subscribeToTabLabels();\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n\n  ngOnDestroy() {\n    this._tabsSubscription.unsubscribe();\n    this._tabLabelSubscription.unsubscribe();\n  }\n\n  /** Re-aligns the ink bar to the selected tab element. */\n  realignInkBar() {\n    if (this._tabHeader) {\n      this._tabHeader._alignInkBarToSelectedTab();\n    }\n  }\n\n  _focusChanged(index: number) {\n    this.focusChange.emit(this._createChangeEvent(index));\n  }\n\n  private _createChangeEvent(index: number): MatTabChangeEvent {\n    const event = new MatTabChangeEvent;\n    event.index = index;\n    if (this._tabs && this._tabs.length) {\n      event.tab = this._tabs.toArray()[index];\n    }\n    return event;\n  }\n\n  /**\n   * Subscribes to changes in the tab labels. This is needed, because the @Input for the label is\n   * on the MatTab component, whereas the data binding is inside the MatTabGroup. In order for the\n   * binding to be updated, we need to subscribe to changes in it and trigger change detection\n   * manually.\n   */\n  private _subscribeToTabLabels() {\n    if (this._tabLabelSubscription) {\n      this._tabLabelSubscription.unsubscribe();\n    }\n\n    this._tabLabelSubscription = merge(...this._tabs.map(tab => tab._stateChanges))\n      .subscribe(() => this._changeDetectorRef.markForCheck());\n  }\n\n  /** Clamps the given index to the bounds of 0 and the tabs length. */\n  private _clampTabIndex(index: number | null): number {\n    // Note the `|| 0`, which ensures that values like NaN can't get through\n    // and which would otherwise throw the component into an infinite loop\n    // (since Math.max(NaN, 0) === NaN).\n    return Math.min(this._tabs.length - 1, Math.max(index || 0, 0));\n  }\n\n  /** Returns a unique id for each tab label element */\n  _getTabLabelId(i: number): string {\n    return `mat-tab-label-${this._groupId}-${i}`;\n  }\n\n  /** Returns a unique id for each tab content element */\n  _getTabContentId(i: number): string {\n    return `mat-tab-content-${this._groupId}-${i}`;\n  }\n\n  /**\n   * Sets the height of the body wrapper to the height of the activating tab if dynamic\n   * height property is true.\n   */\n  _setTabBodyWrapperHeight(tabHeight: number): void {\n    if (!this._dynamicHeight || !this._tabBodyWrapperHeight) { return; }\n\n    const wrapper: HTMLElement = this._tabBodyWrapper.nativeElement;\n\n    wrapper.style.height = this._tabBodyWrapperHeight + 'px';\n\n    // This conditional forces the browser to paint the height so that\n    // the animation to the new height can have an origin.\n    if (this._tabBodyWrapper.nativeElement.offsetHeight) {\n      wrapper.style.height = tabHeight + 'px';\n    }\n  }\n\n  /** Removes the height of the tab body wrapper. */\n  _removeTabBodyWrapperHeight(): void {\n    const wrapper = this._tabBodyWrapper.nativeElement;\n    this._tabBodyWrapperHeight = wrapper.clientHeight;\n    wrapper.style.height = '';\n    this.animationDone.emit();\n  }\n\n  /** Handle click events, setting new selected index if appropriate. */\n  _handleClick(tab: MatTab, tabHeader: MatTabGroupBaseHeader, index: number) {\n    if (!tab.disabled) {\n      this.selectedIndex = tabHeader.focusIndex = index;\n    }\n  }\n\n  /** Retrieves the tabindex for the tab. */\n  _getTabIndex(tab: MatTab, idx: number): number | null {\n    if (tab.disabled) {\n      return null;\n    }\n    return this.selectedIndex === idx ? 0 : -1;\n  }\n}\n\n/**\n * Material design tab-group component. Supports basic tab pairs (label + content) and includes\n * animated ink-bar, keyboard navigation, and screen reader.\n * See: https://material.io/design/components/tabs.html\n */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-tab-group',\n  exportAs: 'matTabGroup',\n  templateUrl: 'tab-group.html',\n  styleUrls: ['tab-group.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  inputs: ['color', 'disableRipple'],\n  host: {\n    'class': 'mat-tab-group',\n    '[class.mat-tab-group-dynamic-height]': 'dynamicHeight',\n    '[class.mat-tab-group-inverted-header]': 'headerPosition === \"below\"',\n  },\n})\nexport class MatTabGroup extends _MatTabGroupBase {\n  @ContentChildren(MatTab) _tabs: QueryList<MatTab>;\n  @ViewChild('tabBodyWrapper', {static: false}) _tabBodyWrapper: ElementRef;\n  @ViewChild('tabHeader', {static: false}) _tabHeader: MatTabGroupBaseHeader;\n\n  constructor(elementRef: ElementRef,\n              changeDetectorRef: ChangeDetectorRef,\n              @Inject(MAT_TABS_CONFIG) @Optional() defaultConfig?: MatTabsConfig,\n              @Optional() @Inject(ANIMATION_MODULE_TYPE) animationMode?: string) {\n    super(elementRef, changeDetectorRef, defaultConfig, animationMode);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, ElementRef} from '@angular/core';\nimport {CanDisable, CanDisableCtor, mixinDisabled} from '@angular/material/core';\n\n\n// Boilerplate for applying mixins to MatTabLabelWrapper.\n/** @docs-private */\nclass MatTabLabelWrapperBase {}\nconst _MatTabLabelWrapperMixinBase: CanDisableCtor & typeof MatTabLabelWrapperBase =\n    mixinDisabled(MatTabLabelWrapperBase);\n\n/**\n * Used in the `mat-tab-group` view to display tab labels.\n * @docs-private\n */\n@Directive({\n  selector: '[matTabLabelWrapper]',\n  inputs: ['disabled'],\n  host: {\n    '[class.mat-tab-disabled]': 'disabled',\n    '[attr.aria-disabled]': '!!disabled',\n  }\n})\nexport class MatTabLabelWrapper extends _MatTabLabelWrapperMixinBase implements CanDisable {\n  constructor(public elementRef: ElementRef) {\n    super();\n  }\n\n  /** Sets focus on the wrapper element */\n  focus(): void {\n    this.elementRef.nativeElement.focus();\n  }\n\n  getOffsetLeft(): number {\n    return this.elementRef.nativeElement.offsetLeft;\n  }\n\n  getOffsetWidth(): number {\n    return this.elementRef.nativeElement.offsetWidth;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  ChangeDetectorRef,\n  ElementRef,\n  NgZone,\n  Optional,\n  QueryList,\n  EventEmitter,\n  AfterContentChecked,\n  AfterContentInit,\n  AfterViewInit,\n  OnDestroy,\n  Directive,\n  Inject,\n} from '@angular/core';\nimport {Direction, Directionality} from '@angular/cdk/bidi';\nimport {coerceNumberProperty} from '@angular/cdk/coercion';\nimport {ViewportRuler} from '@angular/cdk/scrolling';\nimport {FocusKeyManager, FocusableOption} from '@angular/cdk/a11y';\nimport {END, ENTER, HOME, SPACE, hasModifierKey} from '@angular/cdk/keycodes';\nimport {merge, of as observableOf, Subject, timer, fromEvent} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\nimport {Platform, normalizePassiveListenerOptions} from '@angular/cdk/platform';\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\n\n\n/** Config used to bind passive event listeners */\nconst passiveEventListenerOptions =\n    normalizePassiveListenerOptions({passive: true}) as EventListenerOptions;\n\n/**\n * The directions that scrolling can go in when the header's tabs exceed the header width. 'After'\n * will scroll the header towards the end of the tabs list and 'before' will scroll towards the\n * beginning of the list.\n */\nexport type ScrollDirection = 'after' | 'before';\n\n/**\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\n * provide a small affordance to the label next to it.\n */\nconst EXAGGERATED_OVERSCROLL = 60;\n\n/**\n * Amount of milliseconds to wait before starting to scroll the header automatically.\n * Set a little conservatively in order to handle fake events dispatched on touch devices.\n */\nconst HEADER_SCROLL_DELAY = 650;\n\n/**\n * Interval in milliseconds at which to scroll the header\n * while the user is holding their pointer.\n */\nconst HEADER_SCROLL_INTERVAL = 100;\n\n/** Item inside a paginated tab header. */\nexport type MatPaginatedTabHeaderItem = FocusableOption & {elementRef: ElementRef};\n\n/**\n * Base class for a tab header that supported pagination.\n * @docs-private\n */\n@Directive({\n  // TODO(crisbeto): this selector can be removed when we update to Angular 9.0.\n  selector: 'do-not-use-abstract-mat-paginated-tab-header'\n})\nexport abstract class MatPaginatedTabHeader implements AfterContentChecked, AfterContentInit,\n  AfterViewInit, OnDestroy {\n  abstract _items: QueryList<MatPaginatedTabHeaderItem>;\n  abstract _inkBar: {hide: () => void, alignToElement: (element: HTMLElement) => void};\n  abstract _tabListContainer: ElementRef<HTMLElement>;\n  abstract _tabList: ElementRef<HTMLElement>;\n  abstract _nextPaginator: ElementRef<HTMLElement>;\n  abstract _previousPaginator: ElementRef<HTMLElement>;\n\n  /** The distance in pixels that the tab labels should be translated to the left. */\n  private _scrollDistance = 0;\n\n  /** Whether the header should scroll to the selected index after the view has been checked. */\n  private _selectedIndexChanged = false;\n\n  /** Emits when the component is destroyed. */\n  protected readonly _destroyed = new Subject<void>();\n\n  /** Whether the controls for pagination should be displayed */\n  _showPaginationControls = false;\n\n  /** Whether the tab list can be scrolled more towards the end of the tab label list. */\n  _disableScrollAfter = true;\n\n  /** Whether the tab list can be scrolled more towards the beginning of the tab label list. */\n  _disableScrollBefore = true;\n\n  /**\n   * The number of tab labels that are displayed on the header. When this changes, the header\n   * should re-evaluate the scroll position.\n   */\n  private _tabLabelCount: number;\n\n  /** Whether the scroll distance has changed and should be applied after the view is checked. */\n  private _scrollDistanceChanged: boolean;\n\n  /** Used to manage focus between the tabs. */\n  private _keyManager: FocusKeyManager<MatPaginatedTabHeaderItem>;\n\n  /** Cached text content of the header. */\n  private _currentTextContent: string;\n\n  /** Stream that will stop the automated scrolling. */\n  private _stopScrolling = new Subject<void>();\n\n  /** The index of the active tab. */\n  get selectedIndex(): number { return this._selectedIndex; }\n  set selectedIndex(value: number) {\n    value = coerceNumberProperty(value);\n\n    if (this._selectedIndex != value) {\n      this._selectedIndexChanged = true;\n      this._selectedIndex = value;\n\n      if (this._keyManager) {\n        this._keyManager.updateActiveItemIndex(value);\n      }\n    }\n  }\n  private _selectedIndex: number = 0;\n\n  /** Event emitted when the option is selected. */\n  readonly selectFocusedIndex: EventEmitter<number> = new EventEmitter<number>();\n\n  /** Event emitted when a label is focused. */\n  readonly indexFocused: EventEmitter<number> = new EventEmitter<number>();\n\n  constructor(protected _elementRef: ElementRef<HTMLElement>,\n              protected _changeDetectorRef: ChangeDetectorRef,\n              private _viewportRuler: ViewportRuler,\n              @Optional() private _dir: Directionality,\n              private _ngZone: NgZone,\n              /**\n               * @deprecated @breaking-change 9.0.0 `_platform` and `_animationMode`\n               * parameters to become required.\n               */\n              private _platform?: Platform,\n              @Optional() @Inject(ANIMATION_MODULE_TYPE) public _animationMode?: string) {\n\n    // Bind the `mouseleave` event on the outside since it doesn't change anything in the view.\n    _ngZone.runOutsideAngular(() => {\n      fromEvent(_elementRef.nativeElement, 'mouseleave')\n        .pipe(takeUntil(this._destroyed))\n        .subscribe(() => {\n          this._stopInterval();\n        });\n    });\n  }\n\n  /** Called when the user has selected an item via the keyboard. */\n  protected abstract _itemSelected(event: KeyboardEvent): void;\n\n  ngAfterViewInit() {\n    // We need to handle these events manually, because we want to bind passive event listeners.\n    fromEvent(this._previousPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n      .pipe(takeUntil(this._destroyed))\n      .subscribe(() => {\n        this._handlePaginatorPress('before');\n      });\n\n    fromEvent(this._nextPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n      .pipe(takeUntil(this._destroyed))\n      .subscribe(() => {\n        this._handlePaginatorPress('after');\n      });\n  }\n\n  ngAfterContentInit() {\n    const dirChange = this._dir ? this._dir.change : observableOf(null);\n    const resize = this._viewportRuler.change(150);\n    const realign = () => {\n      this.updatePagination();\n      this._alignInkBarToSelectedTab();\n    };\n\n    this._keyManager = new FocusKeyManager<MatPaginatedTabHeaderItem>(this._items)\n      .withHorizontalOrientation(this._getLayoutDirection())\n      .withWrap();\n\n    this._keyManager.updateActiveItem(0);\n\n    // Defer the first call in order to allow for slower browsers to lay out the elements.\n    // This helps in cases where the user lands directly on a page with paginated tabs.\n    typeof requestAnimationFrame !== 'undefined' ? requestAnimationFrame(realign) : realign();\n\n    // On dir change or window resize, realign the ink bar and update the orientation of\n    // the key manager if the direction has changed.\n    merge(dirChange, resize, this._items.changes).pipe(takeUntil(this._destroyed)).subscribe(() => {\n      realign();\n      this._keyManager.withHorizontalOrientation(this._getLayoutDirection());\n    });\n\n    // If there is a change in the focus key manager we need to emit the `indexFocused`\n    // event in order to provide a public event that notifies about focus changes. Also we realign\n    // the tabs container by scrolling the new focused tab into the visible section.\n    this._keyManager.change.pipe(takeUntil(this._destroyed)).subscribe(newFocusIndex => {\n      this.indexFocused.emit(newFocusIndex);\n      this._setTabFocus(newFocusIndex);\n    });\n  }\n\n  ngAfterContentChecked(): void {\n    // If the number of tab labels have changed, check if scrolling should be enabled\n    if (this._tabLabelCount != this._items.length) {\n      this.updatePagination();\n      this._tabLabelCount = this._items.length;\n      this._changeDetectorRef.markForCheck();\n    }\n\n    // If the selected index has changed, scroll to the label and check if the scrolling controls\n    // should be disabled.\n    if (this._selectedIndexChanged) {\n      this._scrollToLabel(this._selectedIndex);\n      this._checkScrollingControls();\n      this._alignInkBarToSelectedTab();\n      this._selectedIndexChanged = false;\n      this._changeDetectorRef.markForCheck();\n    }\n\n    // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n    // then translate the header to reflect this.\n    if (this._scrollDistanceChanged) {\n      this._updateTabScrollPosition();\n      this._scrollDistanceChanged = false;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  ngOnDestroy() {\n    this._destroyed.next();\n    this._destroyed.complete();\n    this._stopScrolling.complete();\n  }\n\n  /** Handles keyboard events on the header. */\n  _handleKeydown(event: KeyboardEvent) {\n    // We don't handle any key bindings with a modifier key.\n    if (hasModifierKey(event)) {\n      return;\n    }\n\n    switch (event.keyCode) {\n      case HOME:\n        this._keyManager.setFirstItemActive();\n        event.preventDefault();\n        break;\n      case END:\n        this._keyManager.setLastItemActive();\n        event.preventDefault();\n        break;\n      case ENTER:\n      case SPACE:\n        this.selectFocusedIndex.emit(this.focusIndex);\n        this._itemSelected(event);\n        break;\n      default:\n        this._keyManager.onKeydown(event);\n    }\n  }\n\n  /**\n   * Callback for when the MutationObserver detects that the content has changed.\n   */\n  _onContentChanges() {\n    const textContent = this._elementRef.nativeElement.textContent;\n\n    // We need to diff the text content of the header, because the MutationObserver callback\n    // will fire even if the text content didn't change which is inefficient and is prone\n    // to infinite loops if a poorly constructed expression is passed in (see #14249).\n    if (textContent !== this._currentTextContent) {\n      this._currentTextContent = textContent || '';\n\n      // The content observer runs outside the `NgZone` by default, which\n      // means that we need to bring the callback back in ourselves.\n      this._ngZone.run(() => {\n        this.updatePagination();\n        this._alignInkBarToSelectedTab();\n        this._changeDetectorRef.markForCheck();\n      });\n    }\n  }\n\n  /**\n   * Updates the view whether pagination should be enabled or not.\n   *\n   * WARNING: Calling this method can be very costly in terms of performance. It should be called\n   * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n   * page.\n   */\n  updatePagination() {\n    this._checkPaginationEnabled();\n    this._checkScrollingControls();\n    this._updateTabScrollPosition();\n  }\n\n  /** Tracks which element has focus; used for keyboard navigation */\n  get focusIndex(): number {\n    return this._keyManager ? this._keyManager.activeItemIndex! : 0;\n  }\n\n  /** When the focus index is set, we must manually send focus to the correct label */\n  set focusIndex(value: number) {\n    if (!this._isValidIndex(value) || this.focusIndex === value || !this._keyManager) {\n      return;\n    }\n\n    this._keyManager.setActiveItem(value);\n  }\n\n  /**\n   * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n   * providing a valid index and return true.\n   */\n  _isValidIndex(index: number): boolean {\n    if (!this._items) { return true; }\n\n    const tab = this._items ? this._items.toArray()[index] : null;\n    return !!tab && !tab.disabled;\n  }\n\n  /**\n   * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n   * scrolling is enabled.\n   */\n  _setTabFocus(tabIndex: number) {\n    if (this._showPaginationControls) {\n      this._scrollToLabel(tabIndex);\n    }\n\n    if (this._items && this._items.length) {\n      this._items.toArray()[tabIndex].focus();\n\n      // Do not let the browser manage scrolling to focus the element, this will be handled\n      // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n      // should be the full width minus the offset width.\n      const containerEl = this._tabListContainer.nativeElement;\n      const dir = this._getLayoutDirection();\n\n      if (dir == 'ltr') {\n        containerEl.scrollLeft = 0;\n      } else {\n        containerEl.scrollLeft = containerEl.scrollWidth - containerEl.offsetWidth;\n      }\n    }\n  }\n\n  /** The layout direction of the containing app. */\n  _getLayoutDirection(): Direction {\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n  }\n\n  /** Performs the CSS transformation on the tab list that will cause the list to scroll. */\n  _updateTabScrollPosition() {\n    const scrollDistance = this.scrollDistance;\n    const platform = this._platform;\n    const translateX = this._getLayoutDirection() === 'ltr' ? -scrollDistance : scrollDistance;\n\n    // Don't use `translate3d` here because we don't want to create a new layer. A new layer\n    // seems to cause flickering and overflow in Internet Explorer. For example, the ink bar\n    // and ripples will exceed the boundaries of the visible tab bar.\n    // See: https://github.com/angular/components/issues/10276\n    // We round the `transform` here, because transforms with sub-pixel precision cause some\n    // browsers to blur the content of the element.\n    this._tabList.nativeElement.style.transform = `translateX(${Math.round(translateX)}px)`;\n\n    // Setting the `transform` on IE will change the scroll offset of the parent, causing the\n    // position to be thrown off in some cases. We have to reset it ourselves to ensure that\n    // it doesn't get thrown off. Note that we scope it only to IE and Edge, because messing\n    // with the scroll position throws off Chrome 71+ in RTL mode (see #14689).\n    // @breaking-change 9.0.0 Remove null check for `platform` after it can no longer be undefined.\n    if (platform && (platform.TRIDENT || platform.EDGE)) {\n      this._tabListContainer.nativeElement.scrollLeft = 0;\n    }\n  }\n\n  /** Sets the distance in pixels that the tab header should be transformed in the X-axis. */\n  get scrollDistance(): number { return this._scrollDistance; }\n  set scrollDistance(value: number) {\n    this._scrollTo(value);\n  }\n\n  /**\n   * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n   * the end of the list, respectively). The distance to scroll is computed to be a third of the\n   * length of the tab list view window.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n  _scrollHeader(direction: ScrollDirection) {\n    const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n\n    // Move the scroll distance one-third the length of the tab list's viewport.\n    const scrollAmount = (direction == 'before' ? -1 : 1) * viewLength / 3;\n\n    return this._scrollTo(this._scrollDistance + scrollAmount);\n  }\n\n  /** Handles click events on the pagination arrows. */\n  _handlePaginatorClick(direction: ScrollDirection) {\n    this._stopInterval();\n    this._scrollHeader(direction);\n  }\n\n  /**\n   * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n  _scrollToLabel(labelIndex: number) {\n    const selectedLabel = this._items ? this._items.toArray()[labelIndex] : null;\n\n    if (!selectedLabel) { return; }\n\n    // The view length is the visible width of the tab labels.\n    const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n    const {offsetLeft, offsetWidth} = selectedLabel.elementRef.nativeElement;\n\n    let labelBeforePos: number, labelAfterPos: number;\n    if (this._getLayoutDirection() == 'ltr') {\n      labelBeforePos = offsetLeft;\n      labelAfterPos = labelBeforePos + offsetWidth;\n    } else {\n      labelAfterPos = this._tabList.nativeElement.offsetWidth - offsetLeft;\n      labelBeforePos = labelAfterPos - offsetWidth;\n    }\n\n    const beforeVisiblePos = this.scrollDistance;\n    const afterVisiblePos = this.scrollDistance + viewLength;\n\n    if (labelBeforePos < beforeVisiblePos) {\n      // Scroll header to move label to the before direction\n      this.scrollDistance -= beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\n    } else if (labelAfterPos > afterVisiblePos) {\n      // Scroll header to move label to the after direction\n      this.scrollDistance += labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\n    }\n  }\n\n  /**\n   * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n   * tab list is wider than the size of the header container, then the pagination controls should\n   * be shown.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n  _checkPaginationEnabled() {\n    const isEnabled =\n        this._tabList.nativeElement.scrollWidth > this._elementRef.nativeElement.offsetWidth;\n\n    if (!isEnabled) {\n      this.scrollDistance = 0;\n    }\n\n    if (isEnabled !== this._showPaginationControls) {\n      this._changeDetectorRef.markForCheck();\n    }\n\n    this._showPaginationControls = isEnabled;\n  }\n\n  /**\n   * Evaluate whether the before and after controls should be enabled or disabled.\n   * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n   * before button. If the header is at the end of the list (scroll distance is equal to the\n   * maximum distance we can scroll), then disable the after button.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n  _checkScrollingControls() {\n    // Check if the pagination arrows should be activated.\n    this._disableScrollBefore = this.scrollDistance == 0;\n    this._disableScrollAfter = this.scrollDistance == this._getMaxScrollDistance();\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n   * is equal to the difference in width between the tab list container and tab header container.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n  _getMaxScrollDistance(): number {\n    const lengthOfTabList = this._tabList.nativeElement.scrollWidth;\n    const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n    return (lengthOfTabList - viewLength) || 0;\n  }\n\n  /** Tells the ink-bar to align itself to the current label wrapper */\n  _alignInkBarToSelectedTab(): void {\n    const selectedItem = this._items && this._items.length ?\n        this._items.toArray()[this.selectedIndex] : null;\n    const selectedLabelWrapper = selectedItem ? selectedItem.elementRef.nativeElement : null;\n\n    if (selectedLabelWrapper) {\n      this._inkBar.alignToElement(selectedLabelWrapper);\n    } else {\n      this._inkBar.hide();\n    }\n  }\n\n  /** Stops the currently-running paginator interval.  */\n  _stopInterval() {\n    this._stopScrolling.next();\n  }\n\n  /**\n   * Handles the user pressing down on one of the paginators.\n   * Starts scrolling the header after a certain amount of time.\n   * @param direction In which direction the paginator should be scrolled.\n   */\n  _handlePaginatorPress(direction: ScrollDirection) {\n    // Avoid overlapping timers.\n    this._stopInterval();\n\n    // Start a timer after the delay and keep firing based on the interval.\n    timer(HEADER_SCROLL_DELAY, HEADER_SCROLL_INTERVAL)\n      // Keep the timer going until something tells it to stop or the component is destroyed.\n      .pipe(takeUntil(merge(this._stopScrolling, this._destroyed)))\n      .subscribe(() => {\n        const {maxScrollDistance, distance} = this._scrollHeader(direction);\n\n        // Stop the timer if we've reached the start or the end.\n        if (distance === 0 || distance >= maxScrollDistance) {\n          this._stopInterval();\n        }\n      });\n  }\n\n  /**\n   * Scrolls the header to a given position.\n   * @param position Position to which to scroll.\n   * @returns Information on the current scroll distance and the maximum.\n   */\n  private _scrollTo(position: number) {\n    const maxScrollDistance = this._getMaxScrollDistance();\n    this._scrollDistance = Math.max(0, Math.min(maxScrollDistance, position));\n\n    // Mark that the scroll distance has changed so that after the view is checked, the CSS\n    // transformation can move the header.\n    this._scrollDistanceChanged = true;\n    this._checkScrollingControls();\n\n    return {maxScrollDistance, distance: this._scrollDistance};\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directionality} from '@angular/cdk/bidi';\nimport {ViewportRuler} from '@angular/cdk/scrolling';\nimport {\n  AfterContentChecked,\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  ElementRef,\n  NgZone,\n  OnDestroy,\n  Optional,\n  QueryList,\n  ViewChild,\n  ViewEncapsulation,\n  AfterViewInit,\n  Input,\n  Inject,\n  Directive,\n} from '@angular/core';\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {MatInkBar} from './ink-bar';\nimport {MatTabLabelWrapper} from './tab-label-wrapper';\nimport {Platform} from '@angular/cdk/platform';\nimport {MatPaginatedTabHeader} from './paginated-tab-header';\n\n/**\n * Base class with all of the `MatTabHeader` functionality.\n * @docs-private\n */\n@Directive({\n  // TODO(crisbeto): this selector can be removed when we update to Angular 9.0.\n  selector: 'do-not-use-abstract-mat-tab-header-base'\n})\n// tslint:disable-next-line:class-name\nexport abstract class _MatTabHeaderBase extends MatPaginatedTabHeader implements\n  AfterContentChecked, AfterContentInit, AfterViewInit, OnDestroy {\n\n  /** Whether the ripple effect is disabled or not. */\n  @Input()\n  get disableRipple() { return this._disableRipple; }\n  set disableRipple(value: any) { this._disableRipple = coerceBooleanProperty(value); }\n  private _disableRipple: boolean = false;\n\n  constructor(elementRef: ElementRef,\n              changeDetectorRef: ChangeDetectorRef,\n              viewportRuler: ViewportRuler,\n              @Optional() dir: Directionality,\n              ngZone: NgZone,\n              platform: Platform,\n              // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n              @Optional() @Inject(ANIMATION_MODULE_TYPE) animationMode?: string) {\n    super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n  }\n\n  protected _itemSelected(event: KeyboardEvent) {\n    event.preventDefault();\n  }\n}\n\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group. Includes\n * an ink bar that follows the currently selected tab. When the tabs list's width exceeds the\n * width of the header container, then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * @docs-private\n */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-tab-header',\n  templateUrl: 'tab-header.html',\n  styleUrls: ['tab-header.css'],\n  inputs: ['selectedIndex'],\n  outputs: ['selectFocusedIndex', 'indexFocused'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    'class': 'mat-tab-header',\n    '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n    '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n  },\n})\nexport class MatTabHeader extends _MatTabHeaderBase {\n  @ContentChildren(MatTabLabelWrapper) _items: QueryList<MatTabLabelWrapper>;\n  @ViewChild(MatInkBar, {static: true}) _inkBar: MatInkBar;\n  @ViewChild('tabListContainer', {static: true}) _tabListContainer: ElementRef;\n  @ViewChild('tabList', {static: true}) _tabList: ElementRef;\n  @ViewChild('nextPaginator', {static: false}) _nextPaginator: ElementRef<HTMLElement>;\n  @ViewChild('previousPaginator', {static: false}) _previousPaginator: ElementRef<HTMLElement>;\n\n  constructor(elementRef: ElementRef,\n              changeDetectorRef: ChangeDetectorRef,\n              viewportRuler: ViewportRuler,\n              @Optional() dir: Directionality,\n              ngZone: NgZone,\n              platform: Platform,\n              // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n              @Optional() @Inject(ANIMATION_MODULE_TYPE) animationMode?: string) {\n    super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directionality} from '@angular/cdk/bidi';\nimport {Platform} from '@angular/cdk/platform';\nimport {ViewportRuler} from '@angular/cdk/scrolling';\nimport {\n  AfterContentChecked,\n  AfterContentInit,\n  Attribute,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  forwardRef,\n  Inject,\n  Input,\n  NgZone,\n  OnDestroy,\n  Optional,\n  QueryList,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  CanDisable, CanDisableCtor,\n  CanDisableRipple, CanDisableRippleCtor,\n  HasTabIndex, HasTabIndexCtor,\n  MAT_RIPPLE_GLOBAL_OPTIONS,\n  mixinDisabled,\n  mixinDisableRipple,\n  mixinTabIndex, RippleConfig,\n  RippleGlobalOptions,\n  RippleRenderer,\n  RippleTarget,\n  ThemePalette,\n} from '@angular/material/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {FocusMonitor, FocusableOption} from '@angular/cdk/a11y';\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\nimport {MatInkBar} from '../ink-bar';\nimport {MatPaginatedTabHeader, MatPaginatedTabHeaderItem} from '../paginated-tab-header';\nimport {startWith, takeUntil} from 'rxjs/operators';\n\n/**\n * Base class with all of the `MatTabNav` functionality.\n * @docs-private\n */\n@Directive({\n  // TODO(crisbeto): this selector can be removed when we update to Angular 9.0.\n  selector: 'do-not-use-abstract-mat-tab-nav-base'\n})\n// tslint:disable-next-line:class-name\nexport abstract class _MatTabNavBase extends MatPaginatedTabHeader implements AfterContentChecked,\n  AfterContentInit, OnDestroy {\n\n  /** Query list of all tab links of the tab navigation. */\n  abstract _items: QueryList<MatPaginatedTabHeaderItem & {active: boolean}>;\n\n  /** Background color of the tab nav. */\n  @Input()\n  get backgroundColor(): ThemePalette { return this._backgroundColor; }\n  set backgroundColor(value: ThemePalette) {\n    const classList = this._elementRef.nativeElement.classList;\n    classList.remove(`mat-background-${this.backgroundColor}`);\n\n    if (value) {\n      classList.add(`mat-background-${value}`);\n    }\n\n    this._backgroundColor = value;\n  }\n  private _backgroundColor: ThemePalette;\n\n  /** Whether the ripple effect is disabled or not. */\n  @Input()\n  get disableRipple() { return this._disableRipple; }\n  set disableRipple(value: any) { this._disableRipple = coerceBooleanProperty(value); }\n  private _disableRipple: boolean = false;\n\n  /** Theme color of the nav bar. */\n  @Input() color: ThemePalette = 'primary';\n\n  constructor(elementRef: ElementRef,\n              @Optional() dir: Directionality,\n              ngZone: NgZone,\n              changeDetectorRef: ChangeDetectorRef,\n              viewportRuler: ViewportRuler,\n              /**\n               * @deprecated @breaking-change 9.0.0 `platform` parameter to become required.\n               */\n              @Optional() platform?: Platform,\n              @Optional() @Inject(ANIMATION_MODULE_TYPE) animationMode?: string) {\n    super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n  }\n\n  protected _itemSelected() {\n    // noop\n  }\n\n  ngAfterContentInit() {\n    // We need this to run before the `changes` subscription in parent to ensure that the\n    // selectedIndex is up-to-date by the time the super class starts looking for it.\n    this._items.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n      this.updateActiveLink();\n    });\n\n    super.ngAfterContentInit();\n  }\n\n  /**\n   * Notifies the component that the active link has been changed.\n   * @breaking-change 8.0.0 `element` parameter to be removed.\n   */\n  updateActiveLink(_element?: ElementRef) {\n    if (!this._items) {\n      return;\n    }\n\n    const items = this._items.toArray();\n\n    for (let i = 0; i < items.length; i++) {\n      if (items[i].active) {\n        this.selectedIndex = i;\n        this._changeDetectorRef.markForCheck();\n        return;\n      }\n    }\n\n    // The ink bar should hide itself if no items are active.\n    this.selectedIndex = -1;\n    this._inkBar.hide();\n  }\n}\n\n\n/**\n * Navigation component matching the styles of the tab group header.\n * Provides anchored navigation with animated ink bar.\n */\n@Component({\n  moduleId: module.id,\n  selector: '[mat-tab-nav-bar]',\n  exportAs: 'matTabNavBar, matTabNav',\n  inputs: ['color'],\n  templateUrl: 'tab-nav-bar.html',\n  styleUrls: ['tab-nav-bar.css'],\n  host: {\n    'class': 'mat-tab-nav-bar mat-tab-header',\n    '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n    '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n    '[class.mat-primary]': 'color !== \"warn\" && color !== \"accent\"',\n    '[class.mat-accent]': 'color === \"accent\"',\n    '[class.mat-warn]': 'color === \"warn\"',\n  },\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatTabNav extends _MatTabNavBase {\n  @ContentChildren(forwardRef(() => MatTabLink), {descendants: true}) _items: QueryList<MatTabLink>;\n  @ViewChild(MatInkBar, {static: true}) _inkBar: MatInkBar;\n  @ViewChild('tabListContainer', {static: true}) _tabListContainer: ElementRef;\n  @ViewChild('tabList', {static: true}) _tabList: ElementRef;\n  @ViewChild('nextPaginator', {static: false}) _nextPaginator: ElementRef<HTMLElement>;\n  @ViewChild('previousPaginator', {static: false}) _previousPaginator: ElementRef<HTMLElement>;\n\n  constructor(elementRef: ElementRef,\n    @Optional() dir: Directionality,\n    ngZone: NgZone,\n    changeDetectorRef: ChangeDetectorRef,\n    viewportRuler: ViewportRuler,\n    /**\n     * @deprecated @breaking-change 9.0.0 `platform` parameter to become required.\n     */\n    @Optional() platform?: Platform,\n    @Optional() @Inject(ANIMATION_MODULE_TYPE) animationMode?: string) {\n    super(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode);\n  }\n}\n\n// Boilerplate for applying mixins to MatTabLink.\nclass MatTabLinkMixinBase {}\nconst _MatTabLinkMixinBase:\n    HasTabIndexCtor & CanDisableRippleCtor & CanDisableCtor & typeof MatTabLinkMixinBase =\n        mixinTabIndex(mixinDisableRipple(mixinDisabled(MatTabLinkMixinBase)));\n\n/** Base class with all of the `MatTabLink` functionality. */\n@Directive({\n  // TODO(crisbeto): this selector can be removed when we update to Angular 9.0.\n  selector: 'do-not-use-abstract-mat-tab-link-base'\n})\n// tslint:disable-next-line:class-name\nexport class _MatTabLinkBase extends _MatTabLinkMixinBase implements OnDestroy, CanDisable,\n  CanDisableRipple, HasTabIndex, RippleTarget, FocusableOption {\n\n  /** Whether the tab link is active or not. */\n  protected _isActive: boolean = false;\n\n  /** Whether the link is active. */\n  @Input()\n  get active(): boolean { return this._isActive; }\n  set active(value: boolean) {\n    if (value !== this._isActive) {\n      this._isActive = value;\n      this._tabNavBar.updateActiveLink(this.elementRef);\n    }\n  }\n\n  /**\n   * Ripple configuration for ripples that are launched on pointer down. The ripple config\n   * is set to the global ripple options since we don't have any configurable options for\n   * the tab link ripples.\n   * @docs-private\n   */\n  rippleConfig: RippleConfig & RippleGlobalOptions;\n\n  /**\n   * Whether ripples are disabled on interaction.\n   * @docs-private\n   */\n  get rippleDisabled(): boolean {\n    return this.disabled || this.disableRipple || this._tabNavBar.disableRipple ||\n      !!this.rippleConfig.disabled;\n  }\n\n  constructor(\n      private _tabNavBar: _MatTabNavBase, public elementRef: ElementRef,\n      @Optional() @Inject(MAT_RIPPLE_GLOBAL_OPTIONS) globalRippleOptions: RippleGlobalOptions|null,\n      @Attribute('tabindex') tabIndex: string, private _focusMonitor: FocusMonitor,\n      @Optional() @Inject(ANIMATION_MODULE_TYPE) animationMode?: string) {\n    super();\n\n    this.rippleConfig = globalRippleOptions || {};\n    this.tabIndex = parseInt(tabIndex) || 0;\n\n    if (animationMode === 'NoopAnimations') {\n      this.rippleConfig.animation = {enterDuration: 0, exitDuration: 0};\n    }\n\n    _focusMonitor.monitor(elementRef);\n  }\n\n  focus() {\n    this.elementRef.nativeElement.focus();\n  }\n\n  ngOnDestroy() {\n    this._focusMonitor.stopMonitoring(this.elementRef);\n  }\n}\n\n\n/**\n * Link inside of a `mat-tab-nav-bar`.\n */\n@Directive({\n  selector: '[mat-tab-link], [matTabLink]',\n  exportAs: 'matTabLink',\n  inputs: ['disabled', 'disableRipple', 'tabIndex'],\n  host: {\n    'class': 'mat-tab-link',\n    '[attr.aria-current]': 'active ? \"page\" : null',\n    '[attr.aria-disabled]': 'disabled',\n    '[attr.tabIndex]': 'tabIndex',\n    '[class.mat-tab-disabled]': 'disabled',\n    '[class.mat-tab-label-active]': 'active',\n  }\n})\nexport class MatTabLink extends _MatTabLinkBase implements OnDestroy {\n  /** Reference to the RippleRenderer for the tab-link. */\n  private _tabLinkRipple: RippleRenderer;\n\n  constructor(\n    tabNavBar: MatTabNav, elementRef: ElementRef, ngZone: NgZone,\n    platform: Platform,\n    @Optional() @Inject(MAT_RIPPLE_GLOBAL_OPTIONS) globalRippleOptions: RippleGlobalOptions|null,\n    @Attribute('tabindex') tabIndex: string, focusMonitor: FocusMonitor,\n    @Optional() @Inject(ANIMATION_MODULE_TYPE) animationMode?: string) {\n    super(tabNavBar, elementRef, globalRippleOptions, tabIndex, focusMonitor, animationMode);\n    this._tabLinkRipple = new RippleRenderer(this, ngZone, elementRef, platform);\n    this._tabLinkRipple.setupTriggerEvents(elementRef.nativeElement);\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this._tabLinkRipple._removeTriggerEvents();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ObserversModule} from '@angular/cdk/observers';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {MatCommonModule, MatRippleModule} from '@angular/material/core';\nimport {MatInkBar} from './ink-bar';\nimport {MatTab} from './tab';\nimport {MatTabBody, MatTabBodyPortal, _MatTabBodyBase} from './tab-body';\nimport {MatTabContent} from './tab-content';\nimport {MatTabGroup, _MatTabGroupBase} from './tab-group';\nimport {MatTabHeader, _MatTabHeaderBase} from './tab-header';\nimport {MatTabLabel} from './tab-label';\nimport {MatTabLabelWrapper} from './tab-label-wrapper';\nimport {MatTabLink, MatTabNav, _MatTabNavBase, _MatTabLinkBase} from './tab-nav-bar/tab-nav-bar';\nimport {MatPaginatedTabHeader} from './paginated-tab-header';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatCommonModule,\n    PortalModule,\n    MatRippleModule,\n    ObserversModule,\n    A11yModule,\n  ],\n  // Don't export all components because some are only to be used internally.\n  exports: [\n    MatCommonModule,\n    MatTabGroup,\n    MatTabLabel,\n    MatTab,\n    MatTabNav,\n    MatTabLink,\n    MatTabContent,\n  ],\n  declarations: [\n    MatTabGroup,\n    MatTabLabel,\n    MatTab,\n    MatInkBar,\n    MatTabLabelWrapper,\n    MatTabNav,\n    MatTabLink,\n    MatTabBody,\n    MatTabBodyPortal,\n    MatTabHeader,\n    MatTabContent,\n\n    // TODO(crisbeto): these can be removed once they're turned into selector-less directives.\n    MatPaginatedTabHeader as any,\n    _MatTabGroupBase as any,\n    _MatTabNavBase as any,\n    _MatTabBodyBase as any,\n    _MatTabHeaderBase as any,\n    _MatTabLinkBase as any,\n  ],\n})\nexport class MatTabsModule {}\n"]}