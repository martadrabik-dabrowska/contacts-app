{"version":3,"file":"datepicker.js","sources":["../../../src/material/datepicker/datepicker-errors.ts","../../../src/material/datepicker/datepicker-intl.ts","../../../src/material/datepicker/calendar-body.ts","../../../src/material/datepicker/month-view.ts","../../../src/material/datepicker/multi-year-view.ts","../../../src/material/datepicker/year-view.ts","../../../src/material/datepicker/calendar.ts","../../../src/material/datepicker/datepicker-animations.ts","../../../src/material/datepicker/datepicker.ts","../../../src/material/datepicker/datepicker-input.ts","../../../src/material/datepicker/datepicker-toggle.ts","../../../src/material/datepicker/datepicker-module.ts"],"names":["observableOf"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** @docs-private */\nexport function createMissingDateImplError(provider: string) {\n  return Error(\n      `MatDatepicker: No provider found for ${provider}. You must import one of the following ` +\n      `modules at your application root: MatNativeDateModule, MatMomentDateModule, or provide a ` +\n      `custom implementation.`);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable} from '@angular/core';\nimport {Subject} from 'rxjs';\n\n\n/** Datepicker data that requires internationalization. */\n@Injectable({providedIn: 'root'})\nexport class MatDatepickerIntl {\n  /**\n   * Stream that emits whenever the labels here are changed. Use this to notify\n   * components if the labels have changed after initialization.\n   */\n  readonly changes: Subject<void> = new Subject<void>();\n\n  /** A label for the calendar popup (used by screen readers). */\n  calendarLabel: string = 'Calendar';\n\n  /** A label for the button used to open the calendar popup (used by screen readers). */\n  openCalendarLabel: string = 'Open calendar';\n\n  /** A label for the previous month button (used by screen readers). */\n  prevMonthLabel: string = 'Previous month';\n\n  /** A label for the next month button (used by screen readers). */\n  nextMonthLabel: string = 'Next month';\n\n  /** A label for the previous year button (used by screen readers). */\n  prevYearLabel: string = 'Previous year';\n\n  /** A label for the next year button (used by screen readers). */\n  nextYearLabel: string = 'Next year';\n\n  /** A label for the previous multi-year button (used by screen readers). */\n  prevMultiYearLabel: string = 'Previous 20 years';\n\n  /** A label for the next multi-year button (used by screen readers). */\n  nextMultiYearLabel: string = 'Next 20 years';\n\n  /** A label for the 'switch to month view' button (used by screen readers). */\n  switchToMonthViewLabel: string = 'Choose date';\n\n  /** A label for the 'switch to year view' button (used by screen readers). */\n  switchToMultiYearViewLabel: string = 'Choose month and year';\n\n  /** Formats a range of years. */\n  formatYearRange(start: string, end: string): string {\n    return `${start} \\u2013 ${end}`;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  Output,\n  ViewEncapsulation,\n  NgZone,\n  OnChanges,\n  SimpleChanges,\n} from '@angular/core';\nimport {take} from 'rxjs/operators';\n\n/**\n * Extra CSS classes that can be associated with a calendar cell.\n */\nexport type MatCalendarCellCssClasses = string | string[] | Set<string> | {[key: string]: any};\n\n/**\n * An internal class that represents the data corresponding to a single calendar cell.\n * @docs-private\n */\nexport class MatCalendarCell {\n  constructor(public value: number,\n              public displayValue: string,\n              public ariaLabel: string,\n              public enabled: boolean,\n              public cssClasses?: MatCalendarCellCssClasses) {}\n}\n\n\n/**\n * An internal component used to display calendar data in a table.\n * @docs-private\n */\n@Component({\n  moduleId: module.id,\n  selector: '[mat-calendar-body]',\n  templateUrl: 'calendar-body.html',\n  styleUrls: ['calendar-body.css'],\n  host: {\n    'class': 'mat-calendar-body',\n    'role': 'grid',\n    'aria-readonly': 'true'\n  },\n  exportAs: 'matCalendarBody',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatCalendarBody implements OnChanges {\n  /** The label for the table. (e.g. \"Jan 2017\"). */\n  @Input() label: string;\n\n  /** The cells to display in the table. */\n  @Input() rows: MatCalendarCell[][];\n\n  /** The value in the table that corresponds to today. */\n  @Input() todayValue: number;\n\n  /** The value in the table that is currently selected. */\n  @Input() selectedValue: number;\n\n  /** The minimum number of free cells needed to fit the label in the first row. */\n  @Input() labelMinRequiredCells: number;\n\n  /** The number of columns in the table. */\n  @Input() numCols = 7;\n\n  /** The cell number of the active cell in the table. */\n  @Input() activeCell = 0;\n\n  /**\n   * The aspect ratio (width / height) to use for the cells in the table. This aspect ratio will be\n   * maintained even as the table resizes.\n   */\n  @Input() cellAspectRatio = 1;\n\n  /** Emits when a new value is selected. */\n  @Output() readonly selectedValueChange: EventEmitter<number> = new EventEmitter<number>();\n\n  /** The number of blank cells to put at the beginning for the first row. */\n  _firstRowOffset: number;\n\n  /** Padding for the individual date cells. */\n  _cellPadding: string;\n\n  /** Width of an individual cell. */\n  _cellWidth: string;\n\n  constructor(private _elementRef: ElementRef<HTMLElement>, private _ngZone: NgZone) { }\n\n  _cellClicked(cell: MatCalendarCell): void {\n    if (cell.enabled) {\n      this.selectedValueChange.emit(cell.value);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const columnChanges = changes['numCols'];\n    const {rows, numCols} = this;\n\n    if (changes['rows'] || columnChanges) {\n      this._firstRowOffset = rows && rows.length && rows[0].length ? numCols - rows[0].length : 0;\n    }\n\n    if (changes['cellAspectRatio'] || columnChanges || !this._cellPadding) {\n      this._cellPadding = `${50 * this.cellAspectRatio / numCols}%`;\n    }\n\n    if (columnChanges || !this._cellWidth) {\n      this._cellWidth = `${100 / numCols}%`;\n    }\n  }\n\n  _isActiveCell(rowIndex: number, colIndex: number): boolean {\n    let cellNumber = rowIndex * this.numCols + colIndex;\n\n    // Account for the fact that the first row may not have as many cells.\n    if (rowIndex) {\n      cellNumber -= this._firstRowOffset;\n    }\n\n    return cellNumber == this.activeCell;\n  }\n\n  /** Focuses the active cell after the microtask queue is empty. */\n  _focusActiveCell() {\n    this._ngZone.runOutsideAngular(() => {\n      this._ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n        const activeCell: HTMLElement | null =\n            this._elementRef.nativeElement.querySelector('.mat-calendar-body-active');\n\n        if (activeCell) {\n          activeCell.focus();\n        }\n      });\n    });\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  DOWN_ARROW,\n  END,\n  ENTER,\n  HOME,\n  LEFT_ARROW,\n  PAGE_DOWN,\n  PAGE_UP,\n  RIGHT_ARROW,\n  UP_ARROW,\n  SPACE,\n} from '@angular/cdk/keycodes';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Inject,\n  Input,\n  Optional,\n  Output,\n  ViewEncapsulation,\n  ViewChild,\n} from '@angular/core';\nimport {DateAdapter, MAT_DATE_FORMATS, MatDateFormats} from '@angular/material/core';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {MatCalendarBody, MatCalendarCell, MatCalendarCellCssClasses} from './calendar-body';\nimport {createMissingDateImplError} from './datepicker-errors';\n\n\nconst DAYS_PER_WEEK = 7;\n\n\n/**\n * An internal component used to display a single month in the datepicker.\n * @docs-private\n */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-month-view',\n  templateUrl: 'month-view.html',\n  exportAs: 'matMonthView',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MatMonthView<D> implements AfterContentInit {\n  /**\n   * The date to display in this month view (everything other than the month and year is ignored).\n   */\n  @Input()\n  get activeDate(): D { return this._activeDate; }\n  set activeDate(value: D) {\n    const oldActiveDate = this._activeDate;\n    const validDate =\n        this._getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n    this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n    if (!this._hasSameMonthAndYear(oldActiveDate, this._activeDate)) {\n      this._init();\n    }\n  }\n  private _activeDate: D;\n\n  /** The currently selected date. */\n  @Input()\n  get selected(): D | null { return this._selected; }\n  set selected(value: D | null) {\n    this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    this._selectedDate = this._getDateInCurrentMonth(this._selected);\n  }\n  private _selected: D | null;\n\n  /** The minimum selectable date. */\n  @Input()\n  get minDate(): D | null { return this._minDate; }\n  set minDate(value: D | null) {\n    this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _minDate: D | null;\n\n  /** The maximum selectable date. */\n  @Input()\n  get maxDate(): D | null { return this._maxDate; }\n  set maxDate(value: D | null) {\n    this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _maxDate: D | null;\n\n  /** Function used to filter which dates are selectable. */\n  @Input() dateFilter: (date: D) => boolean;\n\n  /** Function that can be used to add custom CSS classes to dates. */\n  @Input() dateClass: (date: D) => MatCalendarCellCssClasses;\n\n  /** Emits when a new date is selected. */\n  @Output() readonly selectedChange: EventEmitter<D | null> = new EventEmitter<D | null>();\n\n  /** Emits when any date is selected. */\n  @Output() readonly _userSelection: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Emits when any date is activated. */\n  @Output() readonly activeDateChange: EventEmitter<D> = new EventEmitter<D>();\n\n  /** The body of calendar table */\n  @ViewChild(MatCalendarBody, {static: false}) _matCalendarBody: MatCalendarBody;\n\n  /** The label for this month (e.g. \"January 2017\"). */\n  _monthLabel: string;\n\n  /** Grid of calendar cells representing the dates of the month. */\n  _weeks: MatCalendarCell[][];\n\n  /** The number of blank cells in the first row before the 1st of the month. */\n  _firstWeekOffset: number;\n\n  /**\n   * The date of the month that the currently selected Date falls on.\n   * Null if the currently selected Date is in another month.\n   */\n  _selectedDate: number | null;\n\n  /** The date of the month that today falls on. Null if today is in another month. */\n  _todayDate: number | null;\n\n  /** The names of the weekdays. */\n  _weekdays: {long: string, narrow: string}[];\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef,\n              @Optional() @Inject(MAT_DATE_FORMATS) private _dateFormats: MatDateFormats,\n              @Optional() public _dateAdapter: DateAdapter<D>,\n              @Optional() private _dir?: Directionality) {\n    if (!this._dateAdapter) {\n      throw createMissingDateImplError('DateAdapter');\n    }\n    if (!this._dateFormats) {\n      throw createMissingDateImplError('MAT_DATE_FORMATS');\n    }\n\n    this._activeDate = this._dateAdapter.today();\n  }\n\n  ngAfterContentInit() {\n    this._init();\n  }\n\n  /** Handles when a new date is selected. */\n  _dateSelected(date: number) {\n    if (this._selectedDate != date) {\n      const selectedYear = this._dateAdapter.getYear(this.activeDate);\n      const selectedMonth = this._dateAdapter.getMonth(this.activeDate);\n      const selectedDate = this._dateAdapter.createDate(selectedYear, selectedMonth, date);\n\n      this.selectedChange.emit(selectedDate);\n    }\n\n    this._userSelection.emit();\n  }\n\n  /** Handles keydown events on the calendar body when calendar is in month view. */\n  _handleCalendarBodyKeydown(event: KeyboardEvent): void {\n    // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n    // disabled ones from being selected. This may not be ideal, we should look into whether\n    // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n\n    const oldActiveDate = this._activeDate;\n    const isRtl = this._isRtl();\n\n    switch (event.keyCode) {\n      case LEFT_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, isRtl ? 1 : -1);\n        break;\n      case RIGHT_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, isRtl ? -1 : 1);\n        break;\n      case UP_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, -7);\n        break;\n      case DOWN_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, 7);\n        break;\n      case HOME:\n        this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate,\n            1 - this._dateAdapter.getDate(this._activeDate));\n        break;\n      case END:\n        this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate,\n            (this._dateAdapter.getNumDaysInMonth(this._activeDate) -\n              this._dateAdapter.getDate(this._activeDate)));\n        break;\n      case PAGE_UP:\n        this.activeDate = event.altKey ?\n            this._dateAdapter.addCalendarYears(this._activeDate, -1) :\n            this._dateAdapter.addCalendarMonths(this._activeDate, -1);\n        break;\n      case PAGE_DOWN:\n        this.activeDate = event.altKey ?\n            this._dateAdapter.addCalendarYears(this._activeDate, 1) :\n            this._dateAdapter.addCalendarMonths(this._activeDate, 1);\n        break;\n      case ENTER:\n      case SPACE:\n        if (!this.dateFilter || this.dateFilter(this._activeDate)) {\n          this._dateSelected(this._dateAdapter.getDate(this._activeDate));\n          this._userSelection.emit();\n          // Prevent unexpected default actions such as form submission.\n          event.preventDefault();\n        }\n        return;\n      default:\n        // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n        return;\n    }\n\n    if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n      this.activeDateChange.emit(this.activeDate);\n    }\n\n    this._focusActiveCell();\n    // Prevent unexpected default actions such as form submission.\n    event.preventDefault();\n  }\n\n  /** Initializes this month view. */\n  _init() {\n    this._selectedDate = this._getDateInCurrentMonth(this.selected);\n    this._todayDate = this._getDateInCurrentMonth(this._dateAdapter.today());\n    this._monthLabel =\n        this._dateAdapter.getMonthNames('short')[this._dateAdapter.getMonth(this.activeDate)]\n            .toLocaleUpperCase();\n\n    let firstOfMonth = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate),\n        this._dateAdapter.getMonth(this.activeDate), 1);\n    this._firstWeekOffset =\n        (DAYS_PER_WEEK + this._dateAdapter.getDayOfWeek(firstOfMonth) -\n         this._dateAdapter.getFirstDayOfWeek()) % DAYS_PER_WEEK;\n\n    this._initWeekdays();\n    this._createWeekCells();\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** Focuses the active cell after the microtask queue is empty. */\n  _focusActiveCell() {\n    this._matCalendarBody._focusActiveCell();\n  }\n\n  /** Initializes the weekdays. */\n  private _initWeekdays() {\n    const firstDayOfWeek = this._dateAdapter.getFirstDayOfWeek();\n    const narrowWeekdays = this._dateAdapter.getDayOfWeekNames('narrow');\n    const longWeekdays = this._dateAdapter.getDayOfWeekNames('long');\n\n    // Rotate the labels for days of the week based on the configured first day of the week.\n    let weekdays = longWeekdays.map((long, i) => {\n        return {long, narrow: narrowWeekdays[i]};\n    });\n    this._weekdays = weekdays.slice(firstDayOfWeek).concat(weekdays.slice(0, firstDayOfWeek));\n  }\n\n  /** Creates MatCalendarCells for the dates in this month. */\n  private _createWeekCells() {\n    const daysInMonth = this._dateAdapter.getNumDaysInMonth(this.activeDate);\n    const dateNames = this._dateAdapter.getDateNames();\n    this._weeks = [[]];\n    for (let i = 0, cell = this._firstWeekOffset; i < daysInMonth; i++, cell++) {\n      if (cell == DAYS_PER_WEEK) {\n        this._weeks.push([]);\n        cell = 0;\n      }\n      const date = this._dateAdapter.createDate(\n            this._dateAdapter.getYear(this.activeDate),\n            this._dateAdapter.getMonth(this.activeDate), i + 1);\n      const enabled = this._shouldEnableDate(date);\n      const ariaLabel = this._dateAdapter.format(date, this._dateFormats.display.dateA11yLabel);\n      const cellClasses = this.dateClass ? this.dateClass(date) : undefined;\n\n      this._weeks[this._weeks.length - 1]\n          .push(new MatCalendarCell(i + 1, dateNames[i], ariaLabel, enabled, cellClasses));\n    }\n  }\n\n  /** Date filter for the month */\n  private _shouldEnableDate(date: D): boolean {\n    return !!date &&\n        (!this.dateFilter || this.dateFilter(date)) &&\n        (!this.minDate || this._dateAdapter.compareDate(date, this.minDate) >= 0) &&\n        (!this.maxDate || this._dateAdapter.compareDate(date, this.maxDate) <= 0);\n  }\n\n  /**\n   * Gets the date in this month that the given Date falls on.\n   * Returns null if the given Date is in another month.\n   */\n  private _getDateInCurrentMonth(date: D | null): number | null {\n    return date && this._hasSameMonthAndYear(date, this.activeDate) ?\n        this._dateAdapter.getDate(date) : null;\n  }\n\n  /** Checks whether the 2 dates are non-null and fall within the same month of the same year. */\n  private _hasSameMonthAndYear(d1: D | null, d2: D | null): boolean {\n    return !!(d1 && d2 && this._dateAdapter.getMonth(d1) == this._dateAdapter.getMonth(d2) &&\n              this._dateAdapter.getYear(d1) == this._dateAdapter.getYear(d2));\n  }\n\n  /**\n   * @param obj The object to check.\n   * @returns The given object if it is both a date instance and valid, otherwise null.\n   */\n  private _getValidDateOrNull(obj: any): D | null {\n    return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n  }\n\n  /** Determines whether the user has the RTL layout direction. */\n  private _isRtl() {\n    return this._dir && this._dir.value === 'rtl';\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  DOWN_ARROW,\n  END,\n  ENTER,\n  HOME,\n  LEFT_ARROW,\n  PAGE_DOWN,\n  PAGE_UP,\n  RIGHT_ARROW,\n  UP_ARROW,\n  SPACE,\n} from '@angular/cdk/keycodes';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  Optional,\n  Output,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {DateAdapter} from '@angular/material/core';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {MatCalendarBody, MatCalendarCell} from './calendar-body';\nimport {createMissingDateImplError} from './datepicker-errors';\n\nexport const yearsPerPage = 24;\n\nexport const yearsPerRow = 4;\n\n/**\n * An internal component used to display a year selector in the datepicker.\n * @docs-private\n */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-multi-year-view',\n  templateUrl: 'multi-year-view.html',\n  exportAs: 'matMultiYearView',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MatMultiYearView<D> implements AfterContentInit {\n  /** The date to display in this multi-year view (everything other than the year is ignored). */\n  @Input()\n  get activeDate(): D { return this._activeDate; }\n  set activeDate(value: D) {\n    let oldActiveDate = this._activeDate;\n    const validDate =\n        this._getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n    this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n\n    if (!isSameMultiYearView(\n      this._dateAdapter, oldActiveDate, this._activeDate, this.minDate, this.maxDate)) {\n      this._init();\n    }\n  }\n  private _activeDate: D;\n\n  /** The currently selected date. */\n  @Input()\n  get selected(): D | null { return this._selected; }\n  set selected(value: D | null) {\n    this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    this._selectedYear = this._selected && this._dateAdapter.getYear(this._selected);\n  }\n  private _selected: D | null;\n\n  /** The minimum selectable date. */\n  @Input()\n  get minDate(): D | null { return this._minDate; }\n  set minDate(value: D | null) {\n    this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _minDate: D | null;\n\n  /** The maximum selectable date. */\n  @Input()\n  get maxDate(): D | null { return this._maxDate; }\n  set maxDate(value: D | null) {\n    this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _maxDate: D | null;\n\n  /** A function used to filter which dates are selectable. */\n  @Input() dateFilter: (date: D) => boolean;\n\n  /** Emits when a new year is selected. */\n  @Output() readonly selectedChange: EventEmitter<D> = new EventEmitter<D>();\n\n  /** Emits the selected year. This doesn't imply a change on the selected date */\n  @Output() readonly yearSelected: EventEmitter<D> = new EventEmitter<D>();\n\n  /** Emits when any date is activated. */\n  @Output() readonly activeDateChange: EventEmitter<D> = new EventEmitter<D>();\n\n  /** The body of calendar table */\n  @ViewChild(MatCalendarBody, {static: false}) _matCalendarBody: MatCalendarBody;\n\n  /** Grid of calendar cells representing the currently displayed years. */\n  _years: MatCalendarCell[][];\n\n  /** The year that today falls on. */\n  _todayYear: number;\n\n  /** The year of the selected date. Null if the selected date is null. */\n  _selectedYear: number | null;\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef,\n              @Optional() public _dateAdapter: DateAdapter<D>,\n              @Optional() private _dir?: Directionality) {\n    if (!this._dateAdapter) {\n      throw createMissingDateImplError('DateAdapter');\n    }\n\n    this._activeDate = this._dateAdapter.today();\n  }\n\n  ngAfterContentInit() {\n    this._init();\n  }\n\n  /** Initializes this multi-year view. */\n  _init() {\n    this._todayYear = this._dateAdapter.getYear(this._dateAdapter.today());\n\n    // We want a range years such that we maximize the number of\n    // enabled dates visible at once. This prevents issues where the minimum year\n    // is the last item of a page OR the maximum year is the first item of a page.\n\n    // The offset from the active year to the \"slot\" for the starting year is the\n    // *actual* first rendered year in the multi-year view.\n    const activeYear = this._dateAdapter.getYear(this._activeDate);\n    const minYearOfPage = activeYear - getActiveOffset(\n      this._dateAdapter, this.activeDate, this.minDate, this.maxDate);\n\n    this._years = [];\n    for (let i = 0, row: number[] = []; i < yearsPerPage; i++) {\n      row.push(minYearOfPage + i);\n      if (row.length == yearsPerRow) {\n        this._years.push(row.map(year => this._createCellForYear(year)));\n        row = [];\n      }\n    }\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** Handles when a new year is selected. */\n  _yearSelected(year: number) {\n    this.yearSelected.emit(this._dateAdapter.createDate(year, 0, 1));\n    let month = this._dateAdapter.getMonth(this.activeDate);\n    let daysInMonth =\n        this._dateAdapter.getNumDaysInMonth(this._dateAdapter.createDate(year, month, 1));\n    this.selectedChange.emit(this._dateAdapter.createDate(year, month,\n        Math.min(this._dateAdapter.getDate(this.activeDate), daysInMonth)));\n  }\n\n  /** Handles keydown events on the calendar body when calendar is in multi-year view. */\n  _handleCalendarBodyKeydown(event: KeyboardEvent): void {\n    const oldActiveDate = this._activeDate;\n    const isRtl = this._isRtl();\n\n    switch (event.keyCode) {\n      case LEFT_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, isRtl ? 1 : -1);\n        break;\n      case RIGHT_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, isRtl ? -1 : 1);\n        break;\n      case UP_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, -yearsPerRow);\n        break;\n      case DOWN_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, yearsPerRow);\n        break;\n      case HOME:\n        this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate,\n          -getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate));\n        break;\n      case END:\n        this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate,\n          yearsPerPage - getActiveOffset(\n            this._dateAdapter, this.activeDate, this.minDate, this.maxDate) - 1);\n        break;\n      case PAGE_UP:\n        this.activeDate =\n            this._dateAdapter.addCalendarYears(\n                this._activeDate, event.altKey ? -yearsPerPage * 10 : -yearsPerPage);\n        break;\n      case PAGE_DOWN:\n        this.activeDate =\n            this._dateAdapter.addCalendarYears(\n                this._activeDate, event.altKey ? yearsPerPage * 10 : yearsPerPage);\n        break;\n      case ENTER:\n      case SPACE:\n        this._yearSelected(this._dateAdapter.getYear(this._activeDate));\n        break;\n      default:\n        // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n        return;\n    }\n    if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n      this.activeDateChange.emit(this.activeDate);\n    }\n\n    this._focusActiveCell();\n    // Prevent unexpected default actions such as form submission.\n    event.preventDefault();\n  }\n\n  _getActiveCell(): number {\n    return getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate);\n  }\n\n  /** Focuses the active cell after the microtask queue is empty. */\n  _focusActiveCell() {\n    this._matCalendarBody._focusActiveCell();\n  }\n\n  /** Creates an MatCalendarCell for the given year. */\n  private _createCellForYear(year: number) {\n    let yearName = this._dateAdapter.getYearName(this._dateAdapter.createDate(year, 0, 1));\n    return new MatCalendarCell(year, yearName, yearName, this._shouldEnableYear(year));\n  }\n\n  /** Whether the given year is enabled. */\n  private _shouldEnableYear(year: number) {\n    // disable if the year is greater than maxDate lower than minDate\n    if (year === undefined || year === null ||\n        (this.maxDate && year > this._dateAdapter.getYear(this.maxDate)) ||\n        (this.minDate && year < this._dateAdapter.getYear(this.minDate))) {\n      return false;\n    }\n\n    // enable if it reaches here and there's no filter defined\n    if (!this.dateFilter) {\n      return true;\n    }\n\n    const firstOfYear = this._dateAdapter.createDate(year, 0, 1);\n\n    // If any date in the year is enabled count the year as enabled.\n    for (let date = firstOfYear; this._dateAdapter.getYear(date) == year;\n      date = this._dateAdapter.addCalendarDays(date, 1)) {\n      if (this.dateFilter(date)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * @param obj The object to check.\n   * @returns The given object if it is both a date instance and valid, otherwise null.\n   */\n  private _getValidDateOrNull(obj: any): D | null {\n    return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n  }\n\n  /** Determines whether the user has the RTL layout direction. */\n  private _isRtl() {\n    return this._dir && this._dir.value === 'rtl';\n  }\n}\n\nexport function isSameMultiYearView<D>(\n  dateAdapter: DateAdapter<D>, date1: D, date2: D, minDate: D | null, maxDate: D | null): boolean {\n  const year1 = dateAdapter.getYear(date1);\n  const year2 = dateAdapter.getYear(date2);\n  const startingYear = getStartingYear(dateAdapter, minDate, maxDate);\n  return Math.floor((year1 - startingYear) / yearsPerPage) ===\n          Math.floor((year2 - startingYear) / yearsPerPage);\n}\n\n/**\n * When the multi-year view is first opened, the active year will be in view.\n * So we compute how many years are between the active year and the *slot* where our\n * \"startingYear\" will render when paged into view.\n */\nexport function getActiveOffset<D>(\n  dateAdapter: DateAdapter<D>, activeDate: D, minDate: D | null, maxDate: D | null): number {\n  const activeYear = dateAdapter.getYear(activeDate);\n  return euclideanModulo((activeYear - getStartingYear(dateAdapter, minDate, maxDate)),\n    yearsPerPage);\n}\n\n/**\n * We pick a \"starting\" year such that either the maximum year would be at the end\n * or the minimum year would be at the beginning of a page.\n */\nfunction getStartingYear<D>(\n  dateAdapter: DateAdapter<D>, minDate: D | null, maxDate: D | null): number {\n  let startingYear = 0;\n  if (maxDate) {\n    const maxYear = dateAdapter.getYear(maxDate);\n    startingYear = maxYear - yearsPerPage + 1;\n  } else if (minDate) {\n    startingYear = dateAdapter.getYear(minDate);\n  }\n  return startingYear;\n}\n\n/** Gets remainder that is non-negative, even if first number is negative */\nfunction euclideanModulo (a: number, b: number): number {\n  return (a % b + b) % b;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  DOWN_ARROW,\n  END,\n  ENTER,\n  HOME,\n  LEFT_ARROW,\n  PAGE_DOWN,\n  PAGE_UP,\n  RIGHT_ARROW,\n  UP_ARROW,\n  SPACE,\n} from '@angular/cdk/keycodes';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Inject,\n  Input,\n  Optional,\n  Output,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {DateAdapter, MAT_DATE_FORMATS, MatDateFormats} from '@angular/material/core';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {MatCalendarBody, MatCalendarCell} from './calendar-body';\nimport {createMissingDateImplError} from './datepicker-errors';\n\n/**\n * An internal component used to display a single year in the datepicker.\n * @docs-private\n */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-year-view',\n  templateUrl: 'year-view.html',\n  exportAs: 'matYearView',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MatYearView<D> implements AfterContentInit {\n  /** The date to display in this year view (everything other than the year is ignored). */\n  @Input()\n  get activeDate(): D { return this._activeDate; }\n  set activeDate(value: D) {\n    let oldActiveDate = this._activeDate;\n    const validDate =\n        this._getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n    this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n    if (this._dateAdapter.getYear(oldActiveDate) !== this._dateAdapter.getYear(this._activeDate)) {\n      this._init();\n    }\n  }\n  private _activeDate: D;\n\n  /** The currently selected date. */\n  @Input()\n  get selected(): D | null { return this._selected; }\n  set selected(value: D | null) {\n    this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    this._selectedMonth = this._getMonthInCurrentYear(this._selected);\n  }\n  private _selected: D | null;\n\n  /** The minimum selectable date. */\n  @Input()\n  get minDate(): D | null { return this._minDate; }\n  set minDate(value: D | null) {\n    this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _minDate: D | null;\n\n  /** The maximum selectable date. */\n  @Input()\n  get maxDate(): D | null { return this._maxDate; }\n  set maxDate(value: D | null) {\n    this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _maxDate: D | null;\n\n  /** A function used to filter which dates are selectable. */\n  @Input() dateFilter: (date: D) => boolean;\n\n  /** Emits when a new month is selected. */\n  @Output() readonly selectedChange: EventEmitter<D> = new EventEmitter<D>();\n\n  /** Emits the selected month. This doesn't imply a change on the selected date */\n  @Output() readonly monthSelected: EventEmitter<D> = new EventEmitter<D>();\n\n  /** Emits when any date is activated. */\n  @Output() readonly activeDateChange: EventEmitter<D> = new EventEmitter<D>();\n\n  /** The body of calendar table */\n  @ViewChild(MatCalendarBody, {static: false}) _matCalendarBody: MatCalendarBody;\n\n  /** Grid of calendar cells representing the months of the year. */\n  _months: MatCalendarCell[][];\n\n  /** The label for this year (e.g. \"2017\"). */\n  _yearLabel: string;\n\n  /** The month in this year that today falls on. Null if today is in a different year. */\n  _todayMonth: number | null;\n\n  /**\n   * The month in this year that the selected Date falls on.\n   * Null if the selected Date is in a different year.\n   */\n  _selectedMonth: number | null;\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef,\n              @Optional() @Inject(MAT_DATE_FORMATS) private _dateFormats: MatDateFormats,\n              @Optional() public _dateAdapter: DateAdapter<D>,\n              @Optional() private _dir?: Directionality) {\n    if (!this._dateAdapter) {\n      throw createMissingDateImplError('DateAdapter');\n    }\n    if (!this._dateFormats) {\n      throw createMissingDateImplError('MAT_DATE_FORMATS');\n    }\n\n    this._activeDate = this._dateAdapter.today();\n  }\n\n  ngAfterContentInit() {\n    this._init();\n  }\n\n  /** Handles when a new month is selected. */\n  _monthSelected(month: number) {\n    const normalizedDate =\n          this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1);\n\n    this.monthSelected.emit(normalizedDate);\n\n    const daysInMonth = this._dateAdapter.getNumDaysInMonth(normalizedDate);\n\n    this.selectedChange.emit(this._dateAdapter.createDate(\n        this._dateAdapter.getYear(this.activeDate), month,\n        Math.min(this._dateAdapter.getDate(this.activeDate), daysInMonth)));\n  }\n\n  /** Handles keydown events on the calendar body when calendar is in year view. */\n  _handleCalendarBodyKeydown(event: KeyboardEvent): void {\n    // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n    // disabled ones from being selected. This may not be ideal, we should look into whether\n    // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n\n    const oldActiveDate = this._activeDate;\n    const isRtl = this._isRtl();\n\n    switch (event.keyCode) {\n      case LEFT_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, isRtl ? 1 : -1);\n        break;\n      case RIGHT_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, isRtl ? -1 : 1);\n        break;\n      case UP_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, -4);\n        break;\n      case DOWN_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, 4);\n        break;\n      case HOME:\n        this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate,\n            -this._dateAdapter.getMonth(this._activeDate));\n        break;\n      case END:\n        this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate,\n            11 - this._dateAdapter.getMonth(this._activeDate));\n        break;\n      case PAGE_UP:\n        this.activeDate =\n            this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? -10 : -1);\n        break;\n      case PAGE_DOWN:\n        this.activeDate =\n            this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? 10 : 1);\n        break;\n      case ENTER:\n      case SPACE:\n        this._monthSelected(this._dateAdapter.getMonth(this._activeDate));\n        break;\n      default:\n        // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n        return;\n    }\n\n    if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n      this.activeDateChange.emit(this.activeDate);\n    }\n\n    this._focusActiveCell();\n    // Prevent unexpected default actions such as form submission.\n    event.preventDefault();\n  }\n\n  /** Initializes this year view. */\n  _init() {\n    this._selectedMonth = this._getMonthInCurrentYear(this.selected);\n    this._todayMonth = this._getMonthInCurrentYear(this._dateAdapter.today());\n    this._yearLabel = this._dateAdapter.getYearName(this.activeDate);\n\n    let monthNames = this._dateAdapter.getMonthNames('short');\n    // First row of months only contains 5 elements so we can fit the year label on the same row.\n    this._months = [[0, 1, 2, 3], [4, 5, 6, 7], [8, 9, 10, 11]].map(row => row.map(\n        month => this._createCellForMonth(month, monthNames[month])));\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** Focuses the active cell after the microtask queue is empty. */\n  _focusActiveCell() {\n    this._matCalendarBody._focusActiveCell();\n  }\n\n  /**\n   * Gets the month in this year that the given Date falls on.\n   * Returns null if the given Date is in another year.\n   */\n  private _getMonthInCurrentYear(date: D | null) {\n    return date && this._dateAdapter.getYear(date) == this._dateAdapter.getYear(this.activeDate) ?\n        this._dateAdapter.getMonth(date) : null;\n  }\n\n  /** Creates an MatCalendarCell for the given month. */\n  private _createCellForMonth(month: number, monthName: string) {\n    let ariaLabel = this._dateAdapter.format(\n        this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1),\n        this._dateFormats.display.monthYearA11yLabel);\n    return new MatCalendarCell(\n        month, monthName.toLocaleUpperCase(), ariaLabel, this._shouldEnableMonth(month));\n  }\n\n  /** Whether the given month is enabled. */\n  private _shouldEnableMonth(month: number) {\n\n    const activeYear = this._dateAdapter.getYear(this.activeDate);\n\n    if (month === undefined || month === null ||\n        this._isYearAndMonthAfterMaxDate(activeYear, month) ||\n        this._isYearAndMonthBeforeMinDate(activeYear, month)) {\n      return false;\n    }\n\n    if (!this.dateFilter) {\n      return true;\n    }\n\n    const firstOfMonth = this._dateAdapter.createDate(activeYear, month, 1);\n\n    // If any date in the month is enabled count the month as enabled.\n    for (let date = firstOfMonth; this._dateAdapter.getMonth(date) == month;\n         date = this._dateAdapter.addCalendarDays(date, 1)) {\n      if (this.dateFilter(date)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * Tests whether the combination month/year is after this.maxDate, considering\n   * just the month and year of this.maxDate\n   */\n  private _isYearAndMonthAfterMaxDate(year: number, month: number) {\n    if (this.maxDate) {\n      const maxYear = this._dateAdapter.getYear(this.maxDate);\n      const maxMonth = this._dateAdapter.getMonth(this.maxDate);\n\n      return year > maxYear || (year === maxYear && month > maxMonth);\n    }\n\n    return false;\n  }\n\n  /**\n   * Tests whether the combination month/year is before this.minDate, considering\n   * just the month and year of this.minDate\n   */\n  private _isYearAndMonthBeforeMinDate(year: number, month: number) {\n    if (this.minDate) {\n      const minYear = this._dateAdapter.getYear(this.minDate);\n      const minMonth = this._dateAdapter.getMonth(this.minDate);\n\n      return year < minYear || (year === minYear && month < minMonth);\n    }\n\n    return false;\n  }\n\n  /**\n   * @param obj The object to check.\n   * @returns The given object if it is both a date instance and valid, otherwise null.\n   */\n  private _getValidDateOrNull(obj: any): D | null {\n    return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n  }\n\n  /** Determines whether the user has the RTL layout direction. */\n  private _isRtl() {\n    return this._dir && this._dir.value === 'rtl';\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ComponentPortal, ComponentType, Portal} from '@angular/cdk/portal';\nimport {\n  AfterContentInit,\n  AfterViewChecked,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Optional,\n  Output,\n  SimpleChanges,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {DateAdapter, MAT_DATE_FORMATS, MatDateFormats} from '@angular/material/core';\nimport {Subject, Subscription} from 'rxjs';\nimport {MatCalendarCellCssClasses} from './calendar-body';\nimport {createMissingDateImplError} from './datepicker-errors';\nimport {MatDatepickerIntl} from './datepicker-intl';\nimport {MatMonthView} from './month-view';\nimport {\n  getActiveOffset,\n  isSameMultiYearView,\n  MatMultiYearView,\n  yearsPerPage\n} from './multi-year-view';\nimport {MatYearView} from './year-view';\n\n/**\n * Possible views for the calendar.\n * @docs-private\n */\nexport type MatCalendarView = 'month' | 'year' | 'multi-year';\n\n/** Default header for MatCalendar */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-calendar-header',\n  templateUrl: 'calendar-header.html',\n  exportAs: 'matCalendarHeader',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatCalendarHeader<D> {\n  constructor(private _intl: MatDatepickerIntl,\n              @Inject(forwardRef(() => MatCalendar)) public calendar: MatCalendar<D>,\n              @Optional() private _dateAdapter: DateAdapter<D>,\n              @Optional() @Inject(MAT_DATE_FORMATS) private _dateFormats: MatDateFormats,\n              changeDetectorRef: ChangeDetectorRef) {\n\n    this.calendar.stateChanges.subscribe(() => changeDetectorRef.markForCheck());\n  }\n\n  /** The label for the current calendar view. */\n  get periodButtonText(): string {\n    if (this.calendar.currentView == 'month') {\n      return this._dateAdapter\n          .format(this.calendar.activeDate, this._dateFormats.display.monthYearLabel)\n              .toLocaleUpperCase();\n    }\n    if (this.calendar.currentView == 'year') {\n      return this._dateAdapter.getYearName(this.calendar.activeDate);\n    }\n\n    // The offset from the active year to the \"slot\" for the starting year is the\n    // *actual* first rendered year in the multi-year view, and the last year is\n    // just yearsPerPage - 1 away.\n    const activeYear = this._dateAdapter.getYear(this.calendar.activeDate);\n    const minYearOfPage = activeYear - getActiveOffset(\n      this._dateAdapter, this.calendar.activeDate, this.calendar.minDate, this.calendar.maxDate);\n    const maxYearOfPage = minYearOfPage + yearsPerPage - 1;\n    const minYearName =\n      this._dateAdapter.getYearName(this._dateAdapter.createDate(minYearOfPage, 0, 1));\n    const maxYearName =\n      this._dateAdapter.getYearName(this._dateAdapter.createDate(maxYearOfPage, 0, 1));\n    return this._intl.formatYearRange(minYearName, maxYearName);\n  }\n\n  get periodButtonLabel(): string {\n    return this.calendar.currentView == 'month' ?\n        this._intl.switchToMultiYearViewLabel : this._intl.switchToMonthViewLabel;\n  }\n\n  /** The label for the previous button. */\n  get prevButtonLabel(): string {\n    return {\n      'month': this._intl.prevMonthLabel,\n      'year': this._intl.prevYearLabel,\n      'multi-year': this._intl.prevMultiYearLabel\n    }[this.calendar.currentView];\n  }\n\n  /** The label for the next button. */\n  get nextButtonLabel(): string {\n    return {\n      'month': this._intl.nextMonthLabel,\n      'year': this._intl.nextYearLabel,\n      'multi-year': this._intl.nextMultiYearLabel\n    }[this.calendar.currentView];\n  }\n\n  /** Handles user clicks on the period label. */\n  currentPeriodClicked(): void {\n    this.calendar.currentView = this.calendar.currentView == 'month' ? 'multi-year' : 'month';\n  }\n\n  /** Handles user clicks on the previous button. */\n  previousClicked(): void {\n    this.calendar.activeDate = this.calendar.currentView == 'month' ?\n        this._dateAdapter.addCalendarMonths(this.calendar.activeDate, -1) :\n            this._dateAdapter.addCalendarYears(\n                this.calendar.activeDate, this.calendar.currentView == 'year' ? -1 : -yearsPerPage\n            );\n  }\n\n  /** Handles user clicks on the next button. */\n  nextClicked(): void {\n    this.calendar.activeDate = this.calendar.currentView == 'month' ?\n        this._dateAdapter.addCalendarMonths(this.calendar.activeDate, 1) :\n            this._dateAdapter.addCalendarYears(\n                this.calendar.activeDate,\n                    this.calendar.currentView == 'year' ? 1 : yearsPerPage\n            );\n  }\n\n  /** Whether the previous period button is enabled. */\n  previousEnabled(): boolean {\n    if (!this.calendar.minDate) {\n      return true;\n    }\n    return !this.calendar.minDate ||\n        !this._isSameView(this.calendar.activeDate, this.calendar.minDate);\n  }\n\n  /** Whether the next period button is enabled. */\n  nextEnabled(): boolean {\n    return !this.calendar.maxDate ||\n        !this._isSameView(this.calendar.activeDate, this.calendar.maxDate);\n  }\n\n  /** Whether the two dates represent the same view in the current view mode (month or year). */\n  private _isSameView(date1: D, date2: D): boolean {\n    if (this.calendar.currentView == 'month') {\n      return this._dateAdapter.getYear(date1) == this._dateAdapter.getYear(date2) &&\n          this._dateAdapter.getMonth(date1) == this._dateAdapter.getMonth(date2);\n    }\n    if (this.calendar.currentView == 'year') {\n      return this._dateAdapter.getYear(date1) == this._dateAdapter.getYear(date2);\n    }\n    // Otherwise we are in 'multi-year' view.\n    return isSameMultiYearView(\n      this._dateAdapter, date1, date2, this.calendar.minDate, this.calendar.maxDate);\n  }\n}\n\n/**\n * A calendar that is used as part of the datepicker.\n * @docs-private\n */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-calendar',\n  templateUrl: 'calendar.html',\n  styleUrls: ['calendar.css'],\n  host: {\n    'class': 'mat-calendar',\n  },\n  exportAs: 'matCalendar',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatCalendar<D> implements AfterContentInit, AfterViewChecked, OnDestroy, OnChanges {\n  /** An input indicating the type of the header component, if set. */\n  @Input() headerComponent: ComponentType<any>;\n\n  /** A portal containing the header component type for this calendar. */\n  _calendarHeaderPortal: Portal<any>;\n\n  private _intlChanges: Subscription;\n\n  /**\n   * Used for scheduling that focus should be moved to the active cell on the next tick.\n   * We need to schedule it, rather than do it immediately, because we have to wait\n   * for Angular to re-evaluate the view children.\n   */\n  private _moveFocusOnNextTick = false;\n\n  /** A date representing the period (month or year) to start the calendar in. */\n  @Input()\n  get startAt(): D | null { return this._startAt; }\n  set startAt(value: D | null) {\n    this._startAt = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _startAt: D | null;\n\n  /** Whether the calendar should be started in month or year view. */\n  @Input() startView: MatCalendarView = 'month';\n\n  /** The currently selected date. */\n  @Input()\n  get selected(): D | null { return this._selected; }\n  set selected(value: D | null) {\n    this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _selected: D | null;\n\n  /** The minimum selectable date. */\n  @Input()\n  get minDate(): D | null { return this._minDate; }\n  set minDate(value: D | null) {\n    this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _minDate: D | null;\n\n  /** The maximum selectable date. */\n  @Input()\n  get maxDate(): D | null { return this._maxDate; }\n  set maxDate(value: D | null) {\n    this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _maxDate: D | null;\n\n  /** Function used to filter which dates are selectable. */\n  @Input() dateFilter: (date: D) => boolean;\n\n  /** Function that can be used to add custom CSS classes to dates. */\n  @Input() dateClass: (date: D) => MatCalendarCellCssClasses;\n\n  /** Emits when the currently selected date changes. */\n  @Output() readonly selectedChange: EventEmitter<D> = new EventEmitter<D>();\n\n  /**\n   * Emits the year chosen in multiyear view.\n   * This doesn't imply a change on the selected date.\n   */\n  @Output() readonly yearSelected: EventEmitter<D> = new EventEmitter<D>();\n\n  /**\n   * Emits the month chosen in year view.\n   * This doesn't imply a change on the selected date.\n   */\n  @Output() readonly monthSelected: EventEmitter<D> = new EventEmitter<D>();\n\n  /** Emits when any date is selected. */\n  @Output() readonly _userSelection: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Reference to the current month view component. */\n  @ViewChild(MatMonthView, {static: false}) monthView: MatMonthView<D>;\n\n  /** Reference to the current year view component. */\n  @ViewChild(MatYearView, {static: false}) yearView: MatYearView<D>;\n\n  /** Reference to the current multi-year view component. */\n  @ViewChild(MatMultiYearView, {static: false}) multiYearView: MatMultiYearView<D>;\n\n  /**\n   * The current active date. This determines which time period is shown and which date is\n   * highlighted when using keyboard navigation.\n   */\n  get activeDate(): D { return this._clampedActiveDate; }\n  set activeDate(value: D) {\n    this._clampedActiveDate = this._dateAdapter.clampDate(value, this.minDate, this.maxDate);\n    this.stateChanges.next();\n    this._changeDetectorRef.markForCheck();\n  }\n  private _clampedActiveDate: D;\n\n  /** Whether the calendar is in month view. */\n  get currentView(): MatCalendarView { return this._currentView; }\n  set currentView(value: MatCalendarView) {\n    this._currentView = value;\n    this._moveFocusOnNextTick = true;\n    this._changeDetectorRef.markForCheck();\n  }\n  private _currentView: MatCalendarView;\n\n  /**\n   * Emits whenever there is a state change that the header may need to respond to.\n   */\n  stateChanges = new Subject<void>();\n\n  constructor(_intl: MatDatepickerIntl,\n              @Optional() private _dateAdapter: DateAdapter<D>,\n              @Optional() @Inject(MAT_DATE_FORMATS) private _dateFormats: MatDateFormats,\n              private _changeDetectorRef: ChangeDetectorRef) {\n\n    if (!this._dateAdapter) {\n      throw createMissingDateImplError('DateAdapter');\n    }\n\n    if (!this._dateFormats) {\n      throw createMissingDateImplError('MAT_DATE_FORMATS');\n    }\n\n    this._intlChanges = _intl.changes.subscribe(() => {\n      _changeDetectorRef.markForCheck();\n      this.stateChanges.next();\n    });\n  }\n\n  ngAfterContentInit() {\n    this._calendarHeaderPortal = new ComponentPortal(this.headerComponent || MatCalendarHeader);\n    this.activeDate = this.startAt || this._dateAdapter.today();\n\n    // Assign to the private property since we don't want to move focus on init.\n    this._currentView = this.startView;\n  }\n\n  ngAfterViewChecked() {\n    if (this._moveFocusOnNextTick) {\n      this._moveFocusOnNextTick = false;\n      this.focusActiveCell();\n    }\n  }\n\n  ngOnDestroy() {\n    this._intlChanges.unsubscribe();\n    this.stateChanges.complete();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const change =\n        changes['minDate'] || changes['maxDate'] || changes['dateFilter'];\n\n    if (change && !change.firstChange) {\n      const view = this._getCurrentViewComponent();\n\n      if (view) {\n        // We need to `detectChanges` manually here, because the `minDate`, `maxDate` etc. are\n        // passed down to the view via data bindings which won't be up-to-date when we call `_init`.\n        this._changeDetectorRef.detectChanges();\n        view._init();\n      }\n    }\n\n    this.stateChanges.next();\n  }\n\n  focusActiveCell() {\n    this._getCurrentViewComponent()._focusActiveCell();\n  }\n\n  /** Updates today's date after an update of the active date */\n  updateTodaysDate() {\n    let view = this.currentView == 'month' ? this.monthView :\n            (this.currentView == 'year' ? this.yearView : this.multiYearView);\n\n    view.ngAfterContentInit();\n  }\n\n  /** Handles date selection in the month view. */\n  _dateSelected(date: D): void {\n    if (!this._dateAdapter.sameDate(date, this.selected)) {\n      this.selectedChange.emit(date);\n    }\n  }\n\n  /** Handles year selection in the multiyear view. */\n  _yearSelectedInMultiYearView(normalizedYear: D) {\n    this.yearSelected.emit(normalizedYear);\n  }\n\n  /** Handles month selection in the year view. */\n  _monthSelectedInYearView(normalizedMonth: D) {\n    this.monthSelected.emit(normalizedMonth);\n  }\n\n  _userSelected(): void {\n    this._userSelection.emit();\n  }\n\n  /** Handles year/month selection in the multi-year/year views. */\n  _goToDateInView(date: D, view: 'month' | 'year' | 'multi-year'): void {\n    this.activeDate = date;\n    this.currentView = view;\n  }\n\n  /**\n   * @param obj The object to check.\n   * @returns The given object if it is both a date instance and valid, otherwise null.\n   */\n  private _getValidDateOrNull(obj: any): D | null {\n    return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n  }\n\n  /** Returns the component instance that corresponds to the current calendar view. */\n  private _getCurrentViewComponent() {\n    return this.monthView || this.yearView || this.multiYearView;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n  AnimationTriggerMetadata,\n} from '@angular/animations';\n\n/**\n * Animations used by the Material datepicker.\n * @docs-private\n */\nexport const matDatepickerAnimations: {\n  readonly transformPanel: AnimationTriggerMetadata;\n  readonly fadeInCalendar: AnimationTriggerMetadata;\n} = {\n  /** Transforms the height of the datepicker's calendar. */\n  transformPanel: trigger('transformPanel', [\n    state('void', style({\n      opacity: 0,\n      transform: 'scale(1, 0.8)'\n    })),\n    transition('void => enter',  animate('120ms cubic-bezier(0, 0, 0.2, 1)', style({\n      opacity: 1,\n      transform: 'scale(1, 1)'\n    }))),\n    transition('* => void', animate('100ms linear', style({opacity: 0})))\n  ]),\n\n  /** Fades in the content of the calendar. */\n  fadeInCalendar: trigger('fadeInCalendar', [\n    state('void', style({opacity: 0})),\n    state('enter', style({opacity: 1})),\n\n    // TODO(crisbeto): this animation should be removed since it isn't quite on spec, but we\n    // need to keep it until #12440 gets in, otherwise the exit animation will look glitchy.\n    transition('void => *', animate('120ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)'))\n  ])\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directionality} from '@angular/cdk/bidi';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {ESCAPE, UP_ARROW} from '@angular/cdk/keycodes';\nimport {\n  Overlay,\n  OverlayConfig,\n  OverlayRef,\n  PositionStrategy,\n  ScrollStrategy,\n} from '@angular/cdk/overlay';\nimport {ComponentPortal, ComponentType} from '@angular/cdk/portal';\nimport {DOCUMENT} from '@angular/common';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ComponentRef,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  InjectionToken,\n  Input,\n  NgZone,\n  OnDestroy,\n  Optional,\n  Output,\n  ViewChild,\n  ViewContainerRef,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  CanColor,\n  CanColorCtor,\n  DateAdapter,\n  mixinColor,\n  ThemePalette,\n} from '@angular/material/core';\nimport {MatDialog, MatDialogRef} from '@angular/material/dialog';\nimport {merge, Subject, Subscription} from 'rxjs';\nimport {filter, take} from 'rxjs/operators';\nimport {MatCalendar} from './calendar';\nimport {matDatepickerAnimations} from './datepicker-animations';\nimport {createMissingDateImplError} from './datepicker-errors';\nimport {MatDatepickerInput} from './datepicker-input';\nimport {MatCalendarCellCssClasses} from './calendar-body';\n\n/** Used to generate a unique ID for each datepicker instance. */\nlet datepickerUid = 0;\n\n/** Injection token that determines the scroll handling while the calendar is open. */\nexport const MAT_DATEPICKER_SCROLL_STRATEGY =\n    new InjectionToken<() => ScrollStrategy>('mat-datepicker-scroll-strategy');\n\n/** @docs-private */\nexport function MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY(overlay: Overlay): () => ScrollStrategy {\n  return () => overlay.scrollStrategies.reposition();\n}\n\n/** @docs-private */\nexport const MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n  provide: MAT_DATEPICKER_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY,\n};\n\n// Boilerplate for applying mixins to MatDatepickerContent.\n/** @docs-private */\nclass MatDatepickerContentBase {\n  constructor(public _elementRef: ElementRef) { }\n}\nconst _MatDatepickerContentMixinBase: CanColorCtor & typeof MatDatepickerContentBase =\n    mixinColor(MatDatepickerContentBase);\n\n/**\n * Component used as the content for the datepicker dialog and popup. We use this instead of using\n * MatCalendar directly as the content so we can control the initial focus. This also gives us a\n * place to put additional features of the popup that are not part of the calendar itself in the\n * future. (e.g. confirmation buttons).\n * @docs-private\n */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-datepicker-content',\n  templateUrl: 'datepicker-content.html',\n  styleUrls: ['datepicker-content.css'],\n  host: {\n    'class': 'mat-datepicker-content',\n    '[@transformPanel]': '\"enter\"',\n    '[class.mat-datepicker-content-touch]': 'datepicker.touchUi',\n  },\n  animations: [\n    matDatepickerAnimations.transformPanel,\n    matDatepickerAnimations.fadeInCalendar,\n  ],\n  exportAs: 'matDatepickerContent',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  inputs: ['color'],\n})\nexport class MatDatepickerContent<D> extends _MatDatepickerContentMixinBase\n  implements AfterViewInit, CanColor {\n\n  /** Reference to the internal calendar component. */\n  @ViewChild(MatCalendar, {static: false}) _calendar: MatCalendar<D>;\n\n  /** Reference to the datepicker that created the overlay. */\n  datepicker: MatDatepicker<D>;\n\n  /** Whether the datepicker is above or below the input. */\n  _isAbove: boolean;\n\n  constructor(elementRef: ElementRef) {\n    super(elementRef);\n  }\n\n  ngAfterViewInit() {\n    this._calendar.focusActiveCell();\n  }\n}\n\n\n// TODO(mmalerba): We use a component instead of a directive here so the user can use implicit\n// template reference variables (e.g. #d vs #d=\"matDatepicker\"). We can change this to a directive\n// if angular adds support for `exportAs: '$implicit'` on directives.\n/** Component responsible for managing the datepicker popup/dialog. */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-datepicker',\n  template: '',\n  exportAs: 'matDatepicker',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class MatDatepicker<D> implements OnDestroy, CanColor {\n  private _scrollStrategy: () => ScrollStrategy;\n\n  /** An input indicating the type of the custom header component for the calendar, if set. */\n  @Input() calendarHeaderComponent: ComponentType<any>;\n\n  /** The date to open the calendar to initially. */\n  @Input()\n  get startAt(): D | null {\n    // If an explicit startAt is set we start there, otherwise we start at whatever the currently\n    // selected value is.\n    return this._startAt || (this._datepickerInput ? this._datepickerInput.value : null);\n  }\n  set startAt(value: D | null) {\n    this._startAt = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _startAt: D | null;\n\n  /** The view that the calendar should start in. */\n  @Input() startView: 'month' | 'year' | 'multi-year' = 'month';\n\n  /** Color palette to use on the datepicker's calendar. */\n  @Input()\n  get color(): ThemePalette {\n    return this._color ||\n        (this._datepickerInput ? this._datepickerInput._getThemePalette() : undefined);\n  }\n  set color(value: ThemePalette) {\n    this._color = value;\n  }\n  _color: ThemePalette;\n\n  /**\n   * Whether the calendar UI is in touch mode. In touch mode the calendar opens in a dialog rather\n   * than a popup and elements have more padding to allow for bigger touch targets.\n   */\n  @Input()\n  get touchUi(): boolean { return this._touchUi; }\n  set touchUi(value: boolean) {\n    this._touchUi = coerceBooleanProperty(value);\n  }\n  private _touchUi = false;\n\n  /** Whether the datepicker pop-up should be disabled. */\n  @Input()\n  get disabled(): boolean {\n    return this._disabled === undefined && this._datepickerInput ?\n        this._datepickerInput.disabled : !!this._disabled;\n  }\n  set disabled(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n\n    if (newValue !== this._disabled) {\n      this._disabled = newValue;\n      this._disabledChange.next(newValue);\n    }\n  }\n  private _disabled: boolean;\n\n  /**\n   * Emits selected year in multiyear view.\n   * This doesn't imply a change on the selected date.\n   */\n  @Output() readonly yearSelected: EventEmitter<D> = new EventEmitter<D>();\n\n  /**\n   * Emits selected month in year view.\n   * This doesn't imply a change on the selected date.\n   */\n  @Output() readonly monthSelected: EventEmitter<D> = new EventEmitter<D>();\n\n  /** Classes to be passed to the date picker panel. Supports the same syntax as `ngClass`. */\n  @Input() panelClass: string | string[];\n\n  /** Function that can be used to add custom CSS classes to dates. */\n  @Input() dateClass: (date: D) => MatCalendarCellCssClasses;\n\n  /** Emits when the datepicker has been opened. */\n  @Output('opened') openedStream: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Emits when the datepicker has been closed. */\n  @Output('closed') closedStream: EventEmitter<void> = new EventEmitter<void>();\n\n\n  /** Whether the calendar is open. */\n  @Input()\n  get opened(): boolean { return this._opened; }\n  set opened(value: boolean) { value ? this.open() : this.close(); }\n  private _opened = false;\n\n  /** The id for the datepicker calendar. */\n  id: string = `mat-datepicker-${datepickerUid++}`;\n\n  /** The currently selected date. */\n  get _selected(): D | null { return this._validSelected; }\n  set _selected(value: D | null) { this._validSelected = value; }\n  private _validSelected: D | null = null;\n\n  /** The minimum selectable date. */\n  get _minDate(): D | null {\n    return this._datepickerInput && this._datepickerInput.min;\n  }\n\n  /** The maximum selectable date. */\n  get _maxDate(): D | null {\n    return this._datepickerInput && this._datepickerInput.max;\n  }\n\n  get _dateFilter(): (date: D | null) => boolean {\n    return this._datepickerInput && this._datepickerInput._dateFilter;\n  }\n\n  /** A reference to the overlay when the calendar is opened as a popup. */\n  _popupRef: OverlayRef;\n\n  /** A reference to the dialog when the calendar is opened as a dialog. */\n  private _dialogRef: MatDialogRef<MatDatepickerContent<D>> | null;\n\n  /** A portal containing the calendar for this datepicker. */\n  private _calendarPortal: ComponentPortal<MatDatepickerContent<D>>;\n\n  /** Reference to the component instantiated in popup mode. */\n  private _popupComponentRef: ComponentRef<MatDatepickerContent<D>> | null;\n\n  /** The element that was focused before the datepicker was opened. */\n  private _focusedElementBeforeOpen: HTMLElement | null = null;\n\n  /** Subscription to value changes in the associated input element. */\n  private _inputSubscription = Subscription.EMPTY;\n\n  /** The input element this datepicker is associated with. */\n  _datepickerInput: MatDatepickerInput<D>;\n\n  /** Emits when the datepicker is disabled. */\n  readonly _disabledChange = new Subject<boolean>();\n\n  /** Emits new selected date when selected date changes. */\n  readonly _selectedChanged = new Subject<D>();\n\n  constructor(private _dialog: MatDialog,\n              private _overlay: Overlay,\n              private _ngZone: NgZone,\n              private _viewContainerRef: ViewContainerRef,\n              @Inject(MAT_DATEPICKER_SCROLL_STRATEGY) scrollStrategy: any,\n              @Optional() private _dateAdapter: DateAdapter<D>,\n              @Optional() private _dir: Directionality,\n              @Optional() @Inject(DOCUMENT) private _document: any) {\n    if (!this._dateAdapter) {\n      throw createMissingDateImplError('DateAdapter');\n    }\n\n    this._scrollStrategy = scrollStrategy;\n  }\n\n  ngOnDestroy() {\n    this.close();\n    this._inputSubscription.unsubscribe();\n    this._disabledChange.complete();\n\n    if (this._popupRef) {\n      this._popupRef.dispose();\n      this._popupComponentRef = null;\n    }\n  }\n\n  /** Selects the given date */\n  select(date: D): void {\n    let oldValue = this._selected;\n    this._selected = date;\n    if (!this._dateAdapter.sameDate(oldValue, this._selected)) {\n      this._selectedChanged.next(date);\n    }\n  }\n\n  /** Emits the selected year in multiyear view */\n  _selectYear(normalizedYear: D): void {\n    this.yearSelected.emit(normalizedYear);\n  }\n\n  /** Emits selected month in year view */\n  _selectMonth(normalizedMonth: D): void {\n    this.monthSelected.emit(normalizedMonth);\n  }\n\n  /**\n   * Register an input with this datepicker.\n   * @param input The datepicker input to register with this datepicker.\n   */\n  _registerInput(input: MatDatepickerInput<D>): void {\n    if (this._datepickerInput) {\n      throw Error('A MatDatepicker can only be associated with a single input.');\n    }\n    this._datepickerInput = input;\n    this._inputSubscription =\n        this._datepickerInput._valueChange.subscribe((value: D | null) => this._selected = value);\n  }\n\n  /** Open the calendar. */\n  open(): void {\n    if (this._opened || this.disabled) {\n      return;\n    }\n    if (!this._datepickerInput) {\n      throw Error('Attempted to open an MatDatepicker with no associated input.');\n    }\n    if (this._document) {\n      this._focusedElementBeforeOpen = this._document.activeElement;\n    }\n\n    this.touchUi ? this._openAsDialog() : this._openAsPopup();\n    this._opened = true;\n    this.openedStream.emit();\n  }\n\n  /** Close the calendar. */\n  close(): void {\n    if (!this._opened) {\n      return;\n    }\n    if (this._popupRef && this._popupRef.hasAttached()) {\n      this._popupRef.detach();\n    }\n    if (this._dialogRef) {\n      this._dialogRef.close();\n      this._dialogRef = null;\n    }\n    if (this._calendarPortal && this._calendarPortal.isAttached) {\n      this._calendarPortal.detach();\n    }\n\n    const completeClose = () => {\n      // The `_opened` could've been reset already if\n      // we got two events in quick succession.\n      if (this._opened) {\n        this._opened = false;\n        this.closedStream.emit();\n        this._focusedElementBeforeOpen = null;\n      }\n    };\n\n    if (this._focusedElementBeforeOpen &&\n      typeof this._focusedElementBeforeOpen.focus === 'function') {\n      // Because IE moves focus asynchronously, we can't count on it being restored before we've\n      // marked the datepicker as closed. If the event fires out of sequence and the element that\n      // we're refocusing opens the datepicker on focus, the user could be stuck with not being\n      // able to close the calendar at all. We work around it by making the logic, that marks\n      // the datepicker as closed, async as well.\n      this._focusedElementBeforeOpen.focus();\n      setTimeout(completeClose);\n    } else {\n      completeClose();\n    }\n  }\n\n  /** Open the calendar as a dialog. */\n  private _openAsDialog(): void {\n    // Usually this would be handled by `open` which ensures that we can only have one overlay\n    // open at a time, however since we reset the variables in async handlers some overlays\n    // may slip through if the user opens and closes multiple times in quick succession (e.g.\n    // by holding down the enter key).\n    if (this._dialogRef) {\n      this._dialogRef.close();\n    }\n\n    this._dialogRef = this._dialog.open<MatDatepickerContent<D>>(MatDatepickerContent, {\n      direction: this._dir ? this._dir.value : 'ltr',\n      viewContainerRef: this._viewContainerRef,\n      panelClass: 'mat-datepicker-dialog',\n    });\n\n    this._dialogRef.afterClosed().subscribe(() => this.close());\n    this._dialogRef.componentInstance.datepicker = this;\n    this._setColor();\n  }\n\n  /** Open the calendar as a popup. */\n  private _openAsPopup(): void {\n    if (!this._calendarPortal) {\n      this._calendarPortal = new ComponentPortal<MatDatepickerContent<D>>(MatDatepickerContent,\n                                                                          this._viewContainerRef);\n    }\n\n    if (!this._popupRef) {\n      this._createPopup();\n    }\n\n    if (!this._popupRef.hasAttached()) {\n      this._popupComponentRef = this._popupRef.attach(this._calendarPortal);\n      this._popupComponentRef.instance.datepicker = this;\n      this._setColor();\n\n      // Update the position once the calendar has rendered.\n      this._ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n        this._popupRef.updatePosition();\n      });\n    }\n  }\n\n  /** Create the popup. */\n  private _createPopup(): void {\n    const overlayConfig = new OverlayConfig({\n      positionStrategy: this._createPopupPositionStrategy(),\n      hasBackdrop: true,\n      backdropClass: 'mat-overlay-transparent-backdrop',\n      direction: this._dir,\n      scrollStrategy: this._scrollStrategy(),\n      panelClass: 'mat-datepicker-popup',\n    });\n\n    this._popupRef = this._overlay.create(overlayConfig);\n    this._popupRef.overlayElement.setAttribute('role', 'dialog');\n\n    merge(\n      this._popupRef.backdropClick(),\n      this._popupRef.detachments(),\n      this._popupRef.keydownEvents().pipe(filter(event => {\n        // Closing on alt + up is only valid when there's an input associated with the datepicker.\n        return event.keyCode === ESCAPE ||\n               (this._datepickerInput && event.altKey && event.keyCode === UP_ARROW);\n      }))\n    ).subscribe(event => {\n      if (event) {\n        event.preventDefault();\n      }\n\n      this.close();\n    });\n  }\n\n  /** Create the popup PositionStrategy. */\n  private _createPopupPositionStrategy(): PositionStrategy {\n    return this._overlay.position()\n      .flexibleConnectedTo(this._datepickerInput.getConnectedOverlayOrigin())\n      .withTransformOriginOn('.mat-datepicker-content')\n      .withFlexibleDimensions(false)\n      .withViewportMargin(8)\n      .withLockedPosition()\n      .withPositions([\n        {\n          originX: 'start',\n          originY: 'bottom',\n          overlayX: 'start',\n          overlayY: 'top'\n        },\n        {\n          originX: 'start',\n          originY: 'top',\n          overlayX: 'start',\n          overlayY: 'bottom'\n        },\n        {\n          originX: 'end',\n          originY: 'bottom',\n          overlayX: 'end',\n          overlayY: 'top'\n        },\n        {\n          originX: 'end',\n          originY: 'top',\n          overlayX: 'end',\n          overlayY: 'bottom'\n        }\n      ]);\n  }\n\n  /**\n   * @param obj The object to check.\n   * @returns The given object if it is both a date instance and valid, otherwise null.\n   */\n  private _getValidDateOrNull(obj: any): D | null {\n    return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n  }\n\n  /** Passes the current theme color along to the calendar overlay. */\n  private _setColor(): void {\n    const color = this.color;\n    if (this._popupComponentRef) {\n      this._popupComponentRef.instance.color = color;\n    }\n    if (this._dialogRef) {\n      this._dialogRef.componentInstance.color = color;\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {DOWN_ARROW} from '@angular/cdk/keycodes';\nimport {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  OnDestroy,\n  Optional,\n  Output,\n} from '@angular/core';\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  NG_VALIDATORS,\n  NG_VALUE_ACCESSOR,\n  ValidationErrors,\n  Validator,\n  ValidatorFn,\n  Validators,\n} from '@angular/forms';\nimport {DateAdapter, MAT_DATE_FORMATS, MatDateFormats, ThemePalette} from '@angular/material/core';\nimport {MatFormField} from '@angular/material/form-field';\nimport {MAT_INPUT_VALUE_ACCESSOR} from '@angular/material/input';\nimport {Subscription} from 'rxjs';\nimport {MatDatepicker} from './datepicker';\nimport {createMissingDateImplError} from './datepicker-errors';\n\n/** @docs-private */\nexport const MAT_DATEPICKER_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MatDatepickerInput),\n  multi: true\n};\n\n/** @docs-private */\nexport const MAT_DATEPICKER_VALIDATORS: any = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => MatDatepickerInput),\n  multi: true\n};\n\n\n/**\n * An event used for datepicker input and change events. We don't always have access to a native\n * input or change event because the event may have been triggered by the user clicking on the\n * calendar popup. For consistency, we always use MatDatepickerInputEvent instead.\n */\nexport class MatDatepickerInputEvent<D> {\n  /** The new value for the target datepicker input. */\n  value: D | null;\n\n  constructor(\n    /** Reference to the datepicker input component that emitted the event. */\n    public target: MatDatepickerInput<D>,\n    /** Reference to the native input element associated with the datepicker input. */\n    public targetElement: HTMLElement) {\n    this.value = this.target.value;\n  }\n}\n\n\n/** Directive used to connect an input to a MatDatepicker. */\n@Directive({\n  selector: 'input[matDatepicker]',\n  providers: [\n    MAT_DATEPICKER_VALUE_ACCESSOR,\n    MAT_DATEPICKER_VALIDATORS,\n    {provide: MAT_INPUT_VALUE_ACCESSOR, useExisting: MatDatepickerInput},\n  ],\n  host: {\n    '[attr.aria-haspopup]': '_datepicker ? \"dialog\" : null',\n    '[attr.aria-owns]': '(_datepicker?.opened && _datepicker.id) || null',\n    '[attr.min]': 'min ? _dateAdapter.toIso8601(min) : null',\n    '[attr.max]': 'max ? _dateAdapter.toIso8601(max) : null',\n    '[disabled]': 'disabled',\n    '(input)': '_onInput($event.target.value)',\n    '(change)': '_onChange()',\n    '(blur)': '_onBlur()',\n    '(keydown)': '_onKeydown($event)',\n  },\n  exportAs: 'matDatepickerInput',\n})\nexport class MatDatepickerInput<D> implements ControlValueAccessor, OnDestroy, Validator {\n  /** The datepicker that this input is associated with. */\n  @Input()\n  set matDatepicker(value: MatDatepicker<D>) {\n    if (!value) {\n      return;\n    }\n\n    this._datepicker = value;\n    this._datepicker._registerInput(this);\n    this._datepickerSubscription.unsubscribe();\n\n    this._datepickerSubscription = this._datepicker._selectedChanged.subscribe((selected: D) => {\n      this.value = selected;\n      this._cvaOnChange(selected);\n      this._onTouched();\n      this.dateInput.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n      this.dateChange.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n    });\n  }\n  _datepicker: MatDatepicker<D>;\n\n  /** Function that can be used to filter out dates within the datepicker. */\n  @Input()\n  set matDatepickerFilter(value: (date: D | null) => boolean) {\n    this._dateFilter = value;\n    this._validatorOnChange();\n  }\n  _dateFilter: (date: D | null) => boolean;\n\n  /** The value of the input. */\n  @Input()\n  get value(): D | null { return this._value; }\n  set value(value: D | null) {\n    value = this._dateAdapter.deserialize(value);\n    this._lastValueValid = !value || this._dateAdapter.isValid(value);\n    value = this._getValidDateOrNull(value);\n    const oldDate = this.value;\n    this._value = value;\n    this._formatValue(value);\n\n    if (!this._dateAdapter.sameDate(oldDate, value)) {\n      this._valueChange.emit(value);\n    }\n  }\n  private _value: D | null;\n\n  /** The minimum valid date. */\n  @Input()\n  get min(): D | null { return this._min; }\n  set min(value: D | null) {\n    this._min = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    this._validatorOnChange();\n  }\n  private _min: D | null;\n\n  /** The maximum valid date. */\n  @Input()\n  get max(): D | null { return this._max; }\n  set max(value: D | null) {\n    this._max = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    this._validatorOnChange();\n  }\n  private _max: D | null;\n\n  /** Whether the datepicker-input is disabled. */\n  @Input()\n  get disabled(): boolean { return !!this._disabled; }\n  set disabled(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    const element = this._elementRef.nativeElement;\n\n    if (this._disabled !== newValue) {\n      this._disabled = newValue;\n      this._disabledChange.emit(newValue);\n    }\n\n    // We need to null check the `blur` method, because it's undefined during SSR.\n    if (newValue && element.blur) {\n      // Normally, native input elements automatically blur if they turn disabled. This behavior\n      // is problematic, because it would mean that it triggers another change detection cycle,\n      // which then causes a changed after checked error if the input element was focused before.\n      element.blur();\n    }\n  }\n  private _disabled: boolean;\n\n  /** Emits when a `change` event is fired on this `<input>`. */\n  @Output() readonly dateChange: EventEmitter<MatDatepickerInputEvent<D>> =\n      new EventEmitter<MatDatepickerInputEvent<D>>();\n\n  /** Emits when an `input` event is fired on this `<input>`. */\n  @Output() readonly dateInput: EventEmitter<MatDatepickerInputEvent<D>> =\n      new EventEmitter<MatDatepickerInputEvent<D>>();\n\n  /** Emits when the value changes (either due to user input or programmatic change). */\n  _valueChange = new EventEmitter<D | null>();\n\n  /** Emits when the disabled state has changed */\n  _disabledChange = new EventEmitter<boolean>();\n\n  _onTouched = () => {};\n\n  private _cvaOnChange: (value: any) => void = () => {};\n\n  private _validatorOnChange = () => {};\n\n  private _datepickerSubscription = Subscription.EMPTY;\n\n  private _localeSubscription = Subscription.EMPTY;\n\n  /** The form control validator for whether the input parses. */\n  private _parseValidator: ValidatorFn = (): ValidationErrors | null => {\n    return this._lastValueValid ?\n        null : {'matDatepickerParse': {'text': this._elementRef.nativeElement.value}};\n  }\n\n  /** The form control validator for the min date. */\n  private _minValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n    const controlValue = this._getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n    return (!this.min || !controlValue ||\n        this._dateAdapter.compareDate(this.min, controlValue) <= 0) ?\n        null : {'matDatepickerMin': {'min': this.min, 'actual': controlValue}};\n  }\n\n  /** The form control validator for the max date. */\n  private _maxValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n    const controlValue = this._getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n    return (!this.max || !controlValue ||\n        this._dateAdapter.compareDate(this.max, controlValue) >= 0) ?\n        null : {'matDatepickerMax': {'max': this.max, 'actual': controlValue}};\n  }\n\n  /** The form control validator for the date filter. */\n  private _filterValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n    const controlValue = this._getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n    return !this._dateFilter || !controlValue || this._dateFilter(controlValue) ?\n        null : {'matDatepickerFilter': true};\n  }\n\n  /** The combined form control validator for this input. */\n  private _validator: ValidatorFn | null =\n      Validators.compose(\n          [this._parseValidator, this._minValidator, this._maxValidator, this._filterValidator]);\n\n  /** Whether the last value set on the input was valid. */\n  private _lastValueValid = false;\n\n  constructor(\n      private _elementRef: ElementRef<HTMLInputElement>,\n      @Optional() public _dateAdapter: DateAdapter<D>,\n      @Optional() @Inject(MAT_DATE_FORMATS) private _dateFormats: MatDateFormats,\n      @Optional() private _formField: MatFormField) {\n    if (!this._dateAdapter) {\n      throw createMissingDateImplError('DateAdapter');\n    }\n    if (!this._dateFormats) {\n      throw createMissingDateImplError('MAT_DATE_FORMATS');\n    }\n\n    // Update the displayed date when the locale changes.\n    this._localeSubscription = _dateAdapter.localeChanges.subscribe(() => {\n      this.value = this.value;\n    });\n  }\n\n  ngOnDestroy() {\n    this._datepickerSubscription.unsubscribe();\n    this._localeSubscription.unsubscribe();\n    this._valueChange.complete();\n    this._disabledChange.complete();\n  }\n\n  /** @docs-private */\n  registerOnValidatorChange(fn: () => void): void {\n    this._validatorOnChange = fn;\n  }\n\n  /** @docs-private */\n  validate(c: AbstractControl): ValidationErrors | null {\n    return this._validator ? this._validator(c) : null;\n  }\n\n  /**\n   * @deprecated\n   * @breaking-change 8.0.0 Use `getConnectedOverlayOrigin` instead\n   */\n  getPopupConnectionElementRef(): ElementRef {\n    return this.getConnectedOverlayOrigin();\n  }\n\n  /**\n   * Gets the element that the datepicker popup should be connected to.\n   * @return The element to connect the popup to.\n   */\n  getConnectedOverlayOrigin(): ElementRef {\n    return this._formField ? this._formField.getConnectedOverlayOrigin() : this._elementRef;\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  writeValue(value: D): void {\n    this.value = value;\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  registerOnChange(fn: (value: any) => void): void {\n    this._cvaOnChange = fn;\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  registerOnTouched(fn: () => void): void {\n    this._onTouched = fn;\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  _onKeydown(event: KeyboardEvent) {\n    const isAltDownArrow = event.altKey && event.keyCode === DOWN_ARROW;\n\n    if (this._datepicker && isAltDownArrow && !this._elementRef.nativeElement.readOnly) {\n      this._datepicker.open();\n      event.preventDefault();\n    }\n  }\n\n  _onInput(value: string) {\n    let date = this._dateAdapter.parse(value, this._dateFormats.parse.dateInput);\n    this._lastValueValid = !date || this._dateAdapter.isValid(date);\n    date = this._getValidDateOrNull(date);\n\n    if (!this._dateAdapter.sameDate(date, this._value)) {\n      this._value = date;\n      this._cvaOnChange(date);\n      this._valueChange.emit(date);\n      this.dateInput.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n    } else {\n      this._validatorOnChange();\n    }\n  }\n\n  _onChange() {\n    this.dateChange.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n  }\n\n  /** Returns the palette used by the input's form field, if any. */\n  _getThemePalette(): ThemePalette {\n    return this._formField ? this._formField.color : undefined;\n  }\n\n  /** Handles blur events on the input. */\n  _onBlur() {\n    // Reformat the input only if we have a valid value.\n    if (this.value) {\n      this._formatValue(this.value);\n    }\n\n    this._onTouched();\n  }\n\n  /** Formats a value and sets it on the input element. */\n  private _formatValue(value: D | null) {\n    this._elementRef.nativeElement.value =\n        value ? this._dateAdapter.format(value, this._dateFormats.display.dateInput) : '';\n  }\n\n  /**\n   * @param obj The object to check.\n   * @returns The given object if it is both a date instance and valid, otherwise null.\n   */\n  private _getValidDateOrNull(obj: any): D | null {\n    return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {\n  AfterContentInit,\n  Attribute,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  Directive,\n  Input,\n  OnChanges,\n  OnDestroy,\n  SimpleChanges,\n  ViewEncapsulation,\n  ViewChild,\n} from '@angular/core';\nimport {MatButton} from '@angular/material/button';\nimport {merge, of as observableOf, Subscription} from 'rxjs';\nimport {MatDatepicker} from './datepicker';\nimport {MatDatepickerIntl} from './datepicker-intl';\n\n\n/** Can be used to override the icon of a `matDatepickerToggle`. */\n@Directive({\n  selector: '[matDatepickerToggleIcon]'\n})\nexport class MatDatepickerToggleIcon {}\n\n\n@Component({\n  moduleId: module.id,\n  selector: 'mat-datepicker-toggle',\n  templateUrl: 'datepicker-toggle.html',\n  styleUrls: ['datepicker-toggle.css'],\n  host: {\n    'class': 'mat-datepicker-toggle',\n    // Always set the tabindex to -1 so that it doesn't overlap with any custom tabindex the\n    // consumer may have provided, while still being able to receive focus.\n    '[attr.tabindex]': '-1',\n    '[class.mat-datepicker-toggle-active]': 'datepicker && datepicker.opened',\n    '[class.mat-accent]': 'datepicker && datepicker.color === \"accent\"',\n    '[class.mat-warn]': 'datepicker && datepicker.color === \"warn\"',\n    '(focus)': '_button.focus()',\n  },\n  exportAs: 'matDatepickerToggle',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatDatepickerToggle<D> implements AfterContentInit, OnChanges, OnDestroy {\n  private _stateChanges = Subscription.EMPTY;\n\n  /** Datepicker instance that the button will toggle. */\n  @Input('for') datepicker: MatDatepicker<D>;\n\n  /** Tabindex for the toggle. */\n  @Input() tabIndex: number | null;\n\n  /** Whether the toggle button is disabled. */\n  @Input()\n  get disabled(): boolean {\n    if (this._disabled === undefined && this.datepicker) {\n      return this.datepicker.disabled;\n    }\n\n    return !!this._disabled;\n  }\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n  private _disabled: boolean;\n\n  /** Whether ripples on the toggle should be disabled. */\n  @Input() disableRipple: boolean;\n\n  /** Custom icon set by the consumer. */\n  @ContentChild(MatDatepickerToggleIcon, {static: false}) _customIcon: MatDatepickerToggleIcon;\n\n  /** Underlying button element. */\n  @ViewChild('button', {static: false}) _button: MatButton;\n\n  constructor(\n    public _intl: MatDatepickerIntl,\n    private _changeDetectorRef: ChangeDetectorRef,\n    @Attribute('tabindex') defaultTabIndex: string) {\n\n    const parsedTabIndex = Number(defaultTabIndex);\n    this.tabIndex = (parsedTabIndex || parsedTabIndex === 0) ? parsedTabIndex : null;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['datepicker']) {\n      this._watchStateChanges();\n    }\n  }\n\n  ngOnDestroy() {\n    this._stateChanges.unsubscribe();\n  }\n\n  ngAfterContentInit() {\n    this._watchStateChanges();\n  }\n\n  _open(event: Event): void {\n    if (this.datepicker && !this.disabled) {\n      this.datepicker.open();\n      event.stopPropagation();\n    }\n  }\n\n  private _watchStateChanges() {\n    const datepickerDisabled = this.datepicker ? this.datepicker._disabledChange : observableOf();\n    const inputDisabled = this.datepicker && this.datepicker._datepickerInput ?\n        this.datepicker._datepickerInput._disabledChange : observableOf();\n    const datepickerToggled = this.datepicker ?\n        merge(this.datepicker.openedStream, this.datepicker.closedStream) :\n        observableOf();\n\n    this._stateChanges.unsubscribe();\n    this._stateChanges = merge(\n      this._intl.changes,\n      datepickerDisabled,\n      inputDisabled,\n      datepickerToggled\n    ).subscribe(() => this._changeDetectorRef.markForCheck());\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatCalendar, MatCalendarHeader} from './calendar';\nimport {MatCalendarBody} from './calendar-body';\nimport {\n  MatDatepicker,\n  MatDatepickerContent,\n  MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER,\n} from './datepicker';\nimport {MatDatepickerInput} from './datepicker-input';\nimport {MatDatepickerIntl} from './datepicker-intl';\nimport {MatDatepickerToggle, MatDatepickerToggleIcon} from './datepicker-toggle';\nimport {MatMonthView} from './month-view';\nimport {MatMultiYearView} from './multi-year-view';\nimport {MatYearView} from './year-view';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    MatDialogModule,\n    OverlayModule,\n    A11yModule,\n    PortalModule,\n  ],\n  exports: [\n    MatCalendar,\n    MatCalendarBody,\n    MatDatepicker,\n    MatDatepickerContent,\n    MatDatepickerInput,\n    MatDatepickerToggle,\n    MatDatepickerToggleIcon,\n    MatMonthView,\n    MatYearView,\n    MatMultiYearView,\n    MatCalendarHeader,\n  ],\n  declarations: [\n    MatCalendar,\n    MatCalendarBody,\n    MatDatepicker,\n    MatDatepickerContent,\n    MatDatepickerInput,\n    MatDatepickerToggle,\n    MatDatepickerToggleIcon,\n    MatMonthView,\n    MatYearView,\n    MatMultiYearView,\n    MatCalendarHeader,\n  ],\n  providers: [\n    MatDatepickerIntl,\n    MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER,\n  ],\n  entryComponents: [\n    MatDatepickerContent,\n    MatCalendarHeader,\n  ]\n})\nexport class MatDatepickerModule {}\n"]}