{"version":3,"file":"common-module.d.ts","sources":["common-module.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AACA","sourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nimport { InjectionToken } from '@angular/core';\r\nimport { HammerLoader } from '@angular/platform-browser';\r\n/** @docs-private */\r\nexport declare function MATERIAL_SANITY_CHECKS_FACTORY(): boolean;\r\n/** Injection token that configures whether the Material sanity checks are enabled. */\r\nexport declare const MATERIAL_SANITY_CHECKS: InjectionToken<boolean>;\r\n/**\r\n * Module that captures anything that should be loaded and/or run for *all* Angular Material\r\n * components. This includes Bidi, etc.\r\n *\r\n * This module should be imported to each top-level component module (e.g., MatTabsModule).\r\n */\r\nexport declare class MatCommonModule {\r\n    private _sanityChecksEnabled;\r\n    private _hammerLoader?;\r\n    /** Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype). */\r\n    private _hasDoneGlobalChecks;\r\n    /** Whether we've already checked for HammerJs availability. */\r\n    private _hasCheckedHammer;\r\n    /** Reference to the global `document` object. */\r\n    private _document;\r\n    /** Reference to the global 'window' object. */\r\n    private _window;\r\n    constructor(_sanityChecksEnabled: boolean, _hammerLoader?: HammerLoader | undefined);\r\n    /** Whether any sanity checks are enabled */\r\n    private _areChecksEnabled;\r\n    /** Whether the code is running in tests. */\r\n    private _isTestEnv;\r\n    private _checkDoctypeIsDefined;\r\n    private _checkThemeIsPresent;\r\n    /** Checks whether the material version matches the cdk version */\r\n    private _checkCdkVersionMatch;\r\n    /** Checks whether HammerJS is available. */\r\n    _checkHammerIsAvailable(): void;\r\n}\r\n"]}