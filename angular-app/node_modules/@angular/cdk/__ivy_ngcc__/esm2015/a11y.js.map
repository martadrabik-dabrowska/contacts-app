{"version":3,"file":"a11y.js","sources":["../../../src/cdk/a11y/aria-describer/aria-reference.ts","../../../src/cdk/a11y/aria-describer/aria-describer.ts","../../../src/cdk/a11y/key-manager/list-key-manager.ts","../../../src/cdk/a11y/key-manager/activedescendant-key-manager.ts","../../../src/cdk/a11y/key-manager/focus-key-manager.ts","../../../src/cdk/a11y/interactivity-checker/interactivity-checker.ts","../../../src/cdk/a11y/focus-trap/focus-trap.ts","../../../src/cdk/a11y/live-announcer/live-announcer-tokens.ts","../../../src/cdk/a11y/live-announcer/live-announcer.ts","../../../src/cdk/a11y/focus-monitor/focus-monitor.ts","../../../src/cdk/a11y/fake-mousedown.ts","../../../src/cdk/a11y/a11y-module.ts"],"names":["observableOf"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** IDs are deliminated by an empty space, as per the spec. */\nconst ID_DELIMINATOR = ' ';\n\n/**\n * Adds the given ID to the specified ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n */\nexport function addAriaReferencedId(el: Element, attr: string, id: string) {\n  const ids = getAriaReferenceIds(el, attr);\n  if (ids.some(existingId => existingId.trim() == id.trim())) { return; }\n  ids.push(id.trim());\n\n  el.setAttribute(attr, ids.join(ID_DELIMINATOR));\n}\n\n/**\n * Removes the given ID from the specified ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n */\nexport function removeAriaReferencedId(el: Element, attr: string, id: string) {\n  const ids = getAriaReferenceIds(el, attr);\n  const filteredIds = ids.filter(val => val != id.trim());\n\n  if (filteredIds.length) {\n    el.setAttribute(attr, filteredIds.join(ID_DELIMINATOR));\n  } else {\n    el.removeAttribute(attr);\n  }\n}\n\n/**\n * Gets the list of IDs referenced by the given ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n */\nexport function getAriaReferenceIds(el: Element, attr: string): string[] {\n  // Get string array of all individual ids (whitespace deliminated) in the attribute value\n  return (el.getAttribute(attr) || '').match(/\\S+/g) || [];\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DOCUMENT} from '@angular/common';\nimport {\n  Inject,\n  Injectable,\n  InjectionToken,\n  OnDestroy,\n  Optional,\n  SkipSelf,\n} from '@angular/core';\nimport {addAriaReferencedId, getAriaReferenceIds, removeAriaReferencedId} from './aria-reference';\n\n\n/**\n * Interface used to register message elements and keep a count of how many registrations have\n * the same message and the reference to the message element used for the `aria-describedby`.\n */\nexport interface RegisteredMessage {\n  /** The element containing the message. */\n  messageElement: Element;\n\n  /** The number of elements that reference this message element via `aria-describedby`. */\n  referenceCount: number;\n}\n\n/** ID used for the body container where all messages are appended. */\nexport const MESSAGES_CONTAINER_ID = 'cdk-describedby-message-container';\n\n/** ID prefix used for each created message element. */\nexport const CDK_DESCRIBEDBY_ID_PREFIX = 'cdk-describedby-message';\n\n/** Attribute given to each host element that is described by a message element. */\nexport const CDK_DESCRIBEDBY_HOST_ATTRIBUTE = 'cdk-describedby-host';\n\n/** Global incremental identifier for each registered message element. */\nlet nextId = 0;\n\n/** Global map of all registered message elements that have been placed into the document. */\nconst messageRegistry = new Map<string|HTMLElement, RegisteredMessage>();\n\n/** Container for all registered messages. */\nlet messagesContainer: HTMLElement | null = null;\n\n/**\n * Utility that creates visually hidden elements with a message content. Useful for elements that\n * want to use aria-describedby to further describe themselves without adding additional visual\n * content.\n */\n@Injectable({providedIn: 'root'})\nexport class AriaDescriber implements OnDestroy {\n  private _document: Document;\n\n  constructor(@Inject(DOCUMENT) _document: any) {\n    this._document = _document;\n  }\n\n  /**\n   * Adds to the host element an aria-describedby reference to a hidden element that contains\n   * the message. If the same message has already been registered, then it will reuse the created\n   * message element.\n   */\n  describe(hostElement: Element, message: string|HTMLElement) {\n    if (!this._canBeDescribed(hostElement, message)) {\n      return;\n    }\n\n    if (typeof message !== 'string') {\n      // We need to ensure that the element has an ID.\n      this._setMessageId(message);\n      messageRegistry.set(message, {messageElement: message, referenceCount: 0});\n    } else if (!messageRegistry.has(message)) {\n      this._createMessageElement(message);\n    }\n\n    if (!this._isElementDescribedByMessage(hostElement, message)) {\n      this._addMessageReference(hostElement, message);\n    }\n  }\n\n  /** Removes the host element's aria-describedby reference to the message element. */\n  removeDescription(hostElement: Element, message: string|HTMLElement) {\n    if (!this._isElementNode(hostElement)) {\n      return;\n    }\n\n    if (this._isElementDescribedByMessage(hostElement, message)) {\n      this._removeMessageReference(hostElement, message);\n    }\n\n    // If the message is a string, it means that it's one that we created for the\n    // consumer so we can remove it safely, otherwise we should leave it in place.\n    if (typeof message === 'string') {\n      const registeredMessage = messageRegistry.get(message);\n      if (registeredMessage && registeredMessage.referenceCount === 0) {\n        this._deleteMessageElement(message);\n      }\n    }\n\n    if (messagesContainer && messagesContainer.childNodes.length === 0) {\n      this._deleteMessagesContainer();\n    }\n  }\n\n  /** Unregisters all created message elements and removes the message container. */\n  ngOnDestroy() {\n    const describedElements =\n        this._document.querySelectorAll(`[${CDK_DESCRIBEDBY_HOST_ATTRIBUTE}]`);\n\n    for (let i = 0; i < describedElements.length; i++) {\n      this._removeCdkDescribedByReferenceIds(describedElements[i]);\n      describedElements[i].removeAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE);\n    }\n\n    if (messagesContainer) {\n      this._deleteMessagesContainer();\n    }\n\n    messageRegistry.clear();\n  }\n\n  /**\n   * Creates a new element in the visually hidden message container element with the message\n   * as its content and adds it to the message registry.\n   */\n  private _createMessageElement(message: string) {\n    const messageElement = this._document.createElement('div');\n    this._setMessageId(messageElement);\n    messageElement.textContent = message;\n\n    this._createMessagesContainer();\n    messagesContainer!.appendChild(messageElement);\n\n    messageRegistry.set(message, {messageElement, referenceCount: 0});\n  }\n\n  /** Assigns a unique ID to an element, if it doesn't have one already. */\n  private _setMessageId(element: HTMLElement) {\n    if (!element.id) {\n      element.id = `${CDK_DESCRIBEDBY_ID_PREFIX}-${nextId++}`;\n    }\n  }\n\n  /** Deletes the message element from the global messages container. */\n  private _deleteMessageElement(message: string) {\n    const registeredMessage = messageRegistry.get(message);\n    const messageElement = registeredMessage && registeredMessage.messageElement;\n    if (messagesContainer && messageElement) {\n      messagesContainer.removeChild(messageElement);\n    }\n    messageRegistry.delete(message);\n  }\n\n  /** Creates the global container for all aria-describedby messages. */\n  private _createMessagesContainer() {\n    if (!messagesContainer) {\n      const preExistingContainer = this._document.getElementById(MESSAGES_CONTAINER_ID);\n\n      // When going from the server to the client, we may end up in a situation where there's\n      // already a container on the page, but we don't have a reference to it. Clear the\n      // old container so we don't get duplicates. Doing this, instead of emptying the previous\n      // container, should be slightly faster.\n      if (preExistingContainer) {\n        preExistingContainer.parentNode!.removeChild(preExistingContainer);\n      }\n\n      messagesContainer = this._document.createElement('div');\n      messagesContainer.id = MESSAGES_CONTAINER_ID;\n      messagesContainer.setAttribute('aria-hidden', 'true');\n      messagesContainer.style.display = 'none';\n      this._document.body.appendChild(messagesContainer);\n    }\n  }\n\n  /** Deletes the global messages container. */\n  private _deleteMessagesContainer() {\n    if (messagesContainer && messagesContainer.parentNode) {\n      messagesContainer.parentNode.removeChild(messagesContainer);\n      messagesContainer = null;\n    }\n  }\n\n  /** Removes all cdk-describedby messages that are hosted through the element. */\n  private _removeCdkDescribedByReferenceIds(element: Element) {\n    // Remove all aria-describedby reference IDs that are prefixed by CDK_DESCRIBEDBY_ID_PREFIX\n    const originalReferenceIds = getAriaReferenceIds(element, 'aria-describedby')\n        .filter(id => id.indexOf(CDK_DESCRIBEDBY_ID_PREFIX) != 0);\n    element.setAttribute('aria-describedby', originalReferenceIds.join(' '));\n  }\n\n  /**\n   * Adds a message reference to the element using aria-describedby and increments the registered\n   * message's reference count.\n   */\n  private _addMessageReference(element: Element, message: string|HTMLElement) {\n    const registeredMessage = messageRegistry.get(message)!;\n\n    // Add the aria-describedby reference and set the\n    // describedby_host attribute to mark the element.\n    addAriaReferencedId(element, 'aria-describedby', registeredMessage.messageElement.id);\n    element.setAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE, '');\n\n    registeredMessage.referenceCount++;\n  }\n\n  /**\n   * Removes a message reference from the element using aria-describedby\n   * and decrements the registered message's reference count.\n   */\n  private _removeMessageReference(element: Element, message: string|HTMLElement) {\n    const registeredMessage = messageRegistry.get(message)!;\n    registeredMessage.referenceCount--;\n\n    removeAriaReferencedId(element, 'aria-describedby', registeredMessage.messageElement.id);\n    element.removeAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE);\n  }\n\n  /** Returns true if the element has been described by the provided message ID. */\n  private _isElementDescribedByMessage(element: Element, message: string|HTMLElement): boolean {\n    const referenceIds = getAriaReferenceIds(element, 'aria-describedby');\n    const registeredMessage = messageRegistry.get(message);\n    const messageId = registeredMessage && registeredMessage.messageElement.id;\n\n    return !!messageId && referenceIds.indexOf(messageId) != -1;\n  }\n\n  /** Determines whether a message can be described on a particular element. */\n  private _canBeDescribed(element: Element, message: string|HTMLElement|void): boolean {\n    if (!this._isElementNode(element)) {\n      return false;\n    }\n\n    if (message && typeof message === 'object') {\n      // We'd have to make some assumptions about the description element's text, if the consumer\n      // passed in an element. Assume that if an element is passed in, the consumer has verified\n      // that it can be used as a description.\n      return true;\n    }\n\n    const trimmedMessage = message == null ? '' : `${message}`.trim();\n    const ariaLabel = element.getAttribute('aria-label');\n\n    // We shouldn't set descriptions if they're exactly the same as the `aria-label` of the\n    // element, because screen readers will end up reading out the same text twice in a row.\n    return trimmedMessage ? (!ariaLabel || ariaLabel.trim() !== trimmedMessage) : false;\n  }\n\n  /** Checks whether a node is an Element node. */\n  private _isElementNode(element: Node): element is Element {\n    return element.nodeType === this._document.ELEMENT_NODE;\n  }\n}\n\n\n/** @docs-private @deprecated @breaking-change 8.0.0 */\nexport function ARIA_DESCRIBER_PROVIDER_FACTORY(parentDispatcher: AriaDescriber, _document: any) {\n  return parentDispatcher || new AriaDescriber(_document);\n}\n\n/** @docs-private @deprecated @breaking-change 8.0.0 */\nexport const ARIA_DESCRIBER_PROVIDER = {\n  // If there is already an AriaDescriber available, use that. Otherwise, provide a new one.\n  provide: AriaDescriber,\n  deps: [\n    [new Optional(), new SkipSelf(), AriaDescriber],\n    DOCUMENT as InjectionToken<any>\n  ],\n  useFactory: ARIA_DESCRIBER_PROVIDER_FACTORY\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {QueryList} from '@angular/core';\nimport {Subject, Subscription} from 'rxjs';\nimport {\n  UP_ARROW,\n  DOWN_ARROW,\n  LEFT_ARROW,\n  RIGHT_ARROW,\n  TAB,\n  A,\n  Z,\n  ZERO,\n  NINE,\n  hasModifierKey,\n} from '@angular/cdk/keycodes';\nimport {debounceTime, filter, map, tap} from 'rxjs/operators';\n\n/** This interface is for items that can be passed to a ListKeyManager. */\nexport interface ListKeyManagerOption {\n  /** Whether the option is disabled. */\n  disabled?: boolean;\n\n  /** Gets the label for this option. */\n  getLabel?(): string;\n}\n\n/** Modifier keys handled by the ListKeyManager. */\nexport type ListKeyManagerModifierKey = 'altKey' | 'ctrlKey' | 'metaKey' | 'shiftKey';\n\n/**\n * This class manages keyboard events for selectable lists. If you pass it a query list\n * of items, it will set the active item correctly when arrow events occur.\n */\nexport class ListKeyManager<T extends ListKeyManagerOption> {\n  private _activeItemIndex = -1;\n  private _activeItem: T | null = null;\n  private _wrap = false;\n  private _letterKeyStream = new Subject<string>();\n  private _typeaheadSubscription = Subscription.EMPTY;\n  private _vertical = true;\n  private _horizontal: 'ltr' | 'rtl' | null;\n  private _allowedModifierKeys: ListKeyManagerModifierKey[] = [];\n\n  /**\n   * Predicate function that can be used to check whether an item should be skipped\n   * by the key manager. By default, disabled items are skipped.\n   */\n  private _skipPredicateFn = (item: T) => item.disabled;\n\n  // Buffer for the letters that the user has pressed when the typeahead option is turned on.\n  private _pressedLetters: string[] = [];\n\n  constructor(private _items: QueryList<T> | T[]) {\n    // We allow for the items to be an array because, in some cases, the consumer may\n    // not have access to a QueryList of the items they want to manage (e.g. when the\n    // items aren't being collected via `ViewChildren` or `ContentChildren`).\n    if (_items instanceof QueryList) {\n      _items.changes.subscribe((newItems: QueryList<T>) => {\n        if (this._activeItem) {\n          const itemArray = newItems.toArray();\n          const newIndex = itemArray.indexOf(this._activeItem);\n\n          if (newIndex > -1 && newIndex !== this._activeItemIndex) {\n            this._activeItemIndex = newIndex;\n          }\n        }\n      });\n    }\n  }\n\n  /**\n   * Stream that emits any time the TAB key is pressed, so components can react\n   * when focus is shifted off of the list.\n   */\n  tabOut: Subject<void> = new Subject<void>();\n\n  /** Stream that emits whenever the active item of the list manager changes. */\n  change = new Subject<number>();\n\n  /**\n   * Sets the predicate function that determines which items should be skipped by the\n   * list key manager.\n   * @param predicate Function that determines whether the given item should be skipped.\n   */\n  skipPredicate(predicate: (item: T) => boolean): this {\n    this._skipPredicateFn = predicate;\n    return this;\n  }\n\n  /**\n   * Configures wrapping mode, which determines whether the active item will wrap to\n   * the other end of list when there are no more items in the given direction.\n   * @param shouldWrap Whether the list should wrap when reaching the end.\n   */\n  withWrap(shouldWrap = true): this {\n    this._wrap = shouldWrap;\n    return this;\n  }\n\n  /**\n   * Configures whether the key manager should be able to move the selection vertically.\n   * @param enabled Whether vertical selection should be enabled.\n   */\n  withVerticalOrientation(enabled: boolean = true): this {\n    this._vertical = enabled;\n    return this;\n  }\n\n  /**\n   * Configures the key manager to move the selection horizontally.\n   * Passing in `null` will disable horizontal movement.\n   * @param direction Direction in which the selection can be moved.\n   */\n  withHorizontalOrientation(direction: 'ltr' | 'rtl' | null): this {\n    this._horizontal = direction;\n    return this;\n  }\n\n  /**\n   * Modifier keys which are allowed to be held down and whose default actions will be prevented\n   * as the user is pressing the arrow keys. Defaults to not allowing any modifier keys.\n   */\n  withAllowedModifierKeys(keys: ListKeyManagerModifierKey[]): this {\n    this._allowedModifierKeys = keys;\n    return this;\n  }\n\n  /**\n   * Turns on typeahead mode which allows users to set the active item by typing.\n   * @param debounceInterval Time to wait after the last keystroke before setting the active item.\n   */\n  withTypeAhead(debounceInterval: number = 200): this {\n    if (this._items.length && this._items.some(item => typeof item.getLabel !== 'function')) {\n      throw Error('ListKeyManager items in typeahead mode must implement the `getLabel` method.');\n    }\n\n    this._typeaheadSubscription.unsubscribe();\n\n    // Debounce the presses of non-navigational keys, collect the ones that correspond to letters\n    // and convert those letters back into a string. Afterwards find the first item that starts\n    // with that string and select it.\n    this._typeaheadSubscription = this._letterKeyStream.pipe(\n      tap(keyCode => this._pressedLetters.push(keyCode)),\n      debounceTime(debounceInterval),\n      filter(() => this._pressedLetters.length > 0),\n      map(() => this._pressedLetters.join(''))\n    ).subscribe(inputString => {\n      const items = this._getItemsArray();\n\n      // Start at 1 because we want to start searching at the item immediately\n      // following the current active item.\n      for (let i = 1; i < items.length + 1; i++) {\n        const index = (this._activeItemIndex + i) % items.length;\n        const item = items[index];\n\n        if (!this._skipPredicateFn(item) &&\n            item.getLabel!().toUpperCase().trim().indexOf(inputString) === 0) {\n\n          this.setActiveItem(index);\n          break;\n        }\n      }\n\n      this._pressedLetters = [];\n    });\n\n    return this;\n  }\n\n  /**\n   * Sets the active item to the item at the index specified.\n   * @param index The index of the item to be set as active.\n   */\n  setActiveItem(index: number): void;\n\n  /**\n   * Sets the active item to the specified item.\n   * @param item The item to be set as active.\n   */\n  setActiveItem(item: T): void;\n\n  setActiveItem(item: any): void {\n    const previousIndex = this._activeItemIndex;\n\n    this.updateActiveItem(item);\n\n    if (this._activeItemIndex !== previousIndex) {\n      this.change.next(this._activeItemIndex);\n    }\n  }\n\n  /**\n   * Sets the active item depending on the key event passed in.\n   * @param event Keyboard event to be used for determining which element should be active.\n   */\n  onKeydown(event: KeyboardEvent): void {\n    const keyCode = event.keyCode;\n    const modifiers: ListKeyManagerModifierKey[] = ['altKey', 'ctrlKey', 'metaKey', 'shiftKey'];\n    const isModifierAllowed = modifiers.every(modifier => {\n      return !event[modifier] || this._allowedModifierKeys.indexOf(modifier) > -1;\n    });\n\n    switch (keyCode) {\n      case TAB:\n        this.tabOut.next();\n        return;\n\n      case DOWN_ARROW:\n        if (this._vertical && isModifierAllowed) {\n          this.setNextItemActive();\n          break;\n        } else {\n          return;\n        }\n\n      case UP_ARROW:\n        if (this._vertical && isModifierAllowed) {\n          this.setPreviousItemActive();\n          break;\n        } else {\n          return;\n        }\n\n      case RIGHT_ARROW:\n        if (this._horizontal && isModifierAllowed) {\n          this._horizontal === 'rtl' ? this.setPreviousItemActive() : this.setNextItemActive();\n          break;\n        } else {\n          return;\n        }\n\n      case LEFT_ARROW:\n        if (this._horizontal && isModifierAllowed) {\n          this._horizontal === 'rtl' ? this.setNextItemActive() : this.setPreviousItemActive();\n          break;\n        } else {\n          return;\n        }\n\n      default:\n      if (isModifierAllowed || hasModifierKey(event, 'shiftKey')) {\n          // Attempt to use the `event.key` which also maps it to the user's keyboard language,\n          // otherwise fall back to resolving alphanumeric characters via the keyCode.\n          if (event.key && event.key.length === 1) {\n            this._letterKeyStream.next(event.key.toLocaleUpperCase());\n          } else if ((keyCode >= A && keyCode <= Z) || (keyCode >= ZERO && keyCode <= NINE)) {\n            this._letterKeyStream.next(String.fromCharCode(keyCode));\n          }\n        }\n\n        // Note that we return here, in order to avoid preventing\n        // the default action of non-navigational keys.\n        return;\n    }\n\n    this._pressedLetters = [];\n    event.preventDefault();\n  }\n\n  /** Index of the currently active item. */\n  get activeItemIndex(): number | null {\n    return this._activeItemIndex;\n  }\n\n  /** The active item. */\n  get activeItem(): T | null {\n    return this._activeItem;\n  }\n\n  /** Sets the active item to the first enabled item in the list. */\n  setFirstItemActive(): void {\n    this._setActiveItemByIndex(0, 1);\n  }\n\n  /** Sets the active item to the last enabled item in the list. */\n  setLastItemActive(): void {\n    this._setActiveItemByIndex(this._items.length - 1, -1);\n  }\n\n  /** Sets the active item to the next enabled item in the list. */\n  setNextItemActive(): void {\n    this._activeItemIndex < 0 ? this.setFirstItemActive() : this._setActiveItemByDelta(1);\n  }\n\n  /** Sets the active item to a previous enabled item in the list. */\n  setPreviousItemActive(): void {\n    this._activeItemIndex < 0 && this._wrap ? this.setLastItemActive()\n                                            : this._setActiveItemByDelta(-1);\n  }\n\n  /**\n   * Allows setting the active without any other effects.\n   * @param index Index of the item to be set as active.\n   */\n  updateActiveItem(index: number): void;\n\n  /**\n   * Allows setting the active item without any other effects.\n   * @param item Item to be set as active.\n   */\n  updateActiveItem(item: T): void;\n\n  updateActiveItem(item: any): void {\n    const itemArray = this._getItemsArray();\n    const index = typeof item === 'number' ? item : itemArray.indexOf(item);\n    const activeItem = itemArray[index];\n\n    // Explicitly check for `null` and `undefined` because other falsy values are valid.\n    this._activeItem = activeItem == null ? null : activeItem;\n    this._activeItemIndex = index;\n  }\n\n  /**\n   * Allows setting of the activeItemIndex without any other effects.\n   * @param index The new activeItemIndex.\n   * @deprecated Use `updateActiveItem` instead.\n   * @breaking-change 8.0.0\n   */\n  updateActiveItemIndex(index: number): void {\n    this.updateActiveItem(index);\n  }\n\n  /**\n   * This method sets the active item, given a list of items and the delta between the\n   * currently active item and the new active item. It will calculate differently\n   * depending on whether wrap mode is turned on.\n   */\n  private _setActiveItemByDelta(delta: -1 | 1): void {\n    this._wrap ? this._setActiveInWrapMode(delta) : this._setActiveInDefaultMode(delta);\n  }\n\n  /**\n   * Sets the active item properly given \"wrap\" mode. In other words, it will continue to move\n   * down the list until it finds an item that is not disabled, and it will wrap if it\n   * encounters either end of the list.\n   */\n  private _setActiveInWrapMode(delta: -1 | 1): void {\n    const items = this._getItemsArray();\n\n    for (let i = 1; i <= items.length; i++) {\n      const index = (this._activeItemIndex + (delta * i) + items.length) % items.length;\n      const item = items[index];\n\n      if (!this._skipPredicateFn(item)) {\n        this.setActiveItem(index);\n        return;\n      }\n    }\n  }\n\n  /**\n   * Sets the active item properly given the default mode. In other words, it will\n   * continue to move down the list until it finds an item that is not disabled. If\n   * it encounters either end of the list, it will stop and not wrap.\n   */\n  private _setActiveInDefaultMode(delta: -1 | 1): void {\n    this._setActiveItemByIndex(this._activeItemIndex + delta, delta);\n  }\n\n  /**\n   * Sets the active item to the first enabled item starting at the index specified. If the\n   * item is disabled, it will move in the fallbackDelta direction until it either\n   * finds an enabled item or encounters the end of the list.\n   */\n  private _setActiveItemByIndex(index: number, fallbackDelta: -1 | 1): void {\n    const items = this._getItemsArray();\n\n    if (!items[index]) {\n      return;\n    }\n\n    while (this._skipPredicateFn(items[index])) {\n      index += fallbackDelta;\n\n      if (!items[index]) {\n        return;\n      }\n    }\n\n    this.setActiveItem(index);\n  }\n\n  /** Returns the items as an array. */\n  private _getItemsArray(): T[] {\n    return this._items instanceof QueryList ? this._items.toArray() : this._items;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ListKeyManager, ListKeyManagerOption} from './list-key-manager';\n\n/**\n * This is the interface for highlightable items (used by the ActiveDescendantKeyManager).\n * Each item must know how to style itself as active or inactive and whether or not it is\n * currently disabled.\n */\nexport interface Highlightable extends ListKeyManagerOption {\n  /** Applies the styles for an active item to this item. */\n  setActiveStyles(): void;\n\n  /** Applies the styles for an inactive item to this item. */\n  setInactiveStyles(): void;\n}\n\nexport class ActiveDescendantKeyManager<T> extends ListKeyManager<Highlightable & T> {\n\n  /**\n   * Sets the active item to the item at the specified index and adds the\n   * active styles to the newly active item. Also removes active styles\n   * from the previously active item.\n   * @param index Index of the item to be set as active.\n   */\n  setActiveItem(index: number): void;\n\n  /**\n   * Sets the active item to the item to the specified one and adds the\n   * active styles to the it. Also removes active styles from the\n   * previously active item.\n   * @param item Item to be set as active.\n   */\n  setActiveItem(item: T): void;\n\n  setActiveItem(index: any): void {\n    if (this.activeItem) {\n      this.activeItem.setInactiveStyles();\n    }\n    super.setActiveItem(index);\n    if (this.activeItem) {\n      this.activeItem.setActiveStyles();\n    }\n  }\n\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ListKeyManager, ListKeyManagerOption} from './list-key-manager';\nimport {FocusOrigin} from '../focus-monitor/focus-monitor';\n\n/**\n * This is the interface for focusable items (used by the FocusKeyManager).\n * Each item must know how to focus itself, whether or not it is currently disabled\n * and be able to supply its label.\n */\nexport interface FocusableOption extends ListKeyManagerOption {\n  /** Focuses the `FocusableOption`. */\n  focus(origin?: FocusOrigin): void;\n}\n\nexport class FocusKeyManager<T> extends ListKeyManager<FocusableOption & T> {\n  private _origin: FocusOrigin = 'program';\n\n  /**\n   * Sets the focus origin that will be passed in to the items for any subsequent `focus` calls.\n   * @param origin Focus origin to be used when focusing items.\n   */\n  setFocusOrigin(origin: FocusOrigin): this {\n    this._origin = origin;\n    return this;\n  }\n\n  /**\n   * Sets the active item to the item at the specified\n   * index and focuses the newly active item.\n   * @param index Index of the item to be set as active.\n   */\n  setActiveItem(index: number): void;\n\n  /**\n   * Sets the active item to the item that is specified and focuses it.\n   * @param item Item to be set as active.\n   */\n  setActiveItem(item: T): void;\n\n  setActiveItem(item: any): void {\n    super.setActiveItem(item);\n\n    if (this.activeItem) {\n      this.activeItem.focus(this._origin);\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Platform} from '@angular/cdk/platform';\nimport {Injectable} from '@angular/core';\n\n\n// The InteractivityChecker leans heavily on the ally.js accessibility utilities.\n// Methods like `isTabbable` are only covering specific edge-cases for the browsers which are\n// supported.\n\n/**\n * Utility for checking the interactivity of an element, such as whether is is focusable or\n * tabbable.\n */\n@Injectable({providedIn: 'root'})\nexport class InteractivityChecker {\n\n  constructor(private _platform: Platform) {}\n\n  /**\n   * Gets whether an element is disabled.\n   *\n   * @param element Element to be checked.\n   * @returns Whether the element is disabled.\n   */\n  isDisabled(element: HTMLElement): boolean {\n    // This does not capture some cases, such as a non-form control with a disabled attribute or\n    // a form control inside of a disabled form, but should capture the most common cases.\n    return element.hasAttribute('disabled');\n  }\n\n  /**\n   * Gets whether an element is visible for the purposes of interactivity.\n   *\n   * This will capture states like `display: none` and `visibility: hidden`, but not things like\n   * being clipped by an `overflow: hidden` parent or being outside the viewport.\n   *\n   * @returns Whether the element is visible.\n   */\n  isVisible(element: HTMLElement): boolean {\n    return hasGeometry(element) && getComputedStyle(element).visibility === 'visible';\n  }\n\n  /**\n   * Gets whether an element can be reached via Tab key.\n   * Assumes that the element has already been checked with isFocusable.\n   *\n   * @param element Element to be checked.\n   * @returns Whether the element is tabbable.\n   */\n  isTabbable(element: HTMLElement): boolean {\n    // Nothing is tabbable on the server 😎\n    if (!this._platform.isBrowser) {\n      return false;\n    }\n\n    const frameElement = getFrameElement(getWindow(element));\n\n    if (frameElement) {\n      const frameType = frameElement && frameElement.nodeName.toLowerCase();\n\n      // Frame elements inherit their tabindex onto all child elements.\n      if (getTabIndexValue(frameElement) === -1) {\n        return false;\n      }\n\n      // Webkit and Blink consider anything inside of an <object> element as non-tabbable.\n      if ((this._platform.BLINK || this._platform.WEBKIT) && frameType === 'object') {\n        return false;\n      }\n\n      // Webkit and Blink disable tabbing to an element inside of an invisible frame.\n      if ((this._platform.BLINK || this._platform.WEBKIT) && !this.isVisible(frameElement)) {\n        return false;\n      }\n\n    }\n\n    let nodeName = element.nodeName.toLowerCase();\n    let tabIndexValue = getTabIndexValue(element);\n\n    if (element.hasAttribute('contenteditable')) {\n      return tabIndexValue !== -1;\n    }\n\n    if (nodeName === 'iframe') {\n      // The frames may be tabbable depending on content, but it's not possibly to reliably\n      // investigate the content of the frames.\n      return false;\n    }\n\n    if (nodeName === 'audio') {\n      if (!element.hasAttribute('controls')) {\n        // By default an <audio> element without the controls enabled is not tabbable.\n        return false;\n      } else if (this._platform.BLINK) {\n        // In Blink <audio controls> elements are always tabbable.\n        return true;\n      }\n    }\n\n    if (nodeName === 'video') {\n      if (!element.hasAttribute('controls') && this._platform.TRIDENT) {\n        // In Trident a <video> element without the controls enabled is not tabbable.\n        return false;\n      } else if (this._platform.BLINK || this._platform.FIREFOX) {\n        // In Chrome and Firefox <video controls> elements are always tabbable.\n        return true;\n      }\n    }\n\n    if (nodeName === 'object' && (this._platform.BLINK || this._platform.WEBKIT)) {\n      // In all Blink and WebKit based browsers <object> elements are never tabbable.\n      return false;\n    }\n\n    // In iOS the browser only considers some specific elements as tabbable.\n    if (this._platform.WEBKIT && this._platform.IOS && !isPotentiallyTabbableIOS(element)) {\n      return false;\n    }\n\n    return element.tabIndex >= 0;\n  }\n\n  /**\n   * Gets whether an element can be focused by the user.\n   *\n   * @param element Element to be checked.\n   * @returns Whether the element is focusable.\n   */\n  isFocusable(element: HTMLElement): boolean {\n    // Perform checks in order of left to most expensive.\n    // Again, naive approach that does not capture many edge cases and browser quirks.\n    return isPotentiallyFocusable(element) && !this.isDisabled(element) && this.isVisible(element);\n  }\n\n}\n\n/**\n * Returns the frame element from a window object. Since browsers like MS Edge throw errors if\n * the frameElement property is being accessed from a different host address, this property\n * should be accessed carefully.\n */\nfunction getFrameElement(window: Window) {\n  try {\n    return window.frameElement as HTMLElement;\n  } catch {\n    return null;\n  }\n}\n\n/** Checks whether the specified element has any geometry / rectangles. */\nfunction hasGeometry(element: HTMLElement): boolean {\n  // Use logic from jQuery to check for an invisible element.\n  // See https://github.com/jquery/jquery/blob/master/src/css/hiddenVisibleSelectors.js#L12\n  return !!(element.offsetWidth || element.offsetHeight ||\n      (typeof element.getClientRects === 'function' && element.getClientRects().length));\n}\n\n/** Gets whether an element's  */\nfunction isNativeFormElement(element: Node) {\n  let nodeName = element.nodeName.toLowerCase();\n  return nodeName === 'input' ||\n      nodeName === 'select' ||\n      nodeName === 'button' ||\n      nodeName === 'textarea';\n}\n\n/** Gets whether an element is an `<input type=\"hidden\">`. */\nfunction isHiddenInput(element: HTMLElement): boolean {\n  return isInputElement(element) && element.type == 'hidden';\n}\n\n/** Gets whether an element is an anchor that has an href attribute. */\nfunction isAnchorWithHref(element: HTMLElement): boolean {\n  return isAnchorElement(element) && element.hasAttribute('href');\n}\n\n/** Gets whether an element is an input element. */\nfunction isInputElement(element: HTMLElement): element is HTMLInputElement {\n  return element.nodeName.toLowerCase() == 'input';\n}\n\n/** Gets whether an element is an anchor element. */\nfunction isAnchorElement(element: HTMLElement): element is HTMLAnchorElement {\n  return element.nodeName.toLowerCase() == 'a';\n}\n\n/** Gets whether an element has a valid tabindex. */\nfunction hasValidTabIndex(element: HTMLElement): boolean {\n  if (!element.hasAttribute('tabindex') || element.tabIndex === undefined) {\n    return false;\n  }\n\n  let tabIndex = element.getAttribute('tabindex');\n\n  // IE11 parses tabindex=\"\" as the value \"-32768\"\n  if (tabIndex == '-32768') {\n    return false;\n  }\n\n  return !!(tabIndex && !isNaN(parseInt(tabIndex, 10)));\n}\n\n/**\n * Returns the parsed tabindex from the element attributes instead of returning the\n * evaluated tabindex from the browsers defaults.\n */\nfunction getTabIndexValue(element: HTMLElement): number | null {\n  if (!hasValidTabIndex(element)) {\n    return null;\n  }\n\n  // See browser issue in Gecko https://bugzilla.mozilla.org/show_bug.cgi?id=1128054\n  const tabIndex = parseInt(element.getAttribute('tabindex') || '', 10);\n\n  return isNaN(tabIndex) ? -1 : tabIndex;\n}\n\n/** Checks whether the specified element is potentially tabbable on iOS */\nfunction isPotentiallyTabbableIOS(element: HTMLElement): boolean {\n  let nodeName = element.nodeName.toLowerCase();\n  let inputType = nodeName === 'input' && (element as HTMLInputElement).type;\n\n  return inputType === 'text'\n      || inputType === 'password'\n      || nodeName === 'select'\n      || nodeName === 'textarea';\n}\n\n/**\n * Gets whether an element is potentially focusable without taking current visible/disabled state\n * into account.\n */\nfunction isPotentiallyFocusable(element: HTMLElement): boolean {\n  // Inputs are potentially focusable *unless* they're type=\"hidden\".\n  if (isHiddenInput(element)) {\n    return false;\n  }\n\n  return isNativeFormElement(element) ||\n      isAnchorWithHref(element) ||\n      element.hasAttribute('contenteditable') ||\n      hasValidTabIndex(element);\n}\n\n/** Gets the parent window of a DOM node with regards of being inside of an iframe. */\nfunction getWindow(node: HTMLElement): Window {\n  // ownerDocument is null if `node` itself *is* a document.\n  return node.ownerDocument && node.ownerDocument.defaultView || window;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {DOCUMENT} from '@angular/common';\nimport {\n  AfterContentInit,\n  Directive,\n  ElementRef,\n  Inject,\n  Injectable,\n  Input,\n  NgZone,\n  OnDestroy,\n  DoCheck,\n  isDevMode,\n} from '@angular/core';\nimport {take} from 'rxjs/operators';\nimport {InteractivityChecker} from '../interactivity-checker/interactivity-checker';\n\n\n/**\n * Class that allows for trapping focus within a DOM element.\n *\n * This class currently uses a relatively simple approach to focus trapping.\n * It assumes that the tab order is the same as DOM order, which is not necessarily true.\n * Things like `tabIndex > 0`, flex `order`, and shadow roots can cause to two to misalign.\n */\nexport class FocusTrap {\n  private _startAnchor: HTMLElement | null;\n  private _endAnchor: HTMLElement | null;\n  private _hasAttached = false;\n\n  // Event listeners for the anchors. Need to be regular functions so that we can unbind them later.\n  protected startAnchorListener = () => this.focusLastTabbableElement();\n  protected endAnchorListener = () => this.focusFirstTabbableElement();\n\n  /** Whether the focus trap is active. */\n  get enabled(): boolean { return this._enabled; }\n  set enabled(value: boolean) {\n    this._enabled = value;\n\n    if (this._startAnchor && this._endAnchor) {\n      this._toggleAnchorTabIndex(value, this._startAnchor);\n      this._toggleAnchorTabIndex(value, this._endAnchor);\n    }\n  }\n  private _enabled: boolean = true;\n\n  constructor(\n    private _element: HTMLElement,\n    private _checker: InteractivityChecker,\n    private _ngZone: NgZone,\n    private _document: Document,\n    deferAnchors = false) {\n\n    if (!deferAnchors) {\n      this.attachAnchors();\n    }\n  }\n\n  /** Destroys the focus trap by cleaning up the anchors. */\n  destroy() {\n    const startAnchor = this._startAnchor;\n    const endAnchor = this._endAnchor;\n\n    if (startAnchor) {\n      startAnchor.removeEventListener('focus', this.startAnchorListener);\n\n      if (startAnchor.parentNode) {\n        startAnchor.parentNode.removeChild(startAnchor);\n      }\n    }\n\n    if (endAnchor) {\n      endAnchor.removeEventListener('focus', this.endAnchorListener);\n\n      if (endAnchor.parentNode) {\n        endAnchor.parentNode.removeChild(endAnchor);\n      }\n    }\n\n    this._startAnchor = this._endAnchor = null;\n  }\n\n  /**\n   * Inserts the anchors into the DOM. This is usually done automatically\n   * in the constructor, but can be deferred for cases like directives with `*ngIf`.\n   * @returns Whether the focus trap managed to attach successfuly. This may not be the case\n   * if the target element isn't currently in the DOM.\n   */\n  attachAnchors(): boolean {\n    // If we're not on the browser, there can be no focus to trap.\n    if (this._hasAttached) {\n      return true;\n    }\n\n    this._ngZone.runOutsideAngular(() => {\n      if (!this._startAnchor) {\n        this._startAnchor = this._createAnchor();\n        this._startAnchor!.addEventListener('focus', this.startAnchorListener);\n      }\n\n      if (!this._endAnchor) {\n        this._endAnchor = this._createAnchor();\n        this._endAnchor!.addEventListener('focus', this.endAnchorListener);\n      }\n    });\n\n    if (this._element.parentNode) {\n      this._element.parentNode.insertBefore(this._startAnchor!, this._element);\n      this._element.parentNode.insertBefore(this._endAnchor!, this._element.nextSibling);\n      this._hasAttached = true;\n    }\n\n    return this._hasAttached;\n  }\n\n  /**\n   * Waits for the zone to stabilize, then either focuses the first element that the\n   * user specified, or the first tabbable element.\n   * @returns Returns a promise that resolves with a boolean, depending\n   * on whether focus was moved successfuly.\n   */\n  focusInitialElementWhenReady(): Promise<boolean> {\n    return new Promise<boolean>(resolve => {\n      this._executeOnStable(() => resolve(this.focusInitialElement()));\n    });\n  }\n\n  /**\n   * Waits for the zone to stabilize, then focuses\n   * the first tabbable element within the focus trap region.\n   * @returns Returns a promise that resolves with a boolean, depending\n   * on whether focus was moved successfuly.\n   */\n  focusFirstTabbableElementWhenReady(): Promise<boolean> {\n    return new Promise<boolean>(resolve => {\n      this._executeOnStable(() => resolve(this.focusFirstTabbableElement()));\n    });\n  }\n\n  /**\n   * Waits for the zone to stabilize, then focuses\n   * the last tabbable element within the focus trap region.\n   * @returns Returns a promise that resolves with a boolean, depending\n   * on whether focus was moved successfuly.\n   */\n  focusLastTabbableElementWhenReady(): Promise<boolean> {\n    return new Promise<boolean>(resolve => {\n      this._executeOnStable(() => resolve(this.focusLastTabbableElement()));\n    });\n  }\n\n  /**\n   * Get the specified boundary element of the trapped region.\n   * @param bound The boundary to get (start or end of trapped region).\n   * @returns The boundary element.\n   */\n  private _getRegionBoundary(bound: 'start' | 'end'): HTMLElement | null {\n    // Contains the deprecated version of selector, for temporary backwards comparability.\n    let markers = this._element.querySelectorAll(`[cdk-focus-region-${bound}], ` +\n                                                 `[cdkFocusRegion${bound}], ` +\n                                                 `[cdk-focus-${bound}]`) as NodeListOf<HTMLElement>;\n\n    for (let i = 0; i < markers.length; i++) {\n      // @breaking-change 8.0.0\n      if (markers[i].hasAttribute(`cdk-focus-${bound}`)) {\n        console.warn(`Found use of deprecated attribute 'cdk-focus-${bound}', ` +\n                     `use 'cdkFocusRegion${bound}' instead. The deprecated ` +\n                     `attribute will be removed in 8.0.0.`, markers[i]);\n      } else if (markers[i].hasAttribute(`cdk-focus-region-${bound}`)) {\n        console.warn(`Found use of deprecated attribute 'cdk-focus-region-${bound}', ` +\n                     `use 'cdkFocusRegion${bound}' instead. The deprecated attribute ` +\n                     `will be removed in 8.0.0.`, markers[i]);\n      }\n    }\n\n    if (bound == 'start') {\n      return markers.length ? markers[0] : this._getFirstTabbableElement(this._element);\n    }\n    return markers.length ?\n        markers[markers.length - 1] : this._getLastTabbableElement(this._element);\n  }\n\n  /**\n   * Focuses the element that should be focused when the focus trap is initialized.\n   * @returns Whether focus was moved successfuly.\n   */\n  focusInitialElement(): boolean {\n    // Contains the deprecated version of selector, for temporary backwards comparability.\n    const redirectToElement = this._element.querySelector(`[cdk-focus-initial], ` +\n                                                          `[cdkFocusInitial]`) as HTMLElement;\n\n    if (redirectToElement) {\n      // @breaking-change 8.0.0\n      if (redirectToElement.hasAttribute(`cdk-focus-initial`)) {\n        console.warn(`Found use of deprecated attribute 'cdk-focus-initial', ` +\n                    `use 'cdkFocusInitial' instead. The deprecated attribute ` +\n                    `will be removed in 8.0.0`, redirectToElement);\n      }\n\n      // Warn the consumer if the element they've pointed to\n      // isn't focusable, when not in production mode.\n      if (isDevMode() && !this._checker.isFocusable(redirectToElement)) {\n        console.warn(`Element matching '[cdkFocusInitial]' is not focusable.`, redirectToElement);\n      }\n\n      redirectToElement.focus();\n      return true;\n    }\n\n    return this.focusFirstTabbableElement();\n  }\n\n  /**\n   * Focuses the first tabbable element within the focus trap region.\n   * @returns Whether focus was moved successfuly.\n   */\n  focusFirstTabbableElement(): boolean {\n    const redirectToElement = this._getRegionBoundary('start');\n\n    if (redirectToElement) {\n      redirectToElement.focus();\n    }\n\n    return !!redirectToElement;\n  }\n\n  /**\n   * Focuses the last tabbable element within the focus trap region.\n   * @returns Whether focus was moved successfuly.\n   */\n  focusLastTabbableElement(): boolean {\n    const redirectToElement = this._getRegionBoundary('end');\n\n    if (redirectToElement) {\n      redirectToElement.focus();\n    }\n\n    return !!redirectToElement;\n  }\n\n  /**\n   * Checks whether the focus trap has successfuly been attached.\n   */\n  hasAttached(): boolean {\n    return this._hasAttached;\n  }\n\n  /** Get the first tabbable element from a DOM subtree (inclusive). */\n  private _getFirstTabbableElement(root: HTMLElement): HTMLElement | null {\n    if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\n      return root;\n    }\n\n    // Iterate in DOM order. Note that IE doesn't have `children` for SVG so we fall\n    // back to `childNodes` which includes text nodes, comments etc.\n    let children = root.children || root.childNodes;\n\n    for (let i = 0; i < children.length; i++) {\n      let tabbableChild = children[i].nodeType === this._document.ELEMENT_NODE ?\n        this._getFirstTabbableElement(children[i] as HTMLElement) :\n        null;\n\n      if (tabbableChild) {\n        return tabbableChild;\n      }\n    }\n\n    return null;\n  }\n\n  /** Get the last tabbable element from a DOM subtree (inclusive). */\n  private _getLastTabbableElement(root: HTMLElement): HTMLElement | null {\n    if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\n      return root;\n    }\n\n    // Iterate in reverse DOM order.\n    let children = root.children || root.childNodes;\n\n    for (let i = children.length - 1; i >= 0; i--) {\n      let tabbableChild = children[i].nodeType === this._document.ELEMENT_NODE ?\n        this._getLastTabbableElement(children[i] as HTMLElement) :\n        null;\n\n      if (tabbableChild) {\n        return tabbableChild;\n      }\n    }\n\n    return null;\n  }\n\n  /** Creates an anchor element. */\n  private _createAnchor(): HTMLElement {\n    const anchor = this._document.createElement('div');\n    this._toggleAnchorTabIndex(this._enabled, anchor);\n    anchor.classList.add('cdk-visually-hidden');\n    anchor.classList.add('cdk-focus-trap-anchor');\n    anchor.setAttribute('aria-hidden', 'true');\n    return anchor;\n  }\n\n  /**\n   * Toggles the `tabindex` of an anchor, based on the enabled state of the focus trap.\n   * @param isEnabled Whether the focus trap is enabled.\n   * @param anchor Anchor on which to toggle the tabindex.\n   */\n  private _toggleAnchorTabIndex(isEnabled: boolean, anchor: HTMLElement) {\n    // Remove the tabindex completely, rather than setting it to -1, because if the\n    // element has a tabindex, the user might still hit it when navigating with the arrow keys.\n    isEnabled ? anchor.setAttribute('tabindex', '0') : anchor.removeAttribute('tabindex');\n  }\n\n  /** Executes a function when the zone is stable. */\n  private _executeOnStable(fn: () => any): void {\n    if (this._ngZone.isStable) {\n      fn();\n    } else {\n      this._ngZone.onStable.asObservable().pipe(take(1)).subscribe(fn);\n    }\n  }\n}\n\n\n/** Factory that allows easy instantiation of focus traps. */\n@Injectable({providedIn: 'root'})\nexport class FocusTrapFactory {\n  private _document: Document;\n\n  constructor(\n      private _checker: InteractivityChecker,\n      private _ngZone: NgZone,\n      @Inject(DOCUMENT) _document: any) {\n\n    this._document = _document;\n  }\n\n  /**\n   * Creates a focus-trapped region around the given element.\n   * @param element The element around which focus will be trapped.\n   * @param deferCaptureElements Defers the creation of focus-capturing elements to be done\n   *     manually by the user.\n   * @returns The created focus trap instance.\n   */\n  create(element: HTMLElement, deferCaptureElements: boolean = false): FocusTrap {\n    return new FocusTrap(\n        element, this._checker, this._ngZone, this._document, deferCaptureElements);\n  }\n}\n\n/** Directive for trapping focus within a region. */\n@Directive({\n  selector: '[cdkTrapFocus]',\n  exportAs: 'cdkTrapFocus',\n})\nexport class CdkTrapFocus implements OnDestroy, AfterContentInit, DoCheck {\n  private _document: Document;\n\n  /** Underlying FocusTrap instance. */\n  focusTrap: FocusTrap;\n\n  /** Previously focused element to restore focus to upon destroy when using autoCapture. */\n  private _previouslyFocusedElement: HTMLElement | null = null;\n\n  /** Whether the focus trap is active. */\n  @Input('cdkTrapFocus')\n  get enabled(): boolean { return this.focusTrap.enabled; }\n  set enabled(value: boolean) { this.focusTrap.enabled = coerceBooleanProperty(value); }\n\n  /**\n   * Whether the directive should automatially move focus into the trapped region upon\n   * initialization and return focus to the previous activeElement upon destruction.\n   */\n  @Input('cdkTrapFocusAutoCapture')\n  get autoCapture(): boolean { return this._autoCapture; }\n  set autoCapture(value: boolean) { this._autoCapture = coerceBooleanProperty(value); }\n  private _autoCapture: boolean;\n\n  constructor(\n      private _elementRef: ElementRef<HTMLElement>,\n      private _focusTrapFactory: FocusTrapFactory,\n      @Inject(DOCUMENT) _document: any) {\n\n    this._document = _document;\n    this.focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement, true);\n  }\n\n  ngOnDestroy() {\n    this.focusTrap.destroy();\n\n    // If we stored a previously focused element when using autoCapture, return focus to that\n    // element now that the trapped region is being destroyed.\n    if (this._previouslyFocusedElement) {\n      this._previouslyFocusedElement.focus();\n      this._previouslyFocusedElement = null;\n    }\n  }\n\n  ngAfterContentInit() {\n    this.focusTrap.attachAnchors();\n\n    if (this.autoCapture) {\n      this._previouslyFocusedElement = this._document.activeElement as HTMLElement;\n      this.focusTrap.focusInitialElementWhenReady();\n    }\n  }\n\n  ngDoCheck() {\n    if (!this.focusTrap.hasAttached()) {\n      this.focusTrap.attachAnchors();\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from '@angular/core';\n\n// The tokens for the live announcer are defined in a separate file from LiveAnnouncer\n// as a workaround for https://github.com/angular/angular/issues/22559\n\n/** Possible politeness levels. */\nexport type AriaLivePoliteness = 'off' | 'polite' | 'assertive';\n\nexport const LIVE_ANNOUNCER_ELEMENT_TOKEN =\n    new InjectionToken<HTMLElement | null>('liveAnnouncerElement', {\n      providedIn: 'root',\n      factory: LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY,\n    });\n\n/** @docs-private */\nexport function LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY(): null {\n  return null;\n}\n\n/** Object that can be used to configure the default options for the LiveAnnouncer. */\nexport interface LiveAnnouncerDefaultOptions {\n  /** Default politeness for the announcements. */\n  politeness?: AriaLivePoliteness;\n\n  /** Default duration for the announcement messages. */\n  duration?: number;\n}\n\n/** Injection token that can be used to configure the default options for the LiveAnnouncer. */\nexport const LIVE_ANNOUNCER_DEFAULT_OPTIONS =\n    new InjectionToken<LiveAnnouncerDefaultOptions>('LIVE_ANNOUNCER_DEFAULT_OPTIONS');\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ContentObserver} from '@angular/cdk/observers';\nimport {DOCUMENT} from '@angular/common';\nimport {\n  Directive,\n  ElementRef,\n  Inject,\n  Injectable,\n  Input,\n  NgZone,\n  OnDestroy,\n  Optional,\n  Provider,\n  SkipSelf,\n} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {\n  AriaLivePoliteness,\n  LiveAnnouncerDefaultOptions,\n  LIVE_ANNOUNCER_ELEMENT_TOKEN,\n  LIVE_ANNOUNCER_DEFAULT_OPTIONS,\n} from './live-announcer-tokens';\n\n\n@Injectable({providedIn: 'root'})\nexport class LiveAnnouncer implements OnDestroy {\n  private _liveElement: HTMLElement;\n  private _document: Document;\n  private _previousTimeout?: number;\n\n  constructor(\n      @Optional() @Inject(LIVE_ANNOUNCER_ELEMENT_TOKEN) elementToken: any,\n      private _ngZone: NgZone,\n      @Inject(DOCUMENT) _document: any,\n      @Optional() @Inject(LIVE_ANNOUNCER_DEFAULT_OPTIONS)\n      private _defaultOptions?: LiveAnnouncerDefaultOptions) {\n\n    // We inject the live element and document as `any` because the constructor signature cannot\n    // reference browser globals (HTMLElement, Document) on non-browser environments, since having\n    // a class decorator causes TypeScript to preserve the constructor signature types.\n    this._document = _document;\n    this._liveElement = elementToken || this._createLiveElement();\n  }\n\n  /**\n   * Announces a message to screenreaders.\n   * @param message Message to be announced to the screenreader.\n   * @returns Promise that will be resolved when the message is added to the DOM.\n   */\n  announce(message: string): Promise<void>;\n\n  /**\n   * Announces a message to screenreaders.\n   * @param message Message to be announced to the screenreader.\n   * @param politeness The politeness of the announcer element.\n   * @returns Promise that will be resolved when the message is added to the DOM.\n   */\n  announce(message: string, politeness?: AriaLivePoliteness): Promise<void>;\n\n  /**\n   * Announces a message to screenreaders.\n   * @param message Message to be announced to the screenreader.\n   * @param duration Time in milliseconds after which to clear out the announcer element. Note\n   *   that this takes effect after the message has been added to the DOM, which can be up to\n   *   100ms after `announce` has been called.\n   * @returns Promise that will be resolved when the message is added to the DOM.\n   */\n  announce(message: string, duration?: number): Promise<void>;\n\n  /**\n   * Announces a message to screenreaders.\n   * @param message Message to be announced to the screenreader.\n   * @param politeness The politeness of the announcer element.\n   * @param duration Time in milliseconds after which to clear out the announcer element. Note\n   *   that this takes effect after the message has been added to the DOM, which can be up to\n   *   100ms after `announce` has been called.\n   * @returns Promise that will be resolved when the message is added to the DOM.\n   */\n  announce(message: string, politeness?: AriaLivePoliteness, duration?: number): Promise<void>;\n\n  announce(message: string, ...args: any[]): Promise<void> {\n    const defaultOptions = this._defaultOptions;\n    let politeness: AriaLivePoliteness | undefined;\n    let duration: number | undefined;\n\n    if (args.length === 1 && typeof args[0] === 'number') {\n      duration = args[0];\n    } else {\n      [politeness, duration] = args;\n    }\n\n    this.clear();\n    clearTimeout(this._previousTimeout);\n\n    if (!politeness) {\n      politeness =\n          (defaultOptions && defaultOptions.politeness) ? defaultOptions.politeness : 'polite';\n    }\n\n    if (duration == null && defaultOptions) {\n      duration = defaultOptions.duration;\n    }\n\n    // TODO: ensure changing the politeness works on all environments we support.\n    this._liveElement.setAttribute('aria-live', politeness);\n\n    // This 100ms timeout is necessary for some browser + screen-reader combinations:\n    // - Both JAWS and NVDA over IE11 will not announce anything without a non-zero timeout.\n    // - With Chrome and IE11 with NVDA or JAWS, a repeated (identical) message won't be read a\n    //   second time without clearing and then using a non-zero delay.\n    // (using JAWS 17 at time of this writing).\n    return this._ngZone.runOutsideAngular(() => {\n      return new Promise(resolve => {\n        clearTimeout(this._previousTimeout);\n        this._previousTimeout = setTimeout(() => {\n          this._liveElement.textContent = message;\n          resolve();\n\n          if (typeof duration === 'number') {\n            this._previousTimeout = setTimeout(() => this.clear(), duration);\n          }\n        }, 100);\n      });\n    });\n  }\n\n  /**\n   * Clears the current text from the announcer element. Can be used to prevent\n   * screen readers from reading the text out again while the user is going\n   * through the page landmarks.\n   */\n  clear() {\n    if (this._liveElement) {\n      this._liveElement.textContent = '';\n    }\n  }\n\n  ngOnDestroy() {\n    clearTimeout(this._previousTimeout);\n\n    if (this._liveElement && this._liveElement.parentNode) {\n      this._liveElement.parentNode.removeChild(this._liveElement);\n      this._liveElement = null!;\n    }\n  }\n\n  private _createLiveElement(): HTMLElement {\n    const elementClass = 'cdk-live-announcer-element';\n    const previousElements = this._document.getElementsByClassName(elementClass);\n    const liveEl = this._document.createElement('div');\n\n    // Remove any old containers. This can happen when coming in from a server-side-rendered page.\n    for (let i = 0; i < previousElements.length; i++) {\n      previousElements[i].parentNode!.removeChild(previousElements[i]);\n    }\n\n    liveEl.classList.add(elementClass);\n    liveEl.classList.add('cdk-visually-hidden');\n\n    liveEl.setAttribute('aria-atomic', 'true');\n    liveEl.setAttribute('aria-live', 'polite');\n\n    this._document.body.appendChild(liveEl);\n\n    return liveEl;\n  }\n\n}\n\n\n/**\n * A directive that works similarly to aria-live, but uses the LiveAnnouncer to ensure compatibility\n * with a wider range of browsers and screen readers.\n */\n@Directive({\n  selector: '[cdkAriaLive]',\n  exportAs: 'cdkAriaLive',\n})\nexport class CdkAriaLive implements OnDestroy {\n  /** The aria-live politeness level to use when announcing messages. */\n  @Input('cdkAriaLive')\n  get politeness(): AriaLivePoliteness { return this._politeness; }\n  set politeness(value: AriaLivePoliteness) {\n    this._politeness = value === 'polite' || value === 'assertive' ? value : 'off';\n    if (this._politeness === 'off') {\n      if (this._subscription) {\n        this._subscription.unsubscribe();\n        this._subscription = null;\n      }\n    } else if (!this._subscription) {\n      this._subscription = this._ngZone.runOutsideAngular(() => {\n        return this._contentObserver\n          .observe(this._elementRef)\n          .subscribe(() => {\n            // Note that we use textContent here, rather than innerText, in order to avoid a reflow.\n            const elementText = this._elementRef.nativeElement.textContent;\n\n            // The `MutationObserver` fires also for attribute\n            // changes which we don't want to announce.\n            if (elementText !== this._previousAnnouncedText) {\n              this._liveAnnouncer.announce(elementText, this._politeness);\n              this._previousAnnouncedText = elementText;\n            }\n          });\n      });\n    }\n  }\n  private _politeness: AriaLivePoliteness = 'off';\n\n  private _previousAnnouncedText?: string;\n  private _subscription: Subscription | null;\n\n  constructor(private _elementRef: ElementRef, private _liveAnnouncer: LiveAnnouncer,\n              private _contentObserver: ContentObserver, private _ngZone: NgZone) {}\n\n  ngOnDestroy() {\n    if (this._subscription) {\n      this._subscription.unsubscribe();\n    }\n  }\n}\n\n\n/** @docs-private @deprecated @breaking-change 8.0.0 */\nexport function LIVE_ANNOUNCER_PROVIDER_FACTORY(\n    parentAnnouncer: LiveAnnouncer, liveElement: any, _document: any, ngZone: NgZone) {\n  return parentAnnouncer || new LiveAnnouncer(liveElement, ngZone, _document);\n}\n\n\n/** @docs-private @deprecated @breaking-change 8.0.0 */\nexport const LIVE_ANNOUNCER_PROVIDER: Provider = {\n  // If there is already a LiveAnnouncer available, use that. Otherwise, provide a new one.\n  provide: LiveAnnouncer,\n  deps: [\n    [new Optional(), new SkipSelf(), LiveAnnouncer],\n    [new Optional(), new Inject(LIVE_ANNOUNCER_ELEMENT_TOKEN)],\n    DOCUMENT,\n    NgZone,\n  ],\n  useFactory: LIVE_ANNOUNCER_PROVIDER_FACTORY\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Platform, normalizePassiveListenerOptions} from '@angular/cdk/platform';\nimport {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Injectable,\n  NgZone,\n  OnDestroy,\n  Optional,\n  Output,\n  SkipSelf,\n} from '@angular/core';\nimport {Observable, of as observableOf, Subject, Subscription} from 'rxjs';\nimport {coerceElement} from '@angular/cdk/coercion';\n\n\n// This is the value used by AngularJS Material. Through trial and error (on iPhone 6S) they found\n// that a value of around 650ms seems appropriate.\nexport const TOUCH_BUFFER_MS = 650;\n\n\nexport type FocusOrigin = 'touch' | 'mouse' | 'keyboard' | 'program' | null;\n\n/**\n * Corresponds to the options that can be passed to the native `focus` event.\n * via https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/focus\n */\nexport interface FocusOptions {\n  /** Whether the browser should scroll to the element when it is focused. */\n  preventScroll?: boolean;\n}\n\ntype MonitoredElementInfo = {\n  unlisten: Function,\n  checkChildren: boolean,\n  subject: Subject<FocusOrigin>\n};\n\n/**\n * Event listener options that enable capturing and also\n * mark the listener as passive if the browser supports it.\n */\nconst captureEventListenerOptions = normalizePassiveListenerOptions({\n  passive: true,\n  capture: true\n});\n\n\n/** Monitors mouse and keyboard events to determine the cause of focus events. */\n@Injectable({providedIn: 'root'})\nexport class FocusMonitor implements OnDestroy {\n  /** The focus origin that the next focus event is a result of. */\n  private _origin: FocusOrigin = null;\n\n  /** The FocusOrigin of the last focus event tracked by the FocusMonitor. */\n  private _lastFocusOrigin: FocusOrigin;\n\n  /** Whether the window has just been focused. */\n  private _windowFocused = false;\n\n  /** The target of the last touch event. */\n  private _lastTouchTarget: EventTarget | null;\n\n  /** The timeout id of the touch timeout, used to cancel timeout later. */\n  private _touchTimeoutId: number;\n\n  /** The timeout id of the window focus timeout. */\n  private _windowFocusTimeoutId: number;\n\n  /** The timeout id of the origin clearing timeout. */\n  private _originTimeoutId: number;\n\n  /** Map of elements being monitored to their info. */\n  private _elementInfo = new Map<HTMLElement, MonitoredElementInfo>();\n\n  /** The number of elements currently being monitored. */\n  private _monitoredElementCount = 0;\n\n  /**\n   * Event listener for `keydown` events on the document.\n   * Needs to be an arrow function in order to preserve the context when it gets bound.\n   */\n  private _documentKeydownListener = () => {\n    // On keydown record the origin and clear any touch event that may be in progress.\n    this._lastTouchTarget = null;\n    this._setOriginForCurrentEventQueue('keyboard');\n  }\n\n  /**\n   * Event listener for `mousedown` events on the document.\n   * Needs to be an arrow function in order to preserve the context when it gets bound.\n   */\n  private _documentMousedownListener = () => {\n    // On mousedown record the origin only if there is not touch\n    // target, since a mousedown can happen as a result of a touch event.\n    if (!this._lastTouchTarget) {\n      this._setOriginForCurrentEventQueue('mouse');\n    }\n  }\n\n  /**\n   * Event listener for `touchstart` events on the document.\n   * Needs to be an arrow function in order to preserve the context when it gets bound.\n   */\n  private _documentTouchstartListener = (event: TouchEvent) => {\n    // When the touchstart event fires the focus event is not yet in the event queue. This means\n    // we can't rely on the trick used above (setting timeout of 1ms). Instead we wait 650ms to\n    // see if a focus happens.\n    if (this._touchTimeoutId != null) {\n      clearTimeout(this._touchTimeoutId);\n    }\n\n    // Since this listener is bound on the `document` level, any events coming from the shadow DOM\n    // will have their `target` set to the shadow root. If available, use `composedPath` to\n    // figure out the event target.\n    this._lastTouchTarget = event.composedPath ? event.composedPath()[0] : event.target;\n    this._touchTimeoutId = setTimeout(() => this._lastTouchTarget = null, TOUCH_BUFFER_MS);\n  }\n\n  /**\n   * Event listener for `focus` events on the window.\n   * Needs to be an arrow function in order to preserve the context when it gets bound.\n   */\n  private _windowFocusListener = () => {\n    // Make a note of when the window regains focus, so we can\n    // restore the origin info for the focused element.\n    this._windowFocused = true;\n    this._windowFocusTimeoutId = setTimeout(() => this._windowFocused = false);\n  }\n\n  constructor(private _ngZone: NgZone, private _platform: Platform) {}\n\n  /**\n   * Monitors focus on an element and applies appropriate CSS classes.\n   * @param element The element to monitor\n   * @param checkChildren Whether to count the element as focused when its children are focused.\n   * @returns An observable that emits when the focus state of the element changes.\n   *     When the element is blurred, null will be emitted.\n   */\n  monitor(element: HTMLElement, checkChildren?: boolean): Observable<FocusOrigin>;\n\n  /**\n   * Monitors focus on an element and applies appropriate CSS classes.\n   * @param element The element to monitor\n   * @param checkChildren Whether to count the element as focused when its children are focused.\n   * @returns An observable that emits when the focus state of the element changes.\n   *     When the element is blurred, null will be emitted.\n   */\n  monitor(element: ElementRef<HTMLElement>, checkChildren?: boolean): Observable<FocusOrigin>;\n\n  monitor(element: HTMLElement | ElementRef<HTMLElement>,\n          checkChildren: boolean = false): Observable<FocusOrigin> {\n    // Do nothing if we're not on the browser platform.\n    if (!this._platform.isBrowser) {\n      return observableOf(null);\n    }\n\n    const nativeElement = coerceElement(element);\n\n    // Check if we're already monitoring this element.\n    if (this._elementInfo.has(nativeElement)) {\n      let cachedInfo = this._elementInfo.get(nativeElement);\n      cachedInfo!.checkChildren = checkChildren;\n      return cachedInfo!.subject.asObservable();\n    }\n\n    // Create monitored element info.\n    let info: MonitoredElementInfo = {\n      unlisten: () => {},\n      checkChildren: checkChildren,\n      subject: new Subject<FocusOrigin>()\n    };\n    this._elementInfo.set(nativeElement, info);\n    this._incrementMonitoredElementCount();\n\n    // Start listening. We need to listen in capture phase since focus events don't bubble.\n    let focusListener = (event: FocusEvent) => this._onFocus(event, nativeElement);\n    let blurListener = (event: FocusEvent) => this._onBlur(event, nativeElement);\n    this._ngZone.runOutsideAngular(() => {\n      nativeElement.addEventListener('focus', focusListener, true);\n      nativeElement.addEventListener('blur', blurListener, true);\n    });\n\n    // Create an unlisten function for later.\n    info.unlisten = () => {\n      nativeElement.removeEventListener('focus', focusListener, true);\n      nativeElement.removeEventListener('blur', blurListener, true);\n    };\n\n    return info.subject.asObservable();\n  }\n\n  /**\n   * Stops monitoring an element and removes all focus classes.\n   * @param element The element to stop monitoring.\n   */\n  stopMonitoring(element: HTMLElement): void;\n\n  /**\n   * Stops monitoring an element and removes all focus classes.\n   * @param element The element to stop monitoring.\n   */\n  stopMonitoring(element: ElementRef<HTMLElement>): void;\n\n  stopMonitoring(element: HTMLElement | ElementRef<HTMLElement>): void {\n    const nativeElement = coerceElement(element);\n    const elementInfo = this._elementInfo.get(nativeElement);\n\n    if (elementInfo) {\n      elementInfo.unlisten();\n      elementInfo.subject.complete();\n\n      this._setClasses(nativeElement);\n      this._elementInfo.delete(nativeElement);\n      this._decrementMonitoredElementCount();\n    }\n  }\n\n  /**\n   * Focuses the element via the specified focus origin.\n   * @param element Element to focus.\n   * @param origin Focus origin.\n   * @param options Options that can be used to configure the focus behavior.\n   */\n  focusVia(element: HTMLElement, origin: FocusOrigin, options?: FocusOptions): void;\n\n  /**\n   * Focuses the element via the specified focus origin.\n   * @param element Element to focus.\n   * @param origin Focus origin.\n   * @param options Options that can be used to configure the focus behavior.\n   */\n  focusVia(element: ElementRef<HTMLElement>, origin: FocusOrigin, options?: FocusOptions): void;\n\n  focusVia(element: HTMLElement | ElementRef<HTMLElement>,\n          origin: FocusOrigin,\n          options?: FocusOptions): void {\n\n    const nativeElement = coerceElement(element);\n\n    this._setOriginForCurrentEventQueue(origin);\n\n    // `focus` isn't available on the server\n    if (typeof nativeElement.focus === 'function') {\n      // Cast the element to `any`, because the TS typings don't have the `options` parameter yet.\n      (nativeElement as any).focus(options);\n    }\n  }\n\n  ngOnDestroy() {\n    this._elementInfo.forEach((_info, element) => this.stopMonitoring(element));\n  }\n\n  private _toggleClass(element: Element, className: string, shouldSet: boolean) {\n    if (shouldSet) {\n      element.classList.add(className);\n    } else {\n      element.classList.remove(className);\n    }\n  }\n\n  /**\n   * Sets the focus classes on the element based on the given focus origin.\n   * @param element The element to update the classes on.\n   * @param origin The focus origin.\n   */\n  private _setClasses(element: HTMLElement, origin?: FocusOrigin): void {\n    const elementInfo = this._elementInfo.get(element);\n\n    if (elementInfo) {\n      this._toggleClass(element, 'cdk-focused', !!origin);\n      this._toggleClass(element, 'cdk-touch-focused', origin === 'touch');\n      this._toggleClass(element, 'cdk-keyboard-focused', origin === 'keyboard');\n      this._toggleClass(element, 'cdk-mouse-focused', origin === 'mouse');\n      this._toggleClass(element, 'cdk-program-focused', origin === 'program');\n    }\n  }\n\n  /**\n   * Sets the origin and schedules an async function to clear it at the end of the event queue.\n   * @param origin The origin to set.\n   */\n  private _setOriginForCurrentEventQueue(origin: FocusOrigin): void {\n    this._ngZone.runOutsideAngular(() => {\n      this._origin = origin;\n      // Sometimes the focus origin won't be valid in Firefox because Firefox seems to focus *one*\n      // tick after the interaction event fired. To ensure the focus origin is always correct,\n      // the focus origin will be determined at the beginning of the next tick.\n      this._originTimeoutId = setTimeout(() => this._origin = null, 1);\n    });\n  }\n\n  /**\n   * Checks whether the given focus event was caused by a touchstart event.\n   * @param event The focus event to check.\n   * @returns Whether the event was caused by a touch.\n   */\n  private _wasCausedByTouch(event: FocusEvent): boolean {\n    // Note(mmalerba): This implementation is not quite perfect, there is a small edge case.\n    // Consider the following dom structure:\n    //\n    // <div #parent tabindex=\"0\" cdkFocusClasses>\n    //   <div #child (click)=\"#parent.focus()\"></div>\n    // </div>\n    //\n    // If the user touches the #child element and the #parent is programmatically focused as a\n    // result, this code will still consider it to have been caused by the touch event and will\n    // apply the cdk-touch-focused class rather than the cdk-program-focused class. This is a\n    // relatively small edge-case that can be worked around by using\n    // focusVia(parentEl, 'program') to focus the parent element.\n    //\n    // If we decide that we absolutely must handle this case correctly, we can do so by listening\n    // for the first focus event after the touchstart, and then the first blur event after that\n    // focus event. When that blur event fires we know that whatever follows is not a result of the\n    // touchstart.\n    let focusTarget = event.target;\n    return this._lastTouchTarget instanceof Node && focusTarget instanceof Node &&\n        (focusTarget === this._lastTouchTarget || focusTarget.contains(this._lastTouchTarget));\n  }\n\n  /**\n   * Handles focus events on a registered element.\n   * @param event The focus event.\n   * @param element The monitored element.\n   */\n  private _onFocus(event: FocusEvent, element: HTMLElement) {\n    // NOTE(mmalerba): We currently set the classes based on the focus origin of the most recent\n    // focus event affecting the monitored element. If we want to use the origin of the first event\n    // instead we should check for the cdk-focused class here and return if the element already has\n    // it. (This only matters for elements that have includesChildren = true).\n\n    // If we are not counting child-element-focus as focused, make sure that the event target is the\n    // monitored element itself.\n    const elementInfo = this._elementInfo.get(element);\n    if (!elementInfo || (!elementInfo.checkChildren && element !== event.target)) {\n      return;\n    }\n\n    // If we couldn't detect a cause for the focus event, it's due to one of three reasons:\n    // 1) The window has just regained focus, in which case we want to restore the focused state of\n    //    the element from before the window blurred.\n    // 2) It was caused by a touch event, in which case we mark the origin as 'touch'.\n    // 3) The element was programmatically focused, in which case we should mark the origin as\n    //    'program'.\n    let origin = this._origin;\n    if (!origin) {\n      if (this._windowFocused && this._lastFocusOrigin) {\n        origin = this._lastFocusOrigin;\n      } else if (this._wasCausedByTouch(event)) {\n        origin = 'touch';\n      } else {\n        origin = 'program';\n      }\n    }\n\n    this._setClasses(element, origin);\n    this._emitOrigin(elementInfo.subject, origin);\n    this._lastFocusOrigin = origin;\n  }\n\n  /**\n   * Handles blur events on a registered element.\n   * @param event The blur event.\n   * @param element The monitored element.\n   */\n  _onBlur(event: FocusEvent, element: HTMLElement) {\n    // If we are counting child-element-focus as focused, make sure that we aren't just blurring in\n    // order to focus another child of the monitored element.\n    const elementInfo = this._elementInfo.get(element);\n\n    if (!elementInfo || (elementInfo.checkChildren && event.relatedTarget instanceof Node &&\n        element.contains(event.relatedTarget))) {\n      return;\n    }\n\n    this._setClasses(element);\n    this._emitOrigin(elementInfo.subject, null);\n  }\n\n  private _emitOrigin(subject: Subject<FocusOrigin>, origin: FocusOrigin) {\n    this._ngZone.run(() => subject.next(origin));\n  }\n\n  private _incrementMonitoredElementCount() {\n    // Register global listeners when first element is monitored.\n    if (++this._monitoredElementCount == 1 && this._platform.isBrowser) {\n      // Note: we listen to events in the capture phase so we\n      // can detect them even if the user stops propagation.\n      this._ngZone.runOutsideAngular(() => {\n        document.addEventListener('keydown', this._documentKeydownListener,\n          captureEventListenerOptions);\n        document.addEventListener('mousedown', this._documentMousedownListener,\n          captureEventListenerOptions);\n        document.addEventListener('touchstart', this._documentTouchstartListener,\n          captureEventListenerOptions);\n        window.addEventListener('focus', this._windowFocusListener);\n      });\n    }\n  }\n\n  private _decrementMonitoredElementCount() {\n    // Unregister global listeners when last element is unmonitored.\n    if (!--this._monitoredElementCount) {\n      document.removeEventListener('keydown', this._documentKeydownListener,\n        captureEventListenerOptions);\n      document.removeEventListener('mousedown', this._documentMousedownListener,\n        captureEventListenerOptions);\n      document.removeEventListener('touchstart', this._documentTouchstartListener,\n        captureEventListenerOptions);\n      window.removeEventListener('focus', this._windowFocusListener);\n\n      // Clear timeouts for all potentially pending timeouts to prevent the leaks.\n      clearTimeout(this._windowFocusTimeoutId);\n      clearTimeout(this._touchTimeoutId);\n      clearTimeout(this._originTimeoutId);\n    }\n  }\n}\n\n\n/**\n * Directive that determines how a particular element was focused (via keyboard, mouse, touch, or\n * programmatically) and adds corresponding classes to the element.\n *\n * There are two variants of this directive:\n * 1) cdkMonitorElementFocus: does not consider an element to be focused if one of its children is\n *    focused.\n * 2) cdkMonitorSubtreeFocus: considers an element focused if it or any of its children are focused.\n */\n@Directive({\n  selector: '[cdkMonitorElementFocus], [cdkMonitorSubtreeFocus]',\n})\nexport class CdkMonitorFocus implements OnDestroy {\n  private _monitorSubscription: Subscription;\n  @Output() cdkFocusChange = new EventEmitter<FocusOrigin>();\n\n  constructor(private _elementRef: ElementRef<HTMLElement>, private _focusMonitor: FocusMonitor) {\n    this._monitorSubscription = this._focusMonitor.monitor(\n        this._elementRef,\n        this._elementRef.nativeElement.hasAttribute('cdkMonitorSubtreeFocus'))\n        .subscribe(origin => this.cdkFocusChange.emit(origin));\n  }\n\n  ngOnDestroy() {\n    this._focusMonitor.stopMonitoring(this._elementRef);\n    this._monitorSubscription.unsubscribe();\n  }\n}\n\n/** @docs-private @deprecated @breaking-change 8.0.0 */\nexport function FOCUS_MONITOR_PROVIDER_FACTORY(\n    parentDispatcher: FocusMonitor, ngZone: NgZone, platform: Platform) {\n  return parentDispatcher || new FocusMonitor(ngZone, platform);\n}\n\n/** @docs-private @deprecated @breaking-change 8.0.0 */\nexport const FOCUS_MONITOR_PROVIDER = {\n  // If there is already a FocusMonitor available, use that. Otherwise, provide a new one.\n  provide: FocusMonitor,\n  deps: [[new Optional(), new SkipSelf(), FocusMonitor], NgZone, Platform],\n  useFactory: FOCUS_MONITOR_PROVIDER_FACTORY\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Screenreaders will often fire fake mousedown events when a focusable element\n * is activated using the keyboard. We can typically distinguish between these faked\n * mousedown events and real mousedown events using the \"buttons\" property. While\n * real mousedowns will indicate the mouse button that was pressed (e.g. \"1\" for\n * the left mouse button), faked mousedowns will usually set the property value to 0.\n */\nexport function isFakeMousedownFromScreenReader(event: MouseEvent): boolean {\n  return event.buttons === 0;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ObserversModule} from '@angular/cdk/observers';\nimport {PlatformModule} from '@angular/cdk/platform';\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {CdkMonitorFocus} from './focus-monitor/focus-monitor';\nimport {CdkTrapFocus} from './focus-trap/focus-trap';\nimport {CdkAriaLive} from './live-announcer/live-announcer';\n\n@NgModule({\n  imports: [CommonModule, PlatformModule, ObserversModule],\n  declarations: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus],\n  exports: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus],\n})\nexport class A11yModule {}\n"]}