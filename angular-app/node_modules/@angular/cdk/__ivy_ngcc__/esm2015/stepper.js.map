{"version":3,"file":"stepper.js","sources":["../../../src/cdk/stepper/step-header.ts","../../../src/cdk/stepper/step-label.ts","../../../src/cdk/stepper/stepper.ts","../../../src/cdk/stepper/stepper-button.ts","../../../src/cdk/stepper/stepper-module.ts"],"names":["obaservableOf"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, ElementRef} from '@angular/core';\nimport {FocusableOption} from '@angular/cdk/a11y';\n\n\n@Directive({\n  selector: '[cdkStepHeader]',\n  host: {\n    'role': 'tab',\n  },\n})\nexport class CdkStepHeader implements FocusableOption {\n  constructor(protected _elementRef: ElementRef<HTMLElement>) {}\n\n  /** Focuses the step header. */\n  focus() {\n    this._elementRef.nativeElement.focus();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, TemplateRef} from '@angular/core';\n\n@Directive({\n  selector: '[cdkStepLabel]',\n})\nexport class CdkStepLabel {\n  constructor(/** @docs-private */ public template: TemplateRef<any>) { }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {FocusableOption, FocusKeyManager} from '@angular/cdk/a11y';\nimport {Direction, Directionality} from '@angular/cdk/bidi';\nimport {coerceBooleanProperty, coerceNumberProperty} from '@angular/cdk/coercion';\nimport {END, ENTER, hasModifierKey, HOME, SPACE} from '@angular/cdk/keycodes';\nimport {DOCUMENT} from '@angular/common';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  InjectionToken,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Optional,\n  Output,\n  QueryList,\n  TemplateRef,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {Observable, of as obaservableOf, Subject} from 'rxjs';\nimport {startWith, takeUntil} from 'rxjs/operators';\n\nimport {CdkStepHeader} from './step-header';\nimport {CdkStepLabel} from './step-label';\n\n/** Used to generate unique ID for each stepper component. */\nlet nextId = 0;\n\n/**\n * Position state of the content of each step in stepper that is used for transitioning\n * the content into correct position upon step selection change.\n */\nexport type StepContentPositionState = 'previous'|'current'|'next';\n\n/** Possible orientation of a stepper. */\nexport type StepperOrientation = 'horizontal'|'vertical';\n\n/** Change event emitted on selection changes. */\nexport class StepperSelectionEvent {\n  /** Index of the step now selected. */\n  selectedIndex: number;\n\n  /** Index of the step previously selected. */\n  previouslySelectedIndex: number;\n\n  /** The step instance now selected. */\n  selectedStep: CdkStep;\n\n  /** The step instance previously selected. */\n  previouslySelectedStep: CdkStep;\n}\n\n/** The state of each step. */\nexport type StepState = 'number'|'edit'|'done'|'error'|string;\n\n/** Enum to represent the different states of the steps. */\nexport const STEP_STATE = {\n  NUMBER: 'number',\n  EDIT: 'edit',\n  DONE: 'done',\n  ERROR: 'error'\n};\n\n/** InjectionToken that can be used to specify the global stepper options. */\nexport const STEPPER_GLOBAL_OPTIONS = new InjectionToken<StepperOptions>('STEPPER_GLOBAL_OPTIONS');\n\n/**\n * InjectionToken that can be used to specify the global stepper options.\n * @deprecated Use `STEPPER_GLOBAL_OPTIONS` instead.\n * @breaking-change 8.0.0.\n */\nexport const MAT_STEPPER_GLOBAL_OPTIONS = STEPPER_GLOBAL_OPTIONS;\n\n/** Configurable options for stepper. */\nexport interface StepperOptions {\n  /**\n   * Whether the stepper should display an error state or not.\n   * Default behavior is assumed to be false.\n   */\n  showError?: boolean;\n\n  /**\n   * Whether the stepper should display the default indicator type\n   * or not.\n   * Default behavior is assumed to be true.\n   */\n  displayDefaultIndicatorType?: boolean;\n}\n\n@Component({\n  moduleId: module.id,\n  selector: 'cdk-step',\n  exportAs: 'cdkStep',\n  template: '<ng-template><ng-content></ng-content></ng-template>',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CdkStep implements OnChanges {\n  private _stepperOptions: StepperOptions;\n  _showError: boolean;\n  _displayDefaultIndicatorType: boolean;\n\n  /** Template for step label if it exists. */\n  @ContentChild(CdkStepLabel, {static: false}) stepLabel: CdkStepLabel;\n\n  /** Template for step content. */\n  @ViewChild(TemplateRef, {static: true}) content: TemplateRef<any>;\n\n  /** The top level abstract control of the step. */\n  @Input() stepControl: FormControlLike;\n\n  /** Whether user has seen the expanded step content or not. */\n  interacted = false;\n\n  /** Plain text label of the step. */\n  @Input() label: string;\n\n  /** Error message to display when there's an error. */\n  @Input() errorMessage: string;\n\n  /** Aria label for the tab. */\n  @Input('aria-label') ariaLabel: string;\n\n  /**\n   * Reference to the element that the tab is labelled by.\n   * Will be cleared if `aria-label` is set at the same time.\n   */\n  @Input('aria-labelledby') ariaLabelledby: string;\n\n  /** State of the step. */\n  @Input() state: StepState;\n\n  /** Whether the user can return to this step once it has been marked as completed. */\n  @Input()\n  get editable(): boolean {\n    return this._editable;\n  }\n  set editable(value: boolean) {\n    this._editable = coerceBooleanProperty(value);\n  }\n  private _editable = true;\n\n  /** Whether the completion of step is optional. */\n  @Input()\n  get optional(): boolean {\n    return this._optional;\n  }\n  set optional(value: boolean) {\n    this._optional = coerceBooleanProperty(value);\n  }\n  private _optional = false;\n\n  /** Whether step is marked as completed. */\n  @Input()\n  get completed(): boolean {\n    return this._completedOverride == null ? this._getDefaultCompleted() : this._completedOverride;\n  }\n  set completed(value: boolean) {\n    this._completedOverride = coerceBooleanProperty(value);\n  }\n  _completedOverride: boolean|null = null;\n\n  private _getDefaultCompleted() {\n    return this.stepControl ? this.stepControl.valid && this.interacted : this.interacted;\n  }\n\n  /** Whether step has an error. */\n  @Input()\n  get hasError(): boolean {\n    return this._customError == null ? this._getDefaultError() : this._customError;\n  }\n  set hasError(value: boolean) {\n    this._customError = coerceBooleanProperty(value);\n  }\n  private _customError: boolean|null = null;\n\n  private _getDefaultError() {\n    return this.stepControl && this.stepControl.invalid && this.interacted;\n  }\n\n  /** @breaking-change 8.0.0 remove the `?` after `stepperOptions` */\n  constructor(\n      @Inject(forwardRef(() => CdkStepper)) private _stepper: CdkStepper,\n      @Optional() @Inject(STEPPER_GLOBAL_OPTIONS) stepperOptions?: StepperOptions) {\n    this._stepperOptions = stepperOptions ? stepperOptions : {};\n    this._displayDefaultIndicatorType = this._stepperOptions.displayDefaultIndicatorType !== false;\n    this._showError = !!this._stepperOptions.showError;\n  }\n\n  /** Selects this step component. */\n  select(): void {\n    this._stepper.selected = this;\n  }\n\n  /** Resets the step to its initial state. Note that this includes resetting form data. */\n  reset(): void {\n    this.interacted = false;\n\n    if (this._completedOverride != null) {\n      this._completedOverride = false;\n    }\n\n    if (this._customError != null) {\n      this._customError = false;\n    }\n\n    if (this.stepControl) {\n      this.stepControl.reset();\n    }\n  }\n\n  ngOnChanges() {\n    // Since basically all inputs of the MatStep get proxied through the view down to the\n    // underlying MatStepHeader, we have to make sure that change detection runs correctly.\n    this._stepper._stateChanged();\n  }\n}\n\n@Directive({\n  selector: '[cdkStepper]',\n  exportAs: 'cdkStepper',\n})\nexport class CdkStepper implements AfterViewInit, OnDestroy {\n  /** Emits when the component is destroyed. */\n  protected _destroyed = new Subject<void>();\n\n  /** Used for managing keyboard focus. */\n  private _keyManager: FocusKeyManager<FocusableOption>;\n\n  /**\n   * @breaking-change 8.0.0 Remove `| undefined` once the `_document`\n   * constructor param is required.\n   */\n  private _document: Document|undefined;\n\n  /**\n   * The list of step components that the stepper is holding.\n   * @deprecated use `steps` instead\n   * @breaking-change 9.0.0 remove this property\n   */\n  @ContentChildren(CdkStep) _steps: QueryList<CdkStep>;\n\n  /** The list of step components that the stepper is holding. */\n  get steps(): QueryList<CdkStep> {\n    return this._steps;\n  }\n\n  /**\n   * The list of step headers of the steps in the stepper.\n   * @deprecated Type to be changed to `QueryList<CdkStepHeader>`.\n   * @breaking-change 8.0.0\n   */\n  @ContentChildren(CdkStepHeader) _stepHeader: QueryList<FocusableOption>;\n\n  /** Whether the validity of previous steps should be checked or not. */\n  @Input()\n  get linear(): boolean {\n    return this._linear;\n  }\n  set linear(value: boolean) {\n    this._linear = coerceBooleanProperty(value);\n  }\n  private _linear = false;\n\n  /** The index of the selected step. */\n  @Input()\n  get selectedIndex() {\n    return this._selectedIndex;\n  }\n  set selectedIndex(index: number) {\n    const newIndex = coerceNumberProperty(index);\n\n    if (this.steps) {\n      // Ensure that the index can't be out of bounds.\n      if (newIndex < 0 || newIndex > this.steps.length - 1) {\n        throw Error('cdkStepper: Cannot assign out-of-bounds value to `selectedIndex`.');\n      }\n\n      if (this._selectedIndex != newIndex && !this._anyControlsInvalidOrPending(newIndex) &&\n          (newIndex >= this._selectedIndex || this.steps.toArray()[newIndex].editable)) {\n        this._updateSelectedItemIndex(index);\n      }\n    } else {\n      this._selectedIndex = newIndex;\n    }\n  }\n  private _selectedIndex = 0;\n\n  /** The step that is selected. */\n  @Input()\n  get selected(): CdkStep {\n    // @breaking-change 8.0.0 Change return type to `CdkStep | undefined`.\n    return this.steps ? this.steps.toArray()[this.selectedIndex] : undefined!;\n  }\n  set selected(step: CdkStep) {\n    this.selectedIndex = this.steps ? this.steps.toArray().indexOf(step) : -1;\n  }\n\n  /** Event emitted when the selected step has changed. */\n  @Output()\n  selectionChange: EventEmitter<StepperSelectionEvent> = new EventEmitter<StepperSelectionEvent>();\n\n  /** Used to track unique ID for each stepper component. */\n  _groupId: number;\n\n  protected _orientation: StepperOrientation = 'horizontal';\n\n  constructor(\n      @Optional() private _dir: Directionality, private _changeDetectorRef: ChangeDetectorRef,\n      // @breaking-change 8.0.0 `_elementRef` and `_document` parameters to become required.\n      private _elementRef?: ElementRef<HTMLElement>, @Inject(DOCUMENT) _document?: any) {\n    this._groupId = nextId++;\n    this._document = _document;\n  }\n\n  ngAfterViewInit() {\n    // Note that while the step headers are content children by default, any components that\n    // extend this one might have them as view chidren. We initialize the keyboard handling in\n    // AfterViewInit so we're guaranteed for both view and content children to be defined.\n    this._keyManager = new FocusKeyManager<FocusableOption>(this._stepHeader)\n                           .withWrap()\n                           .withVerticalOrientation(this._orientation === 'vertical');\n\n    (this._dir ? (this._dir.change as Observable<Direction>) : obaservableOf<Direction>())\n        .pipe(startWith(this._layoutDirection()), takeUntil(this._destroyed))\n        .subscribe(direction => this._keyManager.withHorizontalOrientation(direction));\n\n    this._keyManager.updateActiveItemIndex(this._selectedIndex);\n\n    this.steps.changes.pipe(takeUntil(this._destroyed)).subscribe(() => {\n      if (!this.selected) {\n        this._selectedIndex = Math.max(this._selectedIndex - 1, 0);\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n\n  /** Selects and focuses the next step in list. */\n  next(): void {\n    this.selectedIndex = Math.min(this._selectedIndex + 1, this.steps.length - 1);\n  }\n\n  /** Selects and focuses the previous step in list. */\n  previous(): void {\n    this.selectedIndex = Math.max(this._selectedIndex - 1, 0);\n  }\n\n  /** Resets the stepper to its initial state. Note that this includes clearing form data. */\n  reset(): void {\n    this._updateSelectedItemIndex(0);\n    this.steps.forEach(step => step.reset());\n    this._stateChanged();\n  }\n\n  /** Returns a unique id for each step label element. */\n  _getStepLabelId(i: number): string {\n    return `cdk-step-label-${this._groupId}-${i}`;\n  }\n\n  /** Returns unique id for each step content element. */\n  _getStepContentId(i: number): string {\n    return `cdk-step-content-${this._groupId}-${i}`;\n  }\n\n  /** Marks the component to be change detected. */\n  _stateChanged() {\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** Returns position state of the step with the given index. */\n  _getAnimationDirection(index: number): StepContentPositionState {\n    const position = index - this._selectedIndex;\n    if (position < 0) {\n      return this._layoutDirection() === 'rtl' ? 'next' : 'previous';\n    } else if (position > 0) {\n      return this._layoutDirection() === 'rtl' ? 'previous' : 'next';\n    }\n    return 'current';\n  }\n\n  /** Returns the type of icon to be displayed. */\n  _getIndicatorType(index: number, state: StepState = STEP_STATE.NUMBER): StepState {\n    const step = this.steps.toArray()[index];\n    const isCurrentStep = this._isCurrentStep(index);\n\n    return step._displayDefaultIndicatorType ? this._getDefaultIndicatorLogic(step, isCurrentStep) :\n                                               this._getGuidelineLogic(step, isCurrentStep, state);\n  }\n\n  private _getDefaultIndicatorLogic(step: CdkStep, isCurrentStep: boolean): StepState {\n    if (step._showError && step.hasError && !isCurrentStep) {\n      return STEP_STATE.ERROR;\n    } else if (!step.completed || isCurrentStep) {\n      return STEP_STATE.NUMBER;\n    } else {\n      return step.editable ? STEP_STATE.EDIT : STEP_STATE.DONE;\n    }\n  }\n\n  private _getGuidelineLogic(\n      step: CdkStep, isCurrentStep: boolean, state: StepState = STEP_STATE.NUMBER): StepState {\n    if (step._showError && step.hasError && !isCurrentStep) {\n      return STEP_STATE.ERROR;\n    } else if (step.completed && !isCurrentStep) {\n      return STEP_STATE.DONE;\n    } else if (step.completed && isCurrentStep) {\n      return state;\n    } else if (step.editable && isCurrentStep) {\n      return STEP_STATE.EDIT;\n    } else {\n      return state;\n    }\n  }\n\n  private _isCurrentStep(index: number) {\n    return this._selectedIndex === index;\n  }\n\n  /** Returns the index of the currently-focused step header. */\n  _getFocusIndex() {\n    return this._keyManager ? this._keyManager.activeItemIndex : this._selectedIndex;\n  }\n\n  private _updateSelectedItemIndex(newIndex: number): void {\n    const stepsArray = this.steps.toArray();\n    this.selectionChange.emit({\n      selectedIndex: newIndex,\n      previouslySelectedIndex: this._selectedIndex,\n      selectedStep: stepsArray[newIndex],\n      previouslySelectedStep: stepsArray[this._selectedIndex],\n    });\n\n    // If focus is inside the stepper, move it to the next header, otherwise it may become\n    // lost when the active step content is hidden. We can't be more granular with the check\n    // (e.g. checking whether focus is inside the active step), because we don't have a\n    // reference to the elements that are rendering out the content.\n    this._containsFocus() ? this._keyManager.setActiveItem(newIndex) :\n                            this._keyManager.updateActiveItemIndex(newIndex);\n\n    this._selectedIndex = newIndex;\n    this._stateChanged();\n  }\n\n  _onKeydown(event: KeyboardEvent) {\n    const hasModifier = hasModifierKey(event);\n    const keyCode = event.keyCode;\n    const manager = this._keyManager;\n\n    if (manager.activeItemIndex != null && !hasModifier &&\n        (keyCode === SPACE || keyCode === ENTER)) {\n      this.selectedIndex = manager.activeItemIndex;\n      event.preventDefault();\n    } else if (keyCode === HOME) {\n      manager.setFirstItemActive();\n      event.preventDefault();\n    } else if (keyCode === END) {\n      manager.setLastItemActive();\n      event.preventDefault();\n    } else {\n      manager.onKeydown(event);\n    }\n  }\n\n  private _anyControlsInvalidOrPending(index: number): boolean {\n    const steps = this.steps.toArray();\n\n    steps[this._selectedIndex].interacted = true;\n\n    if (this._linear && index >= 0) {\n      return steps.slice(0, index).some(step => {\n        const control = step.stepControl;\n        const isIncomplete =\n            control ? (control.invalid || control.pending || !step.interacted) : !step.completed;\n        return isIncomplete && !step.optional && !step._completedOverride;\n      });\n    }\n\n    return false;\n  }\n\n  private _layoutDirection(): Direction {\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n  }\n\n  /** Checks whether the stepper contains the focused element. */\n  private _containsFocus(): boolean {\n    if (!this._document || !this._elementRef) {\n      return false;\n    }\n\n    const stepperElement = this._elementRef.nativeElement;\n    const focusedElement = this._document.activeElement;\n    return stepperElement === focusedElement || stepperElement.contains(focusedElement);\n  }\n}\n\n\n/**\n * Simplified representation of a FormControl from @angular/forms.\n * Used to avoid having to bring in @angular/forms for a single optional interface.\n * @docs-private\n */\ninterface FormControlLike {\n  asyncValidator: () => any | null;\n  dirty: boolean;\n  disabled: boolean;\n  enabled: boolean;\n  errors: {[key: string]: any} | null;\n  invalid: boolean;\n  parent: any;\n  pending: boolean;\n  pristine: boolean;\n  root: FormControlLike;\n  status: string;\n  statusChanges: Observable<any>;\n  touched: boolean;\n  untouched: boolean;\n  updateOn: any;\n  valid: boolean;\n  validator: () => any | null;\n  value: any;\n  valueChanges: Observable<any>;\n  clearAsyncValidators(): void;\n  clearValidators(): void;\n  disable(opts?: any): void;\n  enable(opts?: any): void;\n  get(path: (string | number)[] | string): FormControlLike | null;\n  getError(errorCode: string, path?: (string | number)[] | string): any;\n  hasError(errorCode: string, path?: (string | number)[] | string): boolean;\n  markAllAsTouched(): void;\n  markAsDirty(opts?: any): void;\n  markAsPending(opts?: any): void;\n  markAsPristine(opts?: any): void;\n  markAsTouched(opts?: any): void;\n  markAsUntouched(opts?: any): void;\n  patchValue(value: any, options?: Object): void;\n  reset(value?: any, options?: Object): void;\n  setAsyncValidators(newValidator: () => any | (() => any)[] | null): void;\n  setErrors(errors: {[key: string]: any} | null, opts?: any): void;\n  setParent(parent: any): void;\n  setValidators(newValidator: () => any | (() => any)[] | null): void;\n  setValue(value: any, options?: Object): void;\n  updateValueAndValidity(opts?: any): void;\n  patchValue(value: any, options?: any): void;\n  registerOnChange(fn: Function): void;\n  registerOnDisabledChange(fn: (isDisabled: boolean) => void): void;\n  reset(formState?: any, options?: any): void;\n  setValue(value: any, options?: any): void;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, HostListener, Input} from '@angular/core';\n\nimport {CdkStepper} from './stepper';\n\n/** Button that moves to the next step in a stepper workflow. */\n@Directive({\n  selector: 'button[cdkStepperNext]',\n  host: {\n    '[type]': 'type',\n  }\n})\nexport class CdkStepperNext {\n  /** Type of the next button. Defaults to \"submit\" if not specified. */\n  @Input() type: string = 'submit';\n\n  constructor(public _stepper: CdkStepper) {}\n\n  // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n  // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n  // ViewEngine they're overwritten.\n  // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n  // tslint:disable-next-line:no-host-decorator-in-concrete\n  @HostListener('click')\n  _handleClick() {\n    this._stepper.next();\n  }\n}\n\n/** Button that moves to the previous step in a stepper workflow. */\n@Directive({\n  selector: 'button[cdkStepperPrevious]',\n  host: {\n    '[type]': 'type',\n  }\n})\nexport class CdkStepperPrevious {\n  /** Type of the previous button. Defaults to \"button\" if not specified. */\n  @Input() type: string = 'button';\n\n  constructor(public _stepper: CdkStepper) {}\n\n  // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n  // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n  // ViewEngine they're overwritten.\n  // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n  // tslint:disable-next-line:no-host-decorator-in-concrete\n  @HostListener('click')\n  _handleClick() {\n    this._stepper.previous();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {CdkStepper, CdkStep} from './stepper';\nimport {CommonModule} from '@angular/common';\nimport {CdkStepLabel} from './step-label';\nimport {CdkStepperNext, CdkStepperPrevious} from './stepper-button';\nimport {CdkStepHeader} from './step-header';\nimport {BidiModule} from '@angular/cdk/bidi';\n\n@NgModule({\n  imports: [BidiModule, CommonModule],\n  exports: [\n    CdkStep,\n    CdkStepper,\n    CdkStepHeader,\n    CdkStepLabel,\n    CdkStepperNext,\n    CdkStepperPrevious,\n  ],\n  declarations: [\n    CdkStep,\n    CdkStepper,\n    CdkStepHeader,\n    CdkStepLabel,\n    CdkStepperNext,\n    CdkStepperPrevious,\n  ]\n})\nexport class CdkStepperModule {}\n"]}