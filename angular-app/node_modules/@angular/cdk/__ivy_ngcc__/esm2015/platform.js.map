{"version":3,"file":"platform.js","sources":["../../../src/cdk/platform/platform.ts","../../../src/cdk/platform/platform-module.ts","../../../src/cdk/platform/features/input-types.ts","../../../src/cdk/platform/features/passive-listeners.ts","../../../src/cdk/platform/features/scrolling.ts","../../../src/cdk/platform/features/shadow-dom.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Inject, Injectable, Optional, PLATFORM_ID} from '@angular/core';\nimport {isPlatformBrowser} from '@angular/common';\n\n// Whether the current platform supports the V8 Break Iterator. The V8 check\n// is necessary to detect all Blink based browsers.\nlet hasV8BreakIterator: boolean;\n\n// We need a try/catch around the reference to `Intl`, because accessing it in some cases can\n// cause IE to throw. These cases are tied to particular versions of Windows and can happen if\n// the consumer is providing a polyfilled `Map`. See:\n// https://github.com/Microsoft/ChakraCore/issues/3189\n// https://github.com/angular/components/issues/15687\ntry {\n  hasV8BreakIterator = (typeof Intl !== 'undefined' && (Intl as any).v8BreakIterator);\n} catch {\n  hasV8BreakIterator = false;\n}\n\n/**\n * Service to detect the current platform by comparing the userAgent strings and\n * checking browser-specific global properties.\n */\n@Injectable({providedIn: 'root'})\nexport class Platform {\n  /**\n   * Whether the Angular application is being rendered in the browser.\n   * We want to use the Angular platform check because if the Document is shimmed\n   * without the navigator, the following checks will fail. This is preferred because\n   * sometimes the Document may be shimmed without the user's knowledge or intention\n   */\n  isBrowser: boolean = this._platformId ?\n      isPlatformBrowser(this._platformId) : typeof document === 'object' && !!document;\n\n  /** Whether the current browser is Microsoft Edge. */\n  EDGE: boolean = this.isBrowser && /(edge)/i.test(navigator.userAgent);\n\n  /** Whether the current rendering engine is Microsoft Trident. */\n  TRIDENT: boolean = this.isBrowser && /(msie|trident)/i.test(navigator.userAgent);\n\n  /** Whether the current rendering engine is Blink. */\n  // EdgeHTML and Trident mock Blink specific things and need to be excluded from this check.\n  BLINK: boolean = this.isBrowser && (!!((window as any).chrome || hasV8BreakIterator) &&\n      typeof CSS !== 'undefined' && !this.EDGE && !this.TRIDENT);\n\n  /** Whether the current rendering engine is WebKit. */\n  // Webkit is part of the userAgent in EdgeHTML, Blink and Trident. Therefore we need to\n  // ensure that Webkit runs standalone and is not used as another engine's base.\n  WEBKIT: boolean = this.isBrowser &&\n      /AppleWebKit/i.test(navigator.userAgent) && !this.BLINK && !this.EDGE && !this.TRIDENT;\n\n  /** Whether the current platform is Apple iOS. */\n  IOS: boolean = this.isBrowser && /iPad|iPhone|iPod/.test(navigator.userAgent) &&\n      !('MSStream' in window);\n\n  /** Whether the current browser is Firefox. */\n  // It's difficult to detect the plain Gecko engine, because most of the browsers identify\n  // them self as Gecko-like browsers and modify the userAgent's according to that.\n  // Since we only cover one explicit Firefox case, we can simply check for Firefox\n  // instead of having an unstable check for Gecko.\n  FIREFOX: boolean = this.isBrowser && /(firefox|minefield)/i.test(navigator.userAgent);\n\n  /** Whether the current platform is Android. */\n  // Trident on mobile adds the android platform to the userAgent to trick detections.\n  ANDROID: boolean = this.isBrowser && /android/i.test(navigator.userAgent) && !this.TRIDENT;\n\n  /** Whether the current browser is Safari. */\n  // Safari browsers will include the Safari keyword in their userAgent. Some browsers may fake\n  // this and just place the Safari keyword in the userAgent. To be more safe about Safari every\n  // Safari browser should also use Webkit as its layout engine.\n  SAFARI: boolean = this.isBrowser && /safari/i.test(navigator.userAgent) && this.WEBKIT;\n\n  /**\n   * @breaking-change 8.0.0 remove optional decorator\n   */\n  constructor(@Optional() @Inject(PLATFORM_ID) private _platformId?: Object) {\n}\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\n\n\n@NgModule({})\nexport class PlatformModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Cached result Set of input types support by the current browser. */\nlet supportedInputTypes: Set<string>;\n\n/** Types of `<input>` that *might* be supported. */\nconst candidateInputTypes = [\n  // `color` must come first. Chrome 56 shows a warning if we change the type to `color` after\n  // first changing it to something else:\n  // The specified value \"\" does not conform to the required format.\n  // The format is \"#rrggbb\" where rr, gg, bb are two-digit hexadecimal numbers.\n  'color',\n  'button',\n  'checkbox',\n  'date',\n  'datetime-local',\n  'email',\n  'file',\n  'hidden',\n  'image',\n  'month',\n  'number',\n  'password',\n  'radio',\n  'range',\n  'reset',\n  'search',\n  'submit',\n  'tel',\n  'text',\n  'time',\n  'url',\n  'week',\n];\n\n/** @returns The input types supported by this browser. */\nexport function getSupportedInputTypes(): Set<string> {\n  // Result is cached.\n  if (supportedInputTypes) {\n    return supportedInputTypes;\n  }\n\n  // We can't check if an input type is not supported until we're on the browser, so say that\n  // everything is supported when not on the browser. We don't use `Platform` here since it's\n  // just a helper function and can't inject it.\n  if (typeof document !== 'object' || !document) {\n    supportedInputTypes = new Set(candidateInputTypes);\n    return supportedInputTypes;\n  }\n\n  let featureTestInput = document.createElement('input');\n  supportedInputTypes = new Set(candidateInputTypes.filter(value => {\n    featureTestInput.setAttribute('type', value);\n    return featureTestInput.type === value;\n  }));\n\n  return supportedInputTypes;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Cached result of whether the user's browser supports passive event listeners. */\nlet supportsPassiveEvents: boolean;\n\n/**\n * Checks whether the user's browser supports passive event listeners.\n * See: https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n */\nexport function supportsPassiveEventListeners(): boolean {\n  if (supportsPassiveEvents == null && typeof window !== 'undefined') {\n    try {\n      window.addEventListener('test', null!, Object.defineProperty({}, 'passive', {\n        get: () => supportsPassiveEvents = true\n      }));\n    } finally {\n      supportsPassiveEvents = supportsPassiveEvents || false;\n    }\n  }\n\n  return supportsPassiveEvents;\n}\n\n/**\n * Normalizes an `AddEventListener` object to something that can be passed\n * to `addEventListener` on any browser, no matter whether it supports the\n * `options` parameter.\n * @param options Object to be normalized.\n */\nexport function normalizePassiveListenerOptions(options: AddEventListenerOptions):\n  AddEventListenerOptions | boolean {\n  return supportsPassiveEventListeners() ? options : !!options.capture;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** The possible ways the browser may handle the horizontal scroll axis in RTL languages. */\nexport enum RtlScrollAxisType {\n  /**\n   * scrollLeft is 0 when scrolled all the way left and (scrollWidth - clientWidth) when scrolled\n   * all the way right.\n   */\n  NORMAL,\n  /**\n   * scrollLeft is -(scrollWidth - clientWidth) when scrolled all the way left and 0 when scrolled\n   * all the way right.\n   */\n  NEGATED,\n  /**\n   * scrollLeft is (scrollWidth - clientWidth) when scrolled all the way left and 0 when scrolled\n   * all the way right.\n   */\n  INVERTED\n}\n\n/** Cached result of the way the browser handles the horizontal scroll axis in RTL mode. */\nlet rtlScrollAxisType: RtlScrollAxisType;\n\n/** Check whether the browser supports scroll behaviors. */\nexport function supportsScrollBehavior(): boolean {\n  return !!(typeof document == 'object'  && 'scrollBehavior' in document.documentElement!.style);\n}\n\n/**\n * Checks the type of RTL scroll axis used by this browser. As of time of writing, Chrome is NORMAL,\n * Firefox & Safari are NEGATED, and IE & Edge are INVERTED.\n */\nexport function getRtlScrollAxisType(): RtlScrollAxisType {\n  // We can't check unless we're on the browser. Just assume 'normal' if we're not.\n  if (typeof document !== 'object' || !document) {\n    return RtlScrollAxisType.NORMAL;\n  }\n\n  if (!rtlScrollAxisType) {\n    // Create a 1px wide scrolling container and a 2px wide content element.\n    const scrollContainer = document.createElement('div');\n    const containerStyle = scrollContainer.style;\n    scrollContainer.dir = 'rtl';\n    containerStyle.height = '1px';\n    containerStyle.width = '1px';\n    containerStyle.overflow = 'auto';\n    containerStyle.visibility = 'hidden';\n    containerStyle.pointerEvents = 'none';\n    containerStyle.position = 'absolute';\n\n    const content = document.createElement('div');\n    const contentStyle = content.style;\n    contentStyle.width = '2px';\n    contentStyle.height = '1px';\n\n    scrollContainer.appendChild(content);\n    document.body.appendChild(scrollContainer);\n\n    rtlScrollAxisType = RtlScrollAxisType.NORMAL;\n\n    // The viewport starts scrolled all the way to the right in RTL mode. If we are in a NORMAL\n    // browser this would mean that the scrollLeft should be 1. If it's zero instead we know we're\n    // dealing with one of the other two types of browsers.\n    if (scrollContainer.scrollLeft === 0) {\n      // In a NEGATED browser the scrollLeft is always somewhere in [-maxScrollAmount, 0]. For an\n      // INVERTED browser it is always somewhere in [0, maxScrollAmount]. We can determine which by\n      // setting to the scrollLeft to 1. This is past the max for a NEGATED browser, so it will\n      // return 0 when we read it again.\n      scrollContainer.scrollLeft = 1;\n      rtlScrollAxisType =\n          scrollContainer.scrollLeft === 0 ? RtlScrollAxisType.NEGATED : RtlScrollAxisType.INVERTED;\n    }\n\n    scrollContainer.parentNode!.removeChild(scrollContainer);\n  }\n  return rtlScrollAxisType;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nlet shadowDomIsSupported: boolean;\n\n/** Checks whether the user's browser support Shadow DOM. */\nexport function _supportsShadowDom(): boolean {\n  if (shadowDomIsSupported == null) {\n    const head = typeof document !== 'undefined' ? document.head : null;\n    shadowDomIsSupported = !!(head && ((head as any).createShadowRoot || head.attachShadow));\n  }\n\n  return shadowDomIsSupported;\n}\n"]}