{"version":3,"file":"accordion.js","sources":["../../../src/cdk/accordion/accordion.ts","../../../src/cdk/accordion/accordion-item.ts","../../../src/cdk/accordion/accordion-module.ts"],"names":["nextId"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {Directive, Input, OnChanges, OnDestroy, SimpleChanges} from '@angular/core';\nimport {Subject} from 'rxjs';\n\n/** Used to generate unique ID for each accordion. */\nlet nextId = 0;\n\n/**\n * Directive whose purpose is to manage the expanded state of CdkAccordionItem children.\n */\n@Directive({\n  selector: 'cdk-accordion, [cdkAccordion]',\n  exportAs: 'cdkAccordion',\n})\nexport class CdkAccordion implements OnDestroy, OnChanges {\n  /** Emits when the state of the accordion changes */\n  readonly _stateChanges = new Subject<SimpleChanges>();\n\n  /** Stream that emits true/false when openAll/closeAll is triggered. */\n  readonly _openCloseAllActions: Subject<boolean> = new Subject<boolean>();\n\n  /** A readonly id value to use for unique selection coordination. */\n  readonly id = `cdk-accordion-${nextId++}`;\n\n  /** Whether the accordion should allow multiple expanded accordion items simultaneously. */\n  @Input()\n  get multi(): boolean { return this._multi; }\n  set multi(multi: boolean) { this._multi = coerceBooleanProperty(multi); }\n  private _multi: boolean = false;\n\n  /** Opens all enabled accordion items in an accordion where multi is enabled. */\n  openAll(): void {\n    this._openCloseAll(true);\n  }\n\n  /** Closes all enabled accordion items in an accordion where multi is enabled. */\n  closeAll(): void {\n    this._openCloseAll(false);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this._stateChanges.next(changes);\n  }\n\n  ngOnDestroy() {\n    this._stateChanges.complete();\n  }\n\n  private _openCloseAll(expanded: boolean): void {\n    if (this.multi) {\n      this._openCloseAllActions.next(expanded);\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  Output,\n  Directive,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  Optional,\n  ChangeDetectorRef,\n  SkipSelf,\n} from '@angular/core';\nimport {UniqueSelectionDispatcher} from '@angular/cdk/collections';\nimport {CdkAccordion} from './accordion';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {Subscription} from 'rxjs';\n\n/** Used to generate unique ID for each accordion item. */\nlet nextId = 0;\n\n/**\n * An basic directive expected to be extended and decorated as a component.  Sets up all\n * events and attributes needed to be managed by a CdkAccordion parent.\n */\n@Directive({\n  selector: 'cdk-accordion-item, [cdkAccordionItem]',\n  exportAs: 'cdkAccordionItem',\n  providers: [\n    // Provide CdkAccordion as undefined to prevent nested accordion items from registering\n    // to the same accordion.\n    {provide: CdkAccordion, useValue: undefined},\n  ],\n})\nexport class CdkAccordionItem implements OnDestroy {\n  /** Subscription to openAll/closeAll events. */\n  private _openCloseAllSubscription = Subscription.EMPTY;\n  /** Event emitted every time the AccordionItem is closed. */\n  @Output() closed: EventEmitter<void> = new EventEmitter<void>();\n  /** Event emitted every time the AccordionItem is opened. */\n  @Output() opened: EventEmitter<void> = new EventEmitter<void>();\n  /** Event emitted when the AccordionItem is destroyed. */\n  @Output() destroyed: EventEmitter<void> = new EventEmitter<void>();\n\n  /**\n   * Emits whenever the expanded state of the accordion changes.\n   * Primarily used to facilitate two-way binding.\n   * @docs-private\n   */\n  @Output() expandedChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  /** The unique AccordionItem id. */\n  readonly id: string = `cdk-accordion-child-${nextId++}`;\n\n  /** Whether the AccordionItem is expanded. */\n  @Input()\n  get expanded(): any { return this._expanded; }\n  set expanded(expanded: any) {\n    expanded = coerceBooleanProperty(expanded);\n\n    // Only emit events and update the internal value if the value changes.\n    if (this._expanded !== expanded) {\n      this._expanded = expanded;\n      this.expandedChange.emit(expanded);\n\n      if (expanded) {\n        this.opened.emit();\n        /**\n         * In the unique selection dispatcher, the id parameter is the id of the CdkAccordionItem,\n         * the name value is the id of the accordion.\n         */\n        const accordionId = this.accordion ? this.accordion.id : this.id;\n        this._expansionDispatcher.notify(this.id, accordionId);\n      } else {\n        this.closed.emit();\n      }\n\n      // Ensures that the animation will run when the value is set outside of an `@Input`.\n      // This includes cases like the open, close and toggle methods.\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  private _expanded = false;\n\n  /** Whether the AccordionItem is disabled. */\n  @Input()\n  get disabled() { return this._disabled; }\n  set disabled(disabled: any) { this._disabled = coerceBooleanProperty(disabled); }\n  private _disabled: boolean = false;\n\n  /** Unregister function for _expansionDispatcher. */\n  private _removeUniqueSelectionListener: () => void = () => {};\n\n  constructor(@Optional() @SkipSelf() public accordion: CdkAccordion,\n              private _changeDetectorRef: ChangeDetectorRef,\n              protected _expansionDispatcher: UniqueSelectionDispatcher) {\n    this._removeUniqueSelectionListener =\n      _expansionDispatcher.listen((id: string, accordionId: string) => {\n        if (this.accordion && !this.accordion.multi &&\n            this.accordion.id === accordionId && this.id !== id) {\n          this.expanded = false;\n        }\n      });\n\n    // When an accordion item is hosted in an accordion, subscribe to open/close events.\n    if (this.accordion) {\n      this._openCloseAllSubscription = this._subscribeToOpenCloseAllActions();\n    }\n  }\n\n  /** Emits an event for the accordion item being destroyed. */\n  ngOnDestroy() {\n    this.opened.complete();\n    this.closed.complete();\n    this.destroyed.emit();\n    this.destroyed.complete();\n    this._removeUniqueSelectionListener();\n    this._openCloseAllSubscription.unsubscribe();\n  }\n\n  /** Toggles the expanded state of the accordion item. */\n  toggle(): void {\n    if (!this.disabled) {\n      this.expanded = !this.expanded;\n    }\n  }\n\n  /** Sets the expanded state of the accordion item to false. */\n  close(): void {\n    if (!this.disabled) {\n      this.expanded = false;\n    }\n  }\n\n  /** Sets the expanded state of the accordion item to true. */\n  open(): void {\n    if (!this.disabled) {\n      this.expanded = true;\n    }\n  }\n\n  private _subscribeToOpenCloseAllActions(): Subscription {\n    return this.accordion._openCloseAllActions.subscribe(expanded => {\n      // Only change expanded state if item is enabled\n      if (!this.disabled) {\n        this.expanded = expanded;\n      }\n    });\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {CdkAccordion} from './accordion';\nimport {CdkAccordionItem} from './accordion-item';\n\n\n@NgModule({\n  exports: [CdkAccordion, CdkAccordionItem],\n  declarations: [CdkAccordion, CdkAccordionItem],\n})\nexport class CdkAccordionModule {}\n"]}